// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_lite.proto

package com.google.protobuf;

public final class UnittestLite {
  private UnittestLite() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(com.google.protobuf.UnittestLite.optionalInt32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalInt64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalUint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalUint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalSint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalSint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalFixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalFixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalSfixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalSfixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalFloatExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalDoubleExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalBoolExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalStringExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalBytesExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalGroupExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalNestedMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalForeignMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalImportMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalNestedEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalForeignEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalImportEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalStringPieceExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.optionalCordExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedInt32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedInt64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedUint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedUint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedSint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedSint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedFixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedFixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedSfixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedSfixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedFloatExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedDoubleExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedBoolExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedStringExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedBytesExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedGroupExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedNestedMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedForeignMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedImportMessageExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedNestedEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedForeignEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedImportEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedStringPieceExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.repeatedCordExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultInt32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultInt64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultUint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultUint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultSint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultSint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultFixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultFixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultSfixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultSfixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultFloatExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultDoubleExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultBoolExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultStringExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultBytesExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultNestedEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultForeignEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultImportEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultStringPieceExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.defaultCordExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedInt32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedInt64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedUint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedUint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedSint32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedSint64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedFixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedFixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedSfixed32ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedSfixed64ExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedFloatExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedDoubleExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedBoolExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.packedEnumExtensionLite);
    registry.add(com.google.protobuf.UnittestLite.TestNestedExtensionLite.nestedExtension);
  }
  public enum ForeignEnumLite
      implements com.google.protobuf.Internal.EnumLite {
    FOREIGN_LITE_FOO(0, 4),
    FOREIGN_LITE_BAR(1, 5),
    FOREIGN_LITE_BAZ(2, 6),
    ;
    
    public static final int FOREIGN_LITE_FOO_VALUE = 4;
    public static final int FOREIGN_LITE_BAR_VALUE = 5;
    public static final int FOREIGN_LITE_BAZ_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static ForeignEnumLite valueOf(int value) {
      switch (value) {
        case 4: return FOREIGN_LITE_FOO;
        case 5: return FOREIGN_LITE_BAR;
        case 6: return FOREIGN_LITE_BAZ;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ForeignEnumLite>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ForeignEnumLite>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ForeignEnumLite>() {
            public ForeignEnumLite findValueByNumber(int number) {
              return ForeignEnumLite.valueOf(number);
            }
          };
    
    private final int value;
    
    private ForeignEnumLite(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:protobuf_unittest.ForeignEnumLite)
  }
  
  public interface TestAllTypesLiteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int32 optional_int32 = 1;
    boolean hasOptionalInt32();
    int getOptionalInt32();
    
    // optional int64 optional_int64 = 2;
    boolean hasOptionalInt64();
    long getOptionalInt64();
    
    // optional uint32 optional_uint32 = 3;
    boolean hasOptionalUint32();
    int getOptionalUint32();
    
    // optional uint64 optional_uint64 = 4;
    boolean hasOptionalUint64();
    long getOptionalUint64();
    
    // optional sint32 optional_sint32 = 5;
    boolean hasOptionalSint32();
    int getOptionalSint32();
    
    // optional sint64 optional_sint64 = 6;
    boolean hasOptionalSint64();
    long getOptionalSint64();
    
    // optional fixed32 optional_fixed32 = 7;
    boolean hasOptionalFixed32();
    int getOptionalFixed32();
    
    // optional fixed64 optional_fixed64 = 8;
    boolean hasOptionalFixed64();
    long getOptionalFixed64();
    
    // optional sfixed32 optional_sfixed32 = 9;
    boolean hasOptionalSfixed32();
    int getOptionalSfixed32();
    
    // optional sfixed64 optional_sfixed64 = 10;
    boolean hasOptionalSfixed64();
    long getOptionalSfixed64();
    
    // optional float optional_float = 11;
    boolean hasOptionalFloat();
    float getOptionalFloat();
    
    // optional double optional_double = 12;
    boolean hasOptionalDouble();
    double getOptionalDouble();
    
    // optional bool optional_bool = 13;
    boolean hasOptionalBool();
    boolean getOptionalBool();
    
    // optional string optional_string = 14;
    boolean hasOptionalString();
    String getOptionalString();
    
    // optional bytes optional_bytes = 15;
    boolean hasOptionalBytes();
    com.google.protobuf.ByteString getOptionalBytes();
    
    // optional group OptionalGroup = 16 {
    boolean hasOptionalGroup();
    com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup getOptionalGroup();
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    boolean hasOptionalNestedMessage();
    com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getOptionalNestedMessage();
    
    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    boolean hasOptionalForeignMessage();
    com.google.protobuf.UnittestLite.ForeignMessageLite getOptionalForeignMessage();
    
    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    boolean hasOptionalImportMessage();
    com.google.protobuf.UnittestImportLite.ImportMessageLite getOptionalImportMessage();
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    boolean hasOptionalNestedEnum();
    com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getOptionalNestedEnum();
    
    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    boolean hasOptionalForeignEnum();
    com.google.protobuf.UnittestLite.ForeignEnumLite getOptionalForeignEnum();
    
    // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
    boolean hasOptionalImportEnum();
    com.google.protobuf.UnittestImportLite.ImportEnumLite getOptionalImportEnum();
    
    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    boolean hasOptionalStringPiece();
    String getOptionalStringPiece();
    
    // optional string optional_cord = 25 [ctype = CORD];
    boolean hasOptionalCord();
    String getOptionalCord();
    
    // repeated int32 repeated_int32 = 31;
    java.util.List<java.lang.Integer> getRepeatedInt32List();
    int getRepeatedInt32Count();
    int getRepeatedInt32(int index);
    
    // repeated int64 repeated_int64 = 32;
    java.util.List<java.lang.Long> getRepeatedInt64List();
    int getRepeatedInt64Count();
    long getRepeatedInt64(int index);
    
    // repeated uint32 repeated_uint32 = 33;
    java.util.List<java.lang.Integer> getRepeatedUint32List();
    int getRepeatedUint32Count();
    int getRepeatedUint32(int index);
    
    // repeated uint64 repeated_uint64 = 34;
    java.util.List<java.lang.Long> getRepeatedUint64List();
    int getRepeatedUint64Count();
    long getRepeatedUint64(int index);
    
    // repeated sint32 repeated_sint32 = 35;
    java.util.List<java.lang.Integer> getRepeatedSint32List();
    int getRepeatedSint32Count();
    int getRepeatedSint32(int index);
    
    // repeated sint64 repeated_sint64 = 36;
    java.util.List<java.lang.Long> getRepeatedSint64List();
    int getRepeatedSint64Count();
    long getRepeatedSint64(int index);
    
    // repeated fixed32 repeated_fixed32 = 37;
    java.util.List<java.lang.Integer> getRepeatedFixed32List();
    int getRepeatedFixed32Count();
    int getRepeatedFixed32(int index);
    
    // repeated fixed64 repeated_fixed64 = 38;
    java.util.List<java.lang.Long> getRepeatedFixed64List();
    int getRepeatedFixed64Count();
    long getRepeatedFixed64(int index);
    
    // repeated sfixed32 repeated_sfixed32 = 39;
    java.util.List<java.lang.Integer> getRepeatedSfixed32List();
    int getRepeatedSfixed32Count();
    int getRepeatedSfixed32(int index);
    
    // repeated sfixed64 repeated_sfixed64 = 40;
    java.util.List<java.lang.Long> getRepeatedSfixed64List();
    int getRepeatedSfixed64Count();
    long getRepeatedSfixed64(int index);
    
    // repeated float repeated_float = 41;
    java.util.List<java.lang.Float> getRepeatedFloatList();
    int getRepeatedFloatCount();
    float getRepeatedFloat(int index);
    
    // repeated double repeated_double = 42;
    java.util.List<java.lang.Double> getRepeatedDoubleList();
    int getRepeatedDoubleCount();
    double getRepeatedDouble(int index);
    
    // repeated bool repeated_bool = 43;
    java.util.List<java.lang.Boolean> getRepeatedBoolList();
    int getRepeatedBoolCount();
    boolean getRepeatedBool(int index);
    
    // repeated string repeated_string = 44;
    java.util.List<String> getRepeatedStringList();
    int getRepeatedStringCount();
    String getRepeatedString(int index);
    
    // repeated bytes repeated_bytes = 45;
    java.util.List<com.google.protobuf.ByteString> getRepeatedBytesList();
    int getRepeatedBytesCount();
    com.google.protobuf.ByteString getRepeatedBytes(int index);
    
    // repeated group RepeatedGroup = 46 {
    java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> 
        getRepeatedGroupList();
    com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup getRepeatedGroup(int index);
    int getRepeatedGroupCount();
    
    // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
    java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> 
        getRepeatedNestedMessageList();
    com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getRepeatedNestedMessage(int index);
    int getRepeatedNestedMessageCount();
    
    // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
    java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite> 
        getRepeatedForeignMessageList();
    com.google.protobuf.UnittestLite.ForeignMessageLite getRepeatedForeignMessage(int index);
    int getRepeatedForeignMessageCount();
    
    // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
    java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite> 
        getRepeatedImportMessageList();
    com.google.protobuf.UnittestImportLite.ImportMessageLite getRepeatedImportMessage(int index);
    int getRepeatedImportMessageCount();
    
    // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
    java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> getRepeatedNestedEnumList();
    int getRepeatedNestedEnumCount();
    com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getRepeatedNestedEnum(int index);
    
    // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
    java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getRepeatedForeignEnumList();
    int getRepeatedForeignEnumCount();
    com.google.protobuf.UnittestLite.ForeignEnumLite getRepeatedForeignEnum(int index);
    
    // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
    java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite> getRepeatedImportEnumList();
    int getRepeatedImportEnumCount();
    com.google.protobuf.UnittestImportLite.ImportEnumLite getRepeatedImportEnum(int index);
    
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    java.util.List<String> getRepeatedStringPieceList();
    int getRepeatedStringPieceCount();
    String getRepeatedStringPiece(int index);
    
    // repeated string repeated_cord = 55 [ctype = CORD];
    java.util.List<String> getRepeatedCordList();
    int getRepeatedCordCount();
    String getRepeatedCord(int index);
    
    // optional int32 default_int32 = 61 [default = 41];
    boolean hasDefaultInt32();
    int getDefaultInt32();
    
    // optional int64 default_int64 = 62 [default = 42];
    boolean hasDefaultInt64();
    long getDefaultInt64();
    
    // optional uint32 default_uint32 = 63 [default = 43];
    boolean hasDefaultUint32();
    int getDefaultUint32();
    
    // optional uint64 default_uint64 = 64 [default = 44];
    boolean hasDefaultUint64();
    long getDefaultUint64();
    
    // optional sint32 default_sint32 = 65 [default = -45];
    boolean hasDefaultSint32();
    int getDefaultSint32();
    
    // optional sint64 default_sint64 = 66 [default = 46];
    boolean hasDefaultSint64();
    long getDefaultSint64();
    
    // optional fixed32 default_fixed32 = 67 [default = 47];
    boolean hasDefaultFixed32();
    int getDefaultFixed32();
    
    // optional fixed64 default_fixed64 = 68 [default = 48];
    boolean hasDefaultFixed64();
    long getDefaultFixed64();
    
    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    boolean hasDefaultSfixed32();
    int getDefaultSfixed32();
    
    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    boolean hasDefaultSfixed64();
    long getDefaultSfixed64();
    
    // optional float default_float = 71 [default = 51.5];
    boolean hasDefaultFloat();
    float getDefaultFloat();
    
    // optional double default_double = 72 [default = 52000];
    boolean hasDefaultDouble();
    double getDefaultDouble();
    
    // optional bool default_bool = 73 [default = true];
    boolean hasDefaultBool();
    boolean getDefaultBool();
    
    // optional string default_string = 74 [default = "hello"];
    boolean hasDefaultString();
    String getDefaultString();
    
    // optional bytes default_bytes = 75 [default = "world"];
    boolean hasDefaultBytes();
    com.google.protobuf.ByteString getDefaultBytes();
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
    boolean hasDefaultNestedEnum();
    com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getDefaultNestedEnum();
    
    // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
    boolean hasDefaultForeignEnum();
    com.google.protobuf.UnittestLite.ForeignEnumLite getDefaultForeignEnum();
    
    // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
    boolean hasDefaultImportEnum();
    com.google.protobuf.UnittestImportLite.ImportEnumLite getDefaultImportEnum();
    
    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    boolean hasDefaultStringPiece();
    String getDefaultStringPiece();
    
    // optional string default_cord = 85 [default = "123", ctype = CORD];
    boolean hasDefaultCord();
    String getDefaultCord();
  }
  public static final class TestAllTypesLite extends
      com.google.protobuf.GeneratedMessageLite
      implements TestAllTypesLiteOrBuilder {
    // Use TestAllTypesLite.newBuilder() to construct.
    private TestAllTypesLite(Builder builder) {
      super(builder);
    }
    private TestAllTypesLite(boolean noInit) {}
    
    private static final TestAllTypesLite defaultInstance;
    public static TestAllTypesLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestAllTypesLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum NestedEnum
        implements com.google.protobuf.Internal.EnumLite {
      FOO(0, 1),
      BAR(1, 2),
      BAZ(2, 3),
      ;
      
      public static final int FOO_VALUE = 1;
      public static final int BAR_VALUE = 2;
      public static final int BAZ_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static NestedEnum valueOf(int value) {
        switch (value) {
          case 1: return FOO;
          case 2: return BAR;
          case 3: return BAZ;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NestedEnum>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestedEnum>() {
              public NestedEnum findValueByNumber(int number) {
                return NestedEnum.valueOf(number);
              }
            };
      
      private final int value;
      
      private NestedEnum(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:protobuf_unittest.TestAllTypesLite.NestedEnum)
    }
    
    public interface NestedMessageOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // optional int32 bb = 1;
      boolean hasBb();
      int getBb();
    }
    public static final class NestedMessage extends
        com.google.protobuf.GeneratedMessageLite
        implements NestedMessageOrBuilder {
      // Use NestedMessage.newBuilder() to construct.
      private NestedMessage(Builder builder) {
        super(builder);
      }
      private NestedMessage(boolean noInit) {}
      
      private static final NestedMessage defaultInstance;
      public static NestedMessage getDefaultInstance() {
        return defaultInstance;
      }
      
      public NestedMessage getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // optional int32 bb = 1;
      public static final int BB_FIELD_NUMBER = 1;
      private int bb_;
      public boolean hasBb() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getBb() {
        return bb_;
      }
      
      private void initFields() {
        bb_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, bb_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, bb_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage, Builder>
          implements com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessageOrBuilder {
        // Construct using com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          bb_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getDefaultInstanceForType() {
          return com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance();
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage build() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage buildPartial() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage result = new com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.bb_ = bb_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage other) {
          if (other == com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance()) return this;
          if (other.hasBb()) {
            setBb(other.getBb());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                bb_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 bb = 1;
        private int bb_ ;
        public boolean hasBb() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getBb() {
          return bb_;
        }
        public Builder setBb(int value) {
          bitField0_ |= 0x00000001;
          bb_ = value;
          
          return this;
        }
        public Builder clearBb() {
          bitField0_ = (bitField0_ & ~0x00000001);
          bb_ = 0;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestAllTypesLite.NestedMessage)
      }
      
      static {
        defaultInstance = new NestedMessage(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:protobuf_unittest.TestAllTypesLite.NestedMessage)
    }
    
    public interface OptionalGroupOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // optional int32 a = 17;
      boolean hasA();
      int getA();
    }
    public static final class OptionalGroup extends
        com.google.protobuf.GeneratedMessageLite
        implements OptionalGroupOrBuilder {
      // Use OptionalGroup.newBuilder() to construct.
      private OptionalGroup(Builder builder) {
        super(builder);
      }
      private OptionalGroup(boolean noInit) {}
      
      private static final OptionalGroup defaultInstance;
      public static OptionalGroup getDefaultInstance() {
        return defaultInstance;
      }
      
      public OptionalGroup getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // optional int32 a = 17;
      public static final int A_FIELD_NUMBER = 17;
      private int a_;
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getA() {
        return a_;
      }
      
      private void initFields() {
        a_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(17, a_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(17, a_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup, Builder>
          implements com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroupOrBuilder {
        // Construct using com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          a_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup getDefaultInstanceForType() {
          return com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance();
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup build() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup buildPartial() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup result = new com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.a_ = a_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup other) {
          if (other == com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance()) return this;
          if (other.hasA()) {
            setA(other.getA());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 136: {
                bitField0_ |= 0x00000001;
                a_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 a = 17;
        private int a_ ;
        public boolean hasA() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getA() {
          return a_;
        }
        public Builder setA(int value) {
          bitField0_ |= 0x00000001;
          a_ = value;
          
          return this;
        }
        public Builder clearA() {
          bitField0_ = (bitField0_ & ~0x00000001);
          a_ = 0;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestAllTypesLite.OptionalGroup)
      }
      
      static {
        defaultInstance = new OptionalGroup(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:protobuf_unittest.TestAllTypesLite.OptionalGroup)
    }
    
    public interface RepeatedGroupOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // optional int32 a = 47;
      boolean hasA();
      int getA();
    }
    public static final class RepeatedGroup extends
        com.google.protobuf.GeneratedMessageLite
        implements RepeatedGroupOrBuilder {
      // Use RepeatedGroup.newBuilder() to construct.
      private RepeatedGroup(Builder builder) {
        super(builder);
      }
      private RepeatedGroup(boolean noInit) {}
      
      private static final RepeatedGroup defaultInstance;
      public static RepeatedGroup getDefaultInstance() {
        return defaultInstance;
      }
      
      public RepeatedGroup getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // optional int32 a = 47;
      public static final int A_FIELD_NUMBER = 47;
      private int a_;
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getA() {
        return a_;
      }
      
      private void initFields() {
        a_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(47, a_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(47, a_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup, Builder>
          implements com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroupOrBuilder {
        // Construct using com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          a_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup getDefaultInstanceForType() {
          return com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.getDefaultInstance();
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup build() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup buildPartial() {
          com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup result = new com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.a_ = a_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup other) {
          if (other == com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.getDefaultInstance()) return this;
          if (other.hasA()) {
            setA(other.getA());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 376: {
                bitField0_ |= 0x00000001;
                a_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional int32 a = 47;
        private int a_ ;
        public boolean hasA() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getA() {
          return a_;
        }
        public Builder setA(int value) {
          bitField0_ |= 0x00000001;
          a_ = value;
          
          return this;
        }
        public Builder clearA() {
          bitField0_ = (bitField0_ & ~0x00000001);
          a_ = 0;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
      }
      
      static {
        defaultInstance = new RepeatedGroup(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:protobuf_unittest.TestAllTypesLite.RepeatedGroup)
    }
    
    private int bitField0_;
    private int bitField1_;
    // optional int32 optional_int32 = 1;
    public static final int OPTIONAL_INT32_FIELD_NUMBER = 1;
    private int optionalInt32_;
    public boolean hasOptionalInt32() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getOptionalInt32() {
      return optionalInt32_;
    }
    
    // optional int64 optional_int64 = 2;
    public static final int OPTIONAL_INT64_FIELD_NUMBER = 2;
    private long optionalInt64_;
    public boolean hasOptionalInt64() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getOptionalInt64() {
      return optionalInt64_;
    }
    
    // optional uint32 optional_uint32 = 3;
    public static final int OPTIONAL_UINT32_FIELD_NUMBER = 3;
    private int optionalUint32_;
    public boolean hasOptionalUint32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getOptionalUint32() {
      return optionalUint32_;
    }
    
    // optional uint64 optional_uint64 = 4;
    public static final int OPTIONAL_UINT64_FIELD_NUMBER = 4;
    private long optionalUint64_;
    public boolean hasOptionalUint64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getOptionalUint64() {
      return optionalUint64_;
    }
    
    // optional sint32 optional_sint32 = 5;
    public static final int OPTIONAL_SINT32_FIELD_NUMBER = 5;
    private int optionalSint32_;
    public boolean hasOptionalSint32() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getOptionalSint32() {
      return optionalSint32_;
    }
    
    // optional sint64 optional_sint64 = 6;
    public static final int OPTIONAL_SINT64_FIELD_NUMBER = 6;
    private long optionalSint64_;
    public boolean hasOptionalSint64() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getOptionalSint64() {
      return optionalSint64_;
    }
    
    // optional fixed32 optional_fixed32 = 7;
    public static final int OPTIONAL_FIXED32_FIELD_NUMBER = 7;
    private int optionalFixed32_;
    public boolean hasOptionalFixed32() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getOptionalFixed32() {
      return optionalFixed32_;
    }
    
    // optional fixed64 optional_fixed64 = 8;
    public static final int OPTIONAL_FIXED64_FIELD_NUMBER = 8;
    private long optionalFixed64_;
    public boolean hasOptionalFixed64() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getOptionalFixed64() {
      return optionalFixed64_;
    }
    
    // optional sfixed32 optional_sfixed32 = 9;
    public static final int OPTIONAL_SFIXED32_FIELD_NUMBER = 9;
    private int optionalSfixed32_;
    public boolean hasOptionalSfixed32() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getOptionalSfixed32() {
      return optionalSfixed32_;
    }
    
    // optional sfixed64 optional_sfixed64 = 10;
    public static final int OPTIONAL_SFIXED64_FIELD_NUMBER = 10;
    private long optionalSfixed64_;
    public boolean hasOptionalSfixed64() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getOptionalSfixed64() {
      return optionalSfixed64_;
    }
    
    // optional float optional_float = 11;
    public static final int OPTIONAL_FLOAT_FIELD_NUMBER = 11;
    private float optionalFloat_;
    public boolean hasOptionalFloat() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public float getOptionalFloat() {
      return optionalFloat_;
    }
    
    // optional double optional_double = 12;
    public static final int OPTIONAL_DOUBLE_FIELD_NUMBER = 12;
    private double optionalDouble_;
    public boolean hasOptionalDouble() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getOptionalDouble() {
      return optionalDouble_;
    }
    
    // optional bool optional_bool = 13;
    public static final int OPTIONAL_BOOL_FIELD_NUMBER = 13;
    private boolean optionalBool_;
    public boolean hasOptionalBool() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public boolean getOptionalBool() {
      return optionalBool_;
    }
    
    // optional string optional_string = 14;
    public static final int OPTIONAL_STRING_FIELD_NUMBER = 14;
    private java.lang.Object optionalString_;
    public boolean hasOptionalString() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getOptionalString() {
      java.lang.Object ref = optionalString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          optionalString_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOptionalStringBytes() {
      java.lang.Object ref = optionalString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        optionalString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes optional_bytes = 15;
    public static final int OPTIONAL_BYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString optionalBytes_;
    public boolean hasOptionalBytes() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public com.google.protobuf.ByteString getOptionalBytes() {
      return optionalBytes_;
    }
    
    // optional group OptionalGroup = 16 {
    public static final int OPTIONALGROUP_FIELD_NUMBER = 16;
    private com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup optionalGroup_;
    public boolean hasOptionalGroup() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup getOptionalGroup() {
      return optionalGroup_;
    }
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
    public static final int OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER = 18;
    private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage optionalNestedMessage_;
    public boolean hasOptionalNestedMessage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getOptionalNestedMessage() {
      return optionalNestedMessage_;
    }
    
    // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
    public static final int OPTIONAL_FOREIGN_MESSAGE_FIELD_NUMBER = 19;
    private com.google.protobuf.UnittestLite.ForeignMessageLite optionalForeignMessage_;
    public boolean hasOptionalForeignMessage() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public com.google.protobuf.UnittestLite.ForeignMessageLite getOptionalForeignMessage() {
      return optionalForeignMessage_;
    }
    
    // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
    public static final int OPTIONAL_IMPORT_MESSAGE_FIELD_NUMBER = 20;
    private com.google.protobuf.UnittestImportLite.ImportMessageLite optionalImportMessage_;
    public boolean hasOptionalImportMessage() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public com.google.protobuf.UnittestImportLite.ImportMessageLite getOptionalImportMessage() {
      return optionalImportMessage_;
    }
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
    public static final int OPTIONAL_NESTED_ENUM_FIELD_NUMBER = 21;
    private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum optionalNestedEnum_;
    public boolean hasOptionalNestedEnum() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getOptionalNestedEnum() {
      return optionalNestedEnum_;
    }
    
    // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
    public static final int OPTIONAL_FOREIGN_ENUM_FIELD_NUMBER = 22;
    private com.google.protobuf.UnittestLite.ForeignEnumLite optionalForeignEnum_;
    public boolean hasOptionalForeignEnum() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public com.google.protobuf.UnittestLite.ForeignEnumLite getOptionalForeignEnum() {
      return optionalForeignEnum_;
    }
    
    // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
    public static final int OPTIONAL_IMPORT_ENUM_FIELD_NUMBER = 23;
    private com.google.protobuf.UnittestImportLite.ImportEnumLite optionalImportEnum_;
    public boolean hasOptionalImportEnum() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public com.google.protobuf.UnittestImportLite.ImportEnumLite getOptionalImportEnum() {
      return optionalImportEnum_;
    }
    
    // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
    public static final int OPTIONAL_STRING_PIECE_FIELD_NUMBER = 24;
    private java.lang.Object optionalStringPiece_;
    public boolean hasOptionalStringPiece() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public String getOptionalStringPiece() {
      java.lang.Object ref = optionalStringPiece_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          optionalStringPiece_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOptionalStringPieceBytes() {
      java.lang.Object ref = optionalStringPiece_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        optionalStringPiece_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string optional_cord = 25 [ctype = CORD];
    public static final int OPTIONAL_CORD_FIELD_NUMBER = 25;
    private java.lang.Object optionalCord_;
    public boolean hasOptionalCord() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public String getOptionalCord() {
      java.lang.Object ref = optionalCord_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          optionalCord_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOptionalCordBytes() {
      java.lang.Object ref = optionalCord_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        optionalCord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated int32 repeated_int32 = 31;
    public static final int REPEATED_INT32_FIELD_NUMBER = 31;
    private java.util.List<java.lang.Integer> repeatedInt32_;
    public java.util.List<java.lang.Integer>
        getRepeatedInt32List() {
      return repeatedInt32_;
    }
    public int getRepeatedInt32Count() {
      return repeatedInt32_.size();
    }
    public int getRepeatedInt32(int index) {
      return repeatedInt32_.get(index);
    }
    
    // repeated int64 repeated_int64 = 32;
    public static final int REPEATED_INT64_FIELD_NUMBER = 32;
    private java.util.List<java.lang.Long> repeatedInt64_;
    public java.util.List<java.lang.Long>
        getRepeatedInt64List() {
      return repeatedInt64_;
    }
    public int getRepeatedInt64Count() {
      return repeatedInt64_.size();
    }
    public long getRepeatedInt64(int index) {
      return repeatedInt64_.get(index);
    }
    
    // repeated uint32 repeated_uint32 = 33;
    public static final int REPEATED_UINT32_FIELD_NUMBER = 33;
    private java.util.List<java.lang.Integer> repeatedUint32_;
    public java.util.List<java.lang.Integer>
        getRepeatedUint32List() {
      return repeatedUint32_;
    }
    public int getRepeatedUint32Count() {
      return repeatedUint32_.size();
    }
    public int getRepeatedUint32(int index) {
      return repeatedUint32_.get(index);
    }
    
    // repeated uint64 repeated_uint64 = 34;
    public static final int REPEATED_UINT64_FIELD_NUMBER = 34;
    private java.util.List<java.lang.Long> repeatedUint64_;
    public java.util.List<java.lang.Long>
        getRepeatedUint64List() {
      return repeatedUint64_;
    }
    public int getRepeatedUint64Count() {
      return repeatedUint64_.size();
    }
    public long getRepeatedUint64(int index) {
      return repeatedUint64_.get(index);
    }
    
    // repeated sint32 repeated_sint32 = 35;
    public static final int REPEATED_SINT32_FIELD_NUMBER = 35;
    private java.util.List<java.lang.Integer> repeatedSint32_;
    public java.util.List<java.lang.Integer>
        getRepeatedSint32List() {
      return repeatedSint32_;
    }
    public int getRepeatedSint32Count() {
      return repeatedSint32_.size();
    }
    public int getRepeatedSint32(int index) {
      return repeatedSint32_.get(index);
    }
    
    // repeated sint64 repeated_sint64 = 36;
    public static final int REPEATED_SINT64_FIELD_NUMBER = 36;
    private java.util.List<java.lang.Long> repeatedSint64_;
    public java.util.List<java.lang.Long>
        getRepeatedSint64List() {
      return repeatedSint64_;
    }
    public int getRepeatedSint64Count() {
      return repeatedSint64_.size();
    }
    public long getRepeatedSint64(int index) {
      return repeatedSint64_.get(index);
    }
    
    // repeated fixed32 repeated_fixed32 = 37;
    public static final int REPEATED_FIXED32_FIELD_NUMBER = 37;
    private java.util.List<java.lang.Integer> repeatedFixed32_;
    public java.util.List<java.lang.Integer>
        getRepeatedFixed32List() {
      return repeatedFixed32_;
    }
    public int getRepeatedFixed32Count() {
      return repeatedFixed32_.size();
    }
    public int getRepeatedFixed32(int index) {
      return repeatedFixed32_.get(index);
    }
    
    // repeated fixed64 repeated_fixed64 = 38;
    public static final int REPEATED_FIXED64_FIELD_NUMBER = 38;
    private java.util.List<java.lang.Long> repeatedFixed64_;
    public java.util.List<java.lang.Long>
        getRepeatedFixed64List() {
      return repeatedFixed64_;
    }
    public int getRepeatedFixed64Count() {
      return repeatedFixed64_.size();
    }
    public long getRepeatedFixed64(int index) {
      return repeatedFixed64_.get(index);
    }
    
    // repeated sfixed32 repeated_sfixed32 = 39;
    public static final int REPEATED_SFIXED32_FIELD_NUMBER = 39;
    private java.util.List<java.lang.Integer> repeatedSfixed32_;
    public java.util.List<java.lang.Integer>
        getRepeatedSfixed32List() {
      return repeatedSfixed32_;
    }
    public int getRepeatedSfixed32Count() {
      return repeatedSfixed32_.size();
    }
    public int getRepeatedSfixed32(int index) {
      return repeatedSfixed32_.get(index);
    }
    
    // repeated sfixed64 repeated_sfixed64 = 40;
    public static final int REPEATED_SFIXED64_FIELD_NUMBER = 40;
    private java.util.List<java.lang.Long> repeatedSfixed64_;
    public java.util.List<java.lang.Long>
        getRepeatedSfixed64List() {
      return repeatedSfixed64_;
    }
    public int getRepeatedSfixed64Count() {
      return repeatedSfixed64_.size();
    }
    public long getRepeatedSfixed64(int index) {
      return repeatedSfixed64_.get(index);
    }
    
    // repeated float repeated_float = 41;
    public static final int REPEATED_FLOAT_FIELD_NUMBER = 41;
    private java.util.List<java.lang.Float> repeatedFloat_;
    public java.util.List<java.lang.Float>
        getRepeatedFloatList() {
      return repeatedFloat_;
    }
    public int getRepeatedFloatCount() {
      return repeatedFloat_.size();
    }
    public float getRepeatedFloat(int index) {
      return repeatedFloat_.get(index);
    }
    
    // repeated double repeated_double = 42;
    public static final int REPEATED_DOUBLE_FIELD_NUMBER = 42;
    private java.util.List<java.lang.Double> repeatedDouble_;
    public java.util.List<java.lang.Double>
        getRepeatedDoubleList() {
      return repeatedDouble_;
    }
    public int getRepeatedDoubleCount() {
      return repeatedDouble_.size();
    }
    public double getRepeatedDouble(int index) {
      return repeatedDouble_.get(index);
    }
    
    // repeated bool repeated_bool = 43;
    public static final int REPEATED_BOOL_FIELD_NUMBER = 43;
    private java.util.List<java.lang.Boolean> repeatedBool_;
    public java.util.List<java.lang.Boolean>
        getRepeatedBoolList() {
      return repeatedBool_;
    }
    public int getRepeatedBoolCount() {
      return repeatedBool_.size();
    }
    public boolean getRepeatedBool(int index) {
      return repeatedBool_.get(index);
    }
    
    // repeated string repeated_string = 44;
    public static final int REPEATED_STRING_FIELD_NUMBER = 44;
    private com.google.protobuf.LazyStringList repeatedString_;
    public java.util.List<String>
        getRepeatedStringList() {
      return repeatedString_;
    }
    public int getRepeatedStringCount() {
      return repeatedString_.size();
    }
    public String getRepeatedString(int index) {
      return repeatedString_.get(index);
    }
    
    // repeated bytes repeated_bytes = 45;
    public static final int REPEATED_BYTES_FIELD_NUMBER = 45;
    private java.util.List<com.google.protobuf.ByteString> repeatedBytes_;
    public java.util.List<com.google.protobuf.ByteString>
        getRepeatedBytesList() {
      return repeatedBytes_;
    }
    public int getRepeatedBytesCount() {
      return repeatedBytes_.size();
    }
    public com.google.protobuf.ByteString getRepeatedBytes(int index) {
      return repeatedBytes_.get(index);
    }
    
    // repeated group RepeatedGroup = 46 {
    public static final int REPEATEDGROUP_FIELD_NUMBER = 46;
    private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> repeatedGroup_;
    public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> getRepeatedGroupList() {
      return repeatedGroup_;
    }
    public java.util.List<? extends com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroupOrBuilder> 
        getRepeatedGroupOrBuilderList() {
      return repeatedGroup_;
    }
    public int getRepeatedGroupCount() {
      return repeatedGroup_.size();
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup getRepeatedGroup(int index) {
      return repeatedGroup_.get(index);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroupOrBuilder getRepeatedGroupOrBuilder(
        int index) {
      return repeatedGroup_.get(index);
    }
    
    // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
    public static final int REPEATED_NESTED_MESSAGE_FIELD_NUMBER = 48;
    private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> repeatedNestedMessage_;
    public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> getRepeatedNestedMessageList() {
      return repeatedNestedMessage_;
    }
    public java.util.List<? extends com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessageOrBuilder> 
        getRepeatedNestedMessageOrBuilderList() {
      return repeatedNestedMessage_;
    }
    public int getRepeatedNestedMessageCount() {
      return repeatedNestedMessage_.size();
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getRepeatedNestedMessage(int index) {
      return repeatedNestedMessage_.get(index);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessageOrBuilder getRepeatedNestedMessageOrBuilder(
        int index) {
      return repeatedNestedMessage_.get(index);
    }
    
    // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
    public static final int REPEATED_FOREIGN_MESSAGE_FIELD_NUMBER = 49;
    private java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite> repeatedForeignMessage_;
    public java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite> getRepeatedForeignMessageList() {
      return repeatedForeignMessage_;
    }
    public java.util.List<? extends com.google.protobuf.UnittestLite.ForeignMessageLiteOrBuilder> 
        getRepeatedForeignMessageOrBuilderList() {
      return repeatedForeignMessage_;
    }
    public int getRepeatedForeignMessageCount() {
      return repeatedForeignMessage_.size();
    }
    public com.google.protobuf.UnittestLite.ForeignMessageLite getRepeatedForeignMessage(int index) {
      return repeatedForeignMessage_.get(index);
    }
    public com.google.protobuf.UnittestLite.ForeignMessageLiteOrBuilder getRepeatedForeignMessageOrBuilder(
        int index) {
      return repeatedForeignMessage_.get(index);
    }
    
    // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
    public static final int REPEATED_IMPORT_MESSAGE_FIELD_NUMBER = 50;
    private java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite> repeatedImportMessage_;
    public java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite> getRepeatedImportMessageList() {
      return repeatedImportMessage_;
    }
    public java.util.List<? extends com.google.protobuf.UnittestImportLite.ImportMessageLiteOrBuilder> 
        getRepeatedImportMessageOrBuilderList() {
      return repeatedImportMessage_;
    }
    public int getRepeatedImportMessageCount() {
      return repeatedImportMessage_.size();
    }
    public com.google.protobuf.UnittestImportLite.ImportMessageLite getRepeatedImportMessage(int index) {
      return repeatedImportMessage_.get(index);
    }
    public com.google.protobuf.UnittestImportLite.ImportMessageLiteOrBuilder getRepeatedImportMessageOrBuilder(
        int index) {
      return repeatedImportMessage_.get(index);
    }
    
    // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
    public static final int REPEATED_NESTED_ENUM_FIELD_NUMBER = 51;
    private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> repeatedNestedEnum_;
    public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> getRepeatedNestedEnumList() {
      return repeatedNestedEnum_;
    }
    public int getRepeatedNestedEnumCount() {
      return repeatedNestedEnum_.size();
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getRepeatedNestedEnum(int index) {
      return repeatedNestedEnum_.get(index);
    }
    
    // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
    public static final int REPEATED_FOREIGN_ENUM_FIELD_NUMBER = 52;
    private java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> repeatedForeignEnum_;
    public java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getRepeatedForeignEnumList() {
      return repeatedForeignEnum_;
    }
    public int getRepeatedForeignEnumCount() {
      return repeatedForeignEnum_.size();
    }
    public com.google.protobuf.UnittestLite.ForeignEnumLite getRepeatedForeignEnum(int index) {
      return repeatedForeignEnum_.get(index);
    }
    
    // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
    public static final int REPEATED_IMPORT_ENUM_FIELD_NUMBER = 53;
    private java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite> repeatedImportEnum_;
    public java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite> getRepeatedImportEnumList() {
      return repeatedImportEnum_;
    }
    public int getRepeatedImportEnumCount() {
      return repeatedImportEnum_.size();
    }
    public com.google.protobuf.UnittestImportLite.ImportEnumLite getRepeatedImportEnum(int index) {
      return repeatedImportEnum_.get(index);
    }
    
    // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
    public static final int REPEATED_STRING_PIECE_FIELD_NUMBER = 54;
    private com.google.protobuf.LazyStringList repeatedStringPiece_;
    public java.util.List<String>
        getRepeatedStringPieceList() {
      return repeatedStringPiece_;
    }
    public int getRepeatedStringPieceCount() {
      return repeatedStringPiece_.size();
    }
    public String getRepeatedStringPiece(int index) {
      return repeatedStringPiece_.get(index);
    }
    
    // repeated string repeated_cord = 55 [ctype = CORD];
    public static final int REPEATED_CORD_FIELD_NUMBER = 55;
    private com.google.protobuf.LazyStringList repeatedCord_;
    public java.util.List<String>
        getRepeatedCordList() {
      return repeatedCord_;
    }
    public int getRepeatedCordCount() {
      return repeatedCord_.size();
    }
    public String getRepeatedCord(int index) {
      return repeatedCord_.get(index);
    }
    
    // optional int32 default_int32 = 61 [default = 41];
    public static final int DEFAULT_INT32_FIELD_NUMBER = 61;
    private int defaultInt32_;
    public boolean hasDefaultInt32() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getDefaultInt32() {
      return defaultInt32_;
    }
    
    // optional int64 default_int64 = 62 [default = 42];
    public static final int DEFAULT_INT64_FIELD_NUMBER = 62;
    private long defaultInt64_;
    public boolean hasDefaultInt64() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public long getDefaultInt64() {
      return defaultInt64_;
    }
    
    // optional uint32 default_uint32 = 63 [default = 43];
    public static final int DEFAULT_UINT32_FIELD_NUMBER = 63;
    private int defaultUint32_;
    public boolean hasDefaultUint32() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public int getDefaultUint32() {
      return defaultUint32_;
    }
    
    // optional uint64 default_uint64 = 64 [default = 44];
    public static final int DEFAULT_UINT64_FIELD_NUMBER = 64;
    private long defaultUint64_;
    public boolean hasDefaultUint64() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public long getDefaultUint64() {
      return defaultUint64_;
    }
    
    // optional sint32 default_sint32 = 65 [default = -45];
    public static final int DEFAULT_SINT32_FIELD_NUMBER = 65;
    private int defaultSint32_;
    public boolean hasDefaultSint32() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public int getDefaultSint32() {
      return defaultSint32_;
    }
    
    // optional sint64 default_sint64 = 66 [default = 46];
    public static final int DEFAULT_SINT64_FIELD_NUMBER = 66;
    private long defaultSint64_;
    public boolean hasDefaultSint64() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public long getDefaultSint64() {
      return defaultSint64_;
    }
    
    // optional fixed32 default_fixed32 = 67 [default = 47];
    public static final int DEFAULT_FIXED32_FIELD_NUMBER = 67;
    private int defaultFixed32_;
    public boolean hasDefaultFixed32() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public int getDefaultFixed32() {
      return defaultFixed32_;
    }
    
    // optional fixed64 default_fixed64 = 68 [default = 48];
    public static final int DEFAULT_FIXED64_FIELD_NUMBER = 68;
    private long defaultFixed64_;
    public boolean hasDefaultFixed64() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    public long getDefaultFixed64() {
      return defaultFixed64_;
    }
    
    // optional sfixed32 default_sfixed32 = 69 [default = 49];
    public static final int DEFAULT_SFIXED32_FIELD_NUMBER = 69;
    private int defaultSfixed32_;
    public boolean hasDefaultSfixed32() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    public int getDefaultSfixed32() {
      return defaultSfixed32_;
    }
    
    // optional sfixed64 default_sfixed64 = 70 [default = -50];
    public static final int DEFAULT_SFIXED64_FIELD_NUMBER = 70;
    private long defaultSfixed64_;
    public boolean hasDefaultSfixed64() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    public long getDefaultSfixed64() {
      return defaultSfixed64_;
    }
    
    // optional float default_float = 71 [default = 51.5];
    public static final int DEFAULT_FLOAT_FIELD_NUMBER = 71;
    private float defaultFloat_;
    public boolean hasDefaultFloat() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    public float getDefaultFloat() {
      return defaultFloat_;
    }
    
    // optional double default_double = 72 [default = 52000];
    public static final int DEFAULT_DOUBLE_FIELD_NUMBER = 72;
    private double defaultDouble_;
    public boolean hasDefaultDouble() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    public double getDefaultDouble() {
      return defaultDouble_;
    }
    
    // optional bool default_bool = 73 [default = true];
    public static final int DEFAULT_BOOL_FIELD_NUMBER = 73;
    private boolean defaultBool_;
    public boolean hasDefaultBool() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    public boolean getDefaultBool() {
      return defaultBool_;
    }
    
    // optional string default_string = 74 [default = "hello"];
    public static final int DEFAULT_STRING_FIELD_NUMBER = 74;
    private java.lang.Object defaultString_;
    public boolean hasDefaultString() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    public String getDefaultString() {
      java.lang.Object ref = defaultString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          defaultString_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDefaultStringBytes() {
      java.lang.Object ref = defaultString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        defaultString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes default_bytes = 75 [default = "world"];
    public static final int DEFAULT_BYTES_FIELD_NUMBER = 75;
    private com.google.protobuf.ByteString defaultBytes_;
    public boolean hasDefaultBytes() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    public com.google.protobuf.ByteString getDefaultBytes() {
      return defaultBytes_;
    }
    
    // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
    public static final int DEFAULT_NESTED_ENUM_FIELD_NUMBER = 81;
    private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum defaultNestedEnum_;
    public boolean hasDefaultNestedEnum() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getDefaultNestedEnum() {
      return defaultNestedEnum_;
    }
    
    // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
    public static final int DEFAULT_FOREIGN_ENUM_FIELD_NUMBER = 82;
    private com.google.protobuf.UnittestLite.ForeignEnumLite defaultForeignEnum_;
    public boolean hasDefaultForeignEnum() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    public com.google.protobuf.UnittestLite.ForeignEnumLite getDefaultForeignEnum() {
      return defaultForeignEnum_;
    }
    
    // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
    public static final int DEFAULT_IMPORT_ENUM_FIELD_NUMBER = 83;
    private com.google.protobuf.UnittestImportLite.ImportEnumLite defaultImportEnum_;
    public boolean hasDefaultImportEnum() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    public com.google.protobuf.UnittestImportLite.ImportEnumLite getDefaultImportEnum() {
      return defaultImportEnum_;
    }
    
    // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
    public static final int DEFAULT_STRING_PIECE_FIELD_NUMBER = 84;
    private java.lang.Object defaultStringPiece_;
    public boolean hasDefaultStringPiece() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    public String getDefaultStringPiece() {
      java.lang.Object ref = defaultStringPiece_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          defaultStringPiece_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDefaultStringPieceBytes() {
      java.lang.Object ref = defaultStringPiece_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        defaultStringPiece_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string default_cord = 85 [default = "123", ctype = CORD];
    public static final int DEFAULT_CORD_FIELD_NUMBER = 85;
    private java.lang.Object defaultCord_;
    public boolean hasDefaultCord() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    public String getDefaultCord() {
      java.lang.Object ref = defaultCord_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          defaultCord_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDefaultCordBytes() {
      java.lang.Object ref = defaultCord_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        defaultCord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      optionalInt32_ = 0;
      optionalInt64_ = 0L;
      optionalUint32_ = 0;
      optionalUint64_ = 0L;
      optionalSint32_ = 0;
      optionalSint64_ = 0L;
      optionalFixed32_ = 0;
      optionalFixed64_ = 0L;
      optionalSfixed32_ = 0;
      optionalSfixed64_ = 0L;
      optionalFloat_ = 0F;
      optionalDouble_ = 0D;
      optionalBool_ = false;
      optionalString_ = "";
      optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
      optionalGroup_ = com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance();
      optionalNestedMessage_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance();
      optionalForeignMessage_ = com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance();
      optionalImportMessage_ = com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance();
      optionalNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.FOO;
      optionalForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_FOO;
      optionalImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_FOO;
      optionalStringPiece_ = "";
      optionalCord_ = "";
      repeatedInt32_ = java.util.Collections.emptyList();;
      repeatedInt64_ = java.util.Collections.emptyList();;
      repeatedUint32_ = java.util.Collections.emptyList();;
      repeatedUint64_ = java.util.Collections.emptyList();;
      repeatedSint32_ = java.util.Collections.emptyList();;
      repeatedSint64_ = java.util.Collections.emptyList();;
      repeatedFixed32_ = java.util.Collections.emptyList();;
      repeatedFixed64_ = java.util.Collections.emptyList();;
      repeatedSfixed32_ = java.util.Collections.emptyList();;
      repeatedSfixed64_ = java.util.Collections.emptyList();;
      repeatedFloat_ = java.util.Collections.emptyList();;
      repeatedDouble_ = java.util.Collections.emptyList();;
      repeatedBool_ = java.util.Collections.emptyList();;
      repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      repeatedBytes_ = java.util.Collections.emptyList();;
      repeatedGroup_ = java.util.Collections.emptyList();
      repeatedNestedMessage_ = java.util.Collections.emptyList();
      repeatedForeignMessage_ = java.util.Collections.emptyList();
      repeatedImportMessage_ = java.util.Collections.emptyList();
      repeatedNestedEnum_ = java.util.Collections.emptyList();
      repeatedForeignEnum_ = java.util.Collections.emptyList();
      repeatedImportEnum_ = java.util.Collections.emptyList();
      repeatedStringPiece_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      repeatedCord_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      defaultInt32_ = 41;
      defaultInt64_ = 42L;
      defaultUint32_ = 43;
      defaultUint64_ = 44L;
      defaultSint32_ = -45;
      defaultSint64_ = 46L;
      defaultFixed32_ = 47;
      defaultFixed64_ = 48L;
      defaultSfixed32_ = 49;
      defaultSfixed64_ = -50L;
      defaultFloat_ = 51.5F;
      defaultDouble_ = 52000D;
      defaultBool_ = true;
      defaultString_ = "hello";
      defaultBytes_ = com.google.protobuf.Internal.bytesDefaultValue("world");
      defaultNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.BAR;
      defaultForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_BAR;
      defaultImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_BAR;
      defaultStringPiece_ = "abc";
      defaultCord_ = "123";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, optionalInt32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, optionalInt64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, optionalUint32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, optionalUint64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, optionalSint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt64(6, optionalSint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFixed32(7, optionalFixed32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFixed64(8, optionalFixed64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSFixed32(9, optionalSfixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSFixed64(10, optionalSfixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, optionalFloat_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, optionalDouble_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, optionalBool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getOptionalStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, optionalBytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeGroup(16, optionalGroup_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(18, optionalNestedMessage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(19, optionalForeignMessage_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(20, optionalImportMessage_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeEnum(21, optionalNestedEnum_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeEnum(22, optionalForeignEnum_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeEnum(23, optionalImportEnum_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBytes(24, getOptionalStringPieceBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(25, getOptionalCordBytes());
      }
      for (int i = 0; i < repeatedInt32_.size(); i++) {
        output.writeInt32(31, repeatedInt32_.get(i));
      }
      for (int i = 0; i < repeatedInt64_.size(); i++) {
        output.writeInt64(32, repeatedInt64_.get(i));
      }
      for (int i = 0; i < repeatedUint32_.size(); i++) {
        output.writeUInt32(33, repeatedUint32_.get(i));
      }
      for (int i = 0; i < repeatedUint64_.size(); i++) {
        output.writeUInt64(34, repeatedUint64_.get(i));
      }
      for (int i = 0; i < repeatedSint32_.size(); i++) {
        output.writeSInt32(35, repeatedSint32_.get(i));
      }
      for (int i = 0; i < repeatedSint64_.size(); i++) {
        output.writeSInt64(36, repeatedSint64_.get(i));
      }
      for (int i = 0; i < repeatedFixed32_.size(); i++) {
        output.writeFixed32(37, repeatedFixed32_.get(i));
      }
      for (int i = 0; i < repeatedFixed64_.size(); i++) {
        output.writeFixed64(38, repeatedFixed64_.get(i));
      }
      for (int i = 0; i < repeatedSfixed32_.size(); i++) {
        output.writeSFixed32(39, repeatedSfixed32_.get(i));
      }
      for (int i = 0; i < repeatedSfixed64_.size(); i++) {
        output.writeSFixed64(40, repeatedSfixed64_.get(i));
      }
      for (int i = 0; i < repeatedFloat_.size(); i++) {
        output.writeFloat(41, repeatedFloat_.get(i));
      }
      for (int i = 0; i < repeatedDouble_.size(); i++) {
        output.writeDouble(42, repeatedDouble_.get(i));
      }
      for (int i = 0; i < repeatedBool_.size(); i++) {
        output.writeBool(43, repeatedBool_.get(i));
      }
      for (int i = 0; i < repeatedString_.size(); i++) {
        output.writeBytes(44, repeatedString_.getByteString(i));
      }
      for (int i = 0; i < repeatedBytes_.size(); i++) {
        output.writeBytes(45, repeatedBytes_.get(i));
      }
      for (int i = 0; i < repeatedGroup_.size(); i++) {
        output.writeGroup(46, repeatedGroup_.get(i));
      }
      for (int i = 0; i < repeatedNestedMessage_.size(); i++) {
        output.writeMessage(48, repeatedNestedMessage_.get(i));
      }
      for (int i = 0; i < repeatedForeignMessage_.size(); i++) {
        output.writeMessage(49, repeatedForeignMessage_.get(i));
      }
      for (int i = 0; i < repeatedImportMessage_.size(); i++) {
        output.writeMessage(50, repeatedImportMessage_.get(i));
      }
      for (int i = 0; i < repeatedNestedEnum_.size(); i++) {
        output.writeEnum(51, repeatedNestedEnum_.get(i).getNumber());
      }
      for (int i = 0; i < repeatedForeignEnum_.size(); i++) {
        output.writeEnum(52, repeatedForeignEnum_.get(i).getNumber());
      }
      for (int i = 0; i < repeatedImportEnum_.size(); i++) {
        output.writeEnum(53, repeatedImportEnum_.get(i).getNumber());
      }
      for (int i = 0; i < repeatedStringPiece_.size(); i++) {
        output.writeBytes(54, repeatedStringPiece_.getByteString(i));
      }
      for (int i = 0; i < repeatedCord_.size(); i++) {
        output.writeBytes(55, repeatedCord_.getByteString(i));
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(61, defaultInt32_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(62, defaultInt64_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(63, defaultUint32_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt64(64, defaultUint64_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeSInt32(65, defaultSint32_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeSInt64(66, defaultSint64_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeFixed32(67, defaultFixed32_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeFixed64(68, defaultFixed64_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeSFixed32(69, defaultSfixed32_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeSFixed64(70, defaultSfixed64_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(71, defaultFloat_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(72, defaultDouble_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(73, defaultBool_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(74, getDefaultStringBytes());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(75, defaultBytes_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(81, defaultNestedEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(82, defaultForeignEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(83, defaultImportEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(84, getDefaultStringPieceBytes());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(85, getDefaultCordBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, optionalInt32_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, optionalInt64_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, optionalUint32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, optionalUint64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, optionalSint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, optionalSint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(7, optionalFixed32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(8, optionalFixed64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(9, optionalSfixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(10, optionalSfixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, optionalFloat_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, optionalDouble_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, optionalBool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getOptionalStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, optionalBytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(16, optionalGroup_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, optionalNestedMessage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, optionalForeignMessage_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, optionalImportMessage_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, optionalNestedEnum_.getNumber());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, optionalForeignEnum_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, optionalImportEnum_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getOptionalStringPieceBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(25, getOptionalCordBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedInt32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(repeatedInt32_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedInt32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedInt64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(repeatedInt64_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedInt64List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedUint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(repeatedUint32_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedUint32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedUint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(repeatedUint64_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedUint64List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedSint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(repeatedSint32_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedSint32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedSint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(repeatedSint64_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedSint64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedFixed32List().size();
        size += dataSize;
        size += 2 * getRepeatedFixed32List().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedFixed64List().size();
        size += dataSize;
        size += 2 * getRepeatedFixed64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedSfixed32List().size();
        size += dataSize;
        size += 2 * getRepeatedSfixed32List().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedSfixed64List().size();
        size += dataSize;
        size += 2 * getRepeatedSfixed64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getRepeatedFloatList().size();
        size += dataSize;
        size += 2 * getRepeatedFloatList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRepeatedDoubleList().size();
        size += dataSize;
        size += 2 * getRepeatedDoubleList().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getRepeatedBoolList().size();
        size += dataSize;
        size += 2 * getRepeatedBoolList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedString_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedString_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRepeatedStringList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedBytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedBytes_.get(i));
        }
        size += dataSize;
        size += 2 * getRepeatedBytesList().size();
      }
      for (int i = 0; i < repeatedGroup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(46, repeatedGroup_.get(i));
      }
      for (int i = 0; i < repeatedNestedMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, repeatedNestedMessage_.get(i));
      }
      for (int i = 0; i < repeatedForeignMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, repeatedForeignMessage_.get(i));
      }
      for (int i = 0; i < repeatedImportMessage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, repeatedImportMessage_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedNestedEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(repeatedNestedEnum_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * repeatedNestedEnum_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedForeignEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(repeatedForeignEnum_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * repeatedForeignEnum_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedImportEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(repeatedImportEnum_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * repeatedImportEnum_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedStringPiece_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedStringPiece_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRepeatedStringPieceList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < repeatedCord_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(repeatedCord_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getRepeatedCordList().size();
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(61, defaultInt32_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(62, defaultInt64_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, defaultUint32_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(64, defaultUint64_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(65, defaultSint32_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(66, defaultSint64_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(67, defaultFixed32_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(68, defaultFixed64_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(69, defaultSfixed32_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(70, defaultSfixed64_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(71, defaultFloat_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(72, defaultDouble_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(73, defaultBool_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(74, getDefaultStringBytes());
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(75, defaultBytes_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(81, defaultNestedEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(82, defaultForeignEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(83, defaultImportEnum_.getNumber());
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(84, getDefaultStringPieceBytes());
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(85, getDefaultCordBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllTypesLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestAllTypesLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.TestAllTypesLite, Builder>
        implements com.google.protobuf.UnittestLite.TestAllTypesLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestAllTypesLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        optionalInt32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        optionalInt64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        optionalUint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        optionalUint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        optionalSint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        optionalSint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        optionalFixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        optionalFixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        optionalSfixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        optionalSfixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        optionalFloat_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        optionalDouble_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        optionalBool_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        optionalString_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        optionalGroup_ = com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00008000);
        optionalNestedMessage_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00010000);
        optionalForeignMessage_ = com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00020000);
        optionalImportMessage_ = com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00040000);
        optionalNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.FOO;
        bitField0_ = (bitField0_ & ~0x00080000);
        optionalForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_FOO;
        bitField0_ = (bitField0_ & ~0x00100000);
        optionalImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_FOO;
        bitField0_ = (bitField0_ & ~0x00200000);
        optionalStringPiece_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        optionalCord_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        repeatedInt32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x01000000);
        repeatedInt64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x02000000);
        repeatedUint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x04000000);
        repeatedUint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x08000000);
        repeatedSint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x10000000);
        repeatedSint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x20000000);
        repeatedFixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x40000000);
        repeatedFixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x80000000);
        repeatedSfixed32_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000001);
        repeatedSfixed64_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000002);
        repeatedFloat_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000004);
        repeatedDouble_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000008);
        repeatedBool_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000010);
        repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000020);
        repeatedBytes_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000040);
        repeatedGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        repeatedNestedMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000100);
        repeatedForeignMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000200);
        repeatedImportMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000400);
        repeatedNestedEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000800);
        repeatedForeignEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00001000);
        repeatedImportEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00002000);
        repeatedStringPiece_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00004000);
        repeatedCord_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00008000);
        defaultInt32_ = 41;
        bitField1_ = (bitField1_ & ~0x00010000);
        defaultInt64_ = 42L;
        bitField1_ = (bitField1_ & ~0x00020000);
        defaultUint32_ = 43;
        bitField1_ = (bitField1_ & ~0x00040000);
        defaultUint64_ = 44L;
        bitField1_ = (bitField1_ & ~0x00080000);
        defaultSint32_ = -45;
        bitField1_ = (bitField1_ & ~0x00100000);
        defaultSint64_ = 46L;
        bitField1_ = (bitField1_ & ~0x00200000);
        defaultFixed32_ = 47;
        bitField1_ = (bitField1_ & ~0x00400000);
        defaultFixed64_ = 48L;
        bitField1_ = (bitField1_ & ~0x00800000);
        defaultSfixed32_ = 49;
        bitField1_ = (bitField1_ & ~0x01000000);
        defaultSfixed64_ = -50L;
        bitField1_ = (bitField1_ & ~0x02000000);
        defaultFloat_ = 51.5F;
        bitField1_ = (bitField1_ & ~0x04000000);
        defaultDouble_ = 52000D;
        bitField1_ = (bitField1_ & ~0x08000000);
        defaultBool_ = true;
        bitField1_ = (bitField1_ & ~0x10000000);
        defaultString_ = "hello";
        bitField1_ = (bitField1_ & ~0x20000000);
        defaultBytes_ = com.google.protobuf.Internal.bytesDefaultValue("world");
        bitField1_ = (bitField1_ & ~0x40000000);
        defaultNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.BAR;
        bitField1_ = (bitField1_ & ~0x80000000);
        defaultForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_BAR;
        bitField2_ = (bitField2_ & ~0x00000001);
        defaultImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_BAR;
        bitField2_ = (bitField2_ & ~0x00000002);
        defaultStringPiece_ = "abc";
        bitField2_ = (bitField2_ & ~0x00000004);
        defaultCord_ = "123";
        bitField2_ = (bitField2_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestAllTypesLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestAllTypesLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestAllTypesLite build() {
        com.google.protobuf.UnittestLite.TestAllTypesLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestAllTypesLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestAllTypesLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestAllTypesLite buildPartial() {
        com.google.protobuf.UnittestLite.TestAllTypesLite result = new com.google.protobuf.UnittestLite.TestAllTypesLite(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.optionalInt32_ = optionalInt32_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.optionalInt64_ = optionalInt64_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.optionalUint32_ = optionalUint32_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.optionalUint64_ = optionalUint64_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.optionalSint32_ = optionalSint32_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.optionalSint64_ = optionalSint64_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.optionalFixed32_ = optionalFixed32_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.optionalFixed64_ = optionalFixed64_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.optionalSfixed32_ = optionalSfixed32_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.optionalSfixed64_ = optionalSfixed64_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.optionalFloat_ = optionalFloat_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.optionalDouble_ = optionalDouble_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.optionalBool_ = optionalBool_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.optionalString_ = optionalString_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.optionalBytes_ = optionalBytes_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.optionalGroup_ = optionalGroup_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.optionalNestedMessage_ = optionalNestedMessage_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.optionalForeignMessage_ = optionalForeignMessage_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.optionalImportMessage_ = optionalImportMessage_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.optionalNestedEnum_ = optionalNestedEnum_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.optionalForeignEnum_ = optionalForeignEnum_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.optionalImportEnum_ = optionalImportEnum_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.optionalStringPiece_ = optionalStringPiece_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.optionalCord_ = optionalCord_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          repeatedInt32_ = java.util.Collections.unmodifiableList(repeatedInt32_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.repeatedInt32_ = repeatedInt32_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          repeatedInt64_ = java.util.Collections.unmodifiableList(repeatedInt64_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.repeatedInt64_ = repeatedInt64_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          repeatedUint32_ = java.util.Collections.unmodifiableList(repeatedUint32_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.repeatedUint32_ = repeatedUint32_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          repeatedUint64_ = java.util.Collections.unmodifiableList(repeatedUint64_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.repeatedUint64_ = repeatedUint64_;
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          repeatedSint32_ = java.util.Collections.unmodifiableList(repeatedSint32_);
          bitField0_ = (bitField0_ & ~0x10000000);
        }
        result.repeatedSint32_ = repeatedSint32_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          repeatedSint64_ = java.util.Collections.unmodifiableList(repeatedSint64_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.repeatedSint64_ = repeatedSint64_;
        if (((bitField0_ & 0x40000000) == 0x40000000)) {
          repeatedFixed32_ = java.util.Collections.unmodifiableList(repeatedFixed32_);
          bitField0_ = (bitField0_ & ~0x40000000);
        }
        result.repeatedFixed32_ = repeatedFixed32_;
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          repeatedFixed64_ = java.util.Collections.unmodifiableList(repeatedFixed64_);
          bitField0_ = (bitField0_ & ~0x80000000);
        }
        result.repeatedFixed64_ = repeatedFixed64_;
        if (((bitField1_ & 0x00000001) == 0x00000001)) {
          repeatedSfixed32_ = java.util.Collections.unmodifiableList(repeatedSfixed32_);
          bitField1_ = (bitField1_ & ~0x00000001);
        }
        result.repeatedSfixed32_ = repeatedSfixed32_;
        if (((bitField1_ & 0x00000002) == 0x00000002)) {
          repeatedSfixed64_ = java.util.Collections.unmodifiableList(repeatedSfixed64_);
          bitField1_ = (bitField1_ & ~0x00000002);
        }
        result.repeatedSfixed64_ = repeatedSfixed64_;
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          repeatedFloat_ = java.util.Collections.unmodifiableList(repeatedFloat_);
          bitField1_ = (bitField1_ & ~0x00000004);
        }
        result.repeatedFloat_ = repeatedFloat_;
        if (((bitField1_ & 0x00000008) == 0x00000008)) {
          repeatedDouble_ = java.util.Collections.unmodifiableList(repeatedDouble_);
          bitField1_ = (bitField1_ & ~0x00000008);
        }
        result.repeatedDouble_ = repeatedDouble_;
        if (((bitField1_ & 0x00000010) == 0x00000010)) {
          repeatedBool_ = java.util.Collections.unmodifiableList(repeatedBool_);
          bitField1_ = (bitField1_ & ~0x00000010);
        }
        result.repeatedBool_ = repeatedBool_;
        if (((bitField1_ & 0x00000020) == 0x00000020)) {
          repeatedString_ = new com.google.protobuf.UnmodifiableLazyStringList(
              repeatedString_);
          bitField1_ = (bitField1_ & ~0x00000020);
        }
        result.repeatedString_ = repeatedString_;
        if (((bitField1_ & 0x00000040) == 0x00000040)) {
          repeatedBytes_ = java.util.Collections.unmodifiableList(repeatedBytes_);
          bitField1_ = (bitField1_ & ~0x00000040);
        }
        result.repeatedBytes_ = repeatedBytes_;
        if (((bitField1_ & 0x00000080) == 0x00000080)) {
          repeatedGroup_ = java.util.Collections.unmodifiableList(repeatedGroup_);
          bitField1_ = (bitField1_ & ~0x00000080);
        }
        result.repeatedGroup_ = repeatedGroup_;
        if (((bitField1_ & 0x00000100) == 0x00000100)) {
          repeatedNestedMessage_ = java.util.Collections.unmodifiableList(repeatedNestedMessage_);
          bitField1_ = (bitField1_ & ~0x00000100);
        }
        result.repeatedNestedMessage_ = repeatedNestedMessage_;
        if (((bitField1_ & 0x00000200) == 0x00000200)) {
          repeatedForeignMessage_ = java.util.Collections.unmodifiableList(repeatedForeignMessage_);
          bitField1_ = (bitField1_ & ~0x00000200);
        }
        result.repeatedForeignMessage_ = repeatedForeignMessage_;
        if (((bitField1_ & 0x00000400) == 0x00000400)) {
          repeatedImportMessage_ = java.util.Collections.unmodifiableList(repeatedImportMessage_);
          bitField1_ = (bitField1_ & ~0x00000400);
        }
        result.repeatedImportMessage_ = repeatedImportMessage_;
        if (((bitField1_ & 0x00000800) == 0x00000800)) {
          repeatedNestedEnum_ = java.util.Collections.unmodifiableList(repeatedNestedEnum_);
          bitField1_ = (bitField1_ & ~0x00000800);
        }
        result.repeatedNestedEnum_ = repeatedNestedEnum_;
        if (((bitField1_ & 0x00001000) == 0x00001000)) {
          repeatedForeignEnum_ = java.util.Collections.unmodifiableList(repeatedForeignEnum_);
          bitField1_ = (bitField1_ & ~0x00001000);
        }
        result.repeatedForeignEnum_ = repeatedForeignEnum_;
        if (((bitField1_ & 0x00002000) == 0x00002000)) {
          repeatedImportEnum_ = java.util.Collections.unmodifiableList(repeatedImportEnum_);
          bitField1_ = (bitField1_ & ~0x00002000);
        }
        result.repeatedImportEnum_ = repeatedImportEnum_;
        if (((bitField1_ & 0x00004000) == 0x00004000)) {
          repeatedStringPiece_ = new com.google.protobuf.UnmodifiableLazyStringList(
              repeatedStringPiece_);
          bitField1_ = (bitField1_ & ~0x00004000);
        }
        result.repeatedStringPiece_ = repeatedStringPiece_;
        if (((bitField1_ & 0x00008000) == 0x00008000)) {
          repeatedCord_ = new com.google.protobuf.UnmodifiableLazyStringList(
              repeatedCord_);
          bitField1_ = (bitField1_ & ~0x00008000);
        }
        result.repeatedCord_ = repeatedCord_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.defaultInt32_ = defaultInt32_;
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.defaultInt64_ = defaultInt64_;
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.defaultUint32_ = defaultUint32_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.defaultUint64_ = defaultUint64_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.defaultSint32_ = defaultSint32_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.defaultSint64_ = defaultSint64_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.defaultFixed32_ = defaultFixed32_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.defaultFixed64_ = defaultFixed64_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x00000001;
        }
        result.defaultSfixed32_ = defaultSfixed32_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x00000002;
        }
        result.defaultSfixed64_ = defaultSfixed64_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x00000004;
        }
        result.defaultFloat_ = defaultFloat_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x00000008;
        }
        result.defaultDouble_ = defaultDouble_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x00000010;
        }
        result.defaultBool_ = defaultBool_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x00000020;
        }
        result.defaultString_ = defaultString_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x00000040;
        }
        result.defaultBytes_ = defaultBytes_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x00000080;
        }
        result.defaultNestedEnum_ = defaultNestedEnum_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000100;
        }
        result.defaultForeignEnum_ = defaultForeignEnum_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000200;
        }
        result.defaultImportEnum_ = defaultImportEnum_;
        if (((from_bitField2_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000400;
        }
        result.defaultStringPiece_ = defaultStringPiece_;
        if (((from_bitField2_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000800;
        }
        result.defaultCord_ = defaultCord_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestAllTypesLite other) {
        if (other == com.google.protobuf.UnittestLite.TestAllTypesLite.getDefaultInstance()) return this;
        if (other.hasOptionalInt32()) {
          setOptionalInt32(other.getOptionalInt32());
        }
        if (other.hasOptionalInt64()) {
          setOptionalInt64(other.getOptionalInt64());
        }
        if (other.hasOptionalUint32()) {
          setOptionalUint32(other.getOptionalUint32());
        }
        if (other.hasOptionalUint64()) {
          setOptionalUint64(other.getOptionalUint64());
        }
        if (other.hasOptionalSint32()) {
          setOptionalSint32(other.getOptionalSint32());
        }
        if (other.hasOptionalSint64()) {
          setOptionalSint64(other.getOptionalSint64());
        }
        if (other.hasOptionalFixed32()) {
          setOptionalFixed32(other.getOptionalFixed32());
        }
        if (other.hasOptionalFixed64()) {
          setOptionalFixed64(other.getOptionalFixed64());
        }
        if (other.hasOptionalSfixed32()) {
          setOptionalSfixed32(other.getOptionalSfixed32());
        }
        if (other.hasOptionalSfixed64()) {
          setOptionalSfixed64(other.getOptionalSfixed64());
        }
        if (other.hasOptionalFloat()) {
          setOptionalFloat(other.getOptionalFloat());
        }
        if (other.hasOptionalDouble()) {
          setOptionalDouble(other.getOptionalDouble());
        }
        if (other.hasOptionalBool()) {
          setOptionalBool(other.getOptionalBool());
        }
        if (other.hasOptionalString()) {
          setOptionalString(other.getOptionalString());
        }
        if (other.hasOptionalBytes()) {
          setOptionalBytes(other.getOptionalBytes());
        }
        if (other.hasOptionalGroup()) {
          mergeOptionalGroup(other.getOptionalGroup());
        }
        if (other.hasOptionalNestedMessage()) {
          mergeOptionalNestedMessage(other.getOptionalNestedMessage());
        }
        if (other.hasOptionalForeignMessage()) {
          mergeOptionalForeignMessage(other.getOptionalForeignMessage());
        }
        if (other.hasOptionalImportMessage()) {
          mergeOptionalImportMessage(other.getOptionalImportMessage());
        }
        if (other.hasOptionalNestedEnum()) {
          setOptionalNestedEnum(other.getOptionalNestedEnum());
        }
        if (other.hasOptionalForeignEnum()) {
          setOptionalForeignEnum(other.getOptionalForeignEnum());
        }
        if (other.hasOptionalImportEnum()) {
          setOptionalImportEnum(other.getOptionalImportEnum());
        }
        if (other.hasOptionalStringPiece()) {
          setOptionalStringPiece(other.getOptionalStringPiece());
        }
        if (other.hasOptionalCord()) {
          setOptionalCord(other.getOptionalCord());
        }
        if (!other.repeatedInt32_.isEmpty()) {
          if (repeatedInt32_.isEmpty()) {
            repeatedInt32_ = other.repeatedInt32_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureRepeatedInt32IsMutable();
            repeatedInt32_.addAll(other.repeatedInt32_);
          }
          
        }
        if (!other.repeatedInt64_.isEmpty()) {
          if (repeatedInt64_.isEmpty()) {
            repeatedInt64_ = other.repeatedInt64_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureRepeatedInt64IsMutable();
            repeatedInt64_.addAll(other.repeatedInt64_);
          }
          
        }
        if (!other.repeatedUint32_.isEmpty()) {
          if (repeatedUint32_.isEmpty()) {
            repeatedUint32_ = other.repeatedUint32_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureRepeatedUint32IsMutable();
            repeatedUint32_.addAll(other.repeatedUint32_);
          }
          
        }
        if (!other.repeatedUint64_.isEmpty()) {
          if (repeatedUint64_.isEmpty()) {
            repeatedUint64_ = other.repeatedUint64_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureRepeatedUint64IsMutable();
            repeatedUint64_.addAll(other.repeatedUint64_);
          }
          
        }
        if (!other.repeatedSint32_.isEmpty()) {
          if (repeatedSint32_.isEmpty()) {
            repeatedSint32_ = other.repeatedSint32_;
            bitField0_ = (bitField0_ & ~0x10000000);
          } else {
            ensureRepeatedSint32IsMutable();
            repeatedSint32_.addAll(other.repeatedSint32_);
          }
          
        }
        if (!other.repeatedSint64_.isEmpty()) {
          if (repeatedSint64_.isEmpty()) {
            repeatedSint64_ = other.repeatedSint64_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureRepeatedSint64IsMutable();
            repeatedSint64_.addAll(other.repeatedSint64_);
          }
          
        }
        if (!other.repeatedFixed32_.isEmpty()) {
          if (repeatedFixed32_.isEmpty()) {
            repeatedFixed32_ = other.repeatedFixed32_;
            bitField0_ = (bitField0_ & ~0x40000000);
          } else {
            ensureRepeatedFixed32IsMutable();
            repeatedFixed32_.addAll(other.repeatedFixed32_);
          }
          
        }
        if (!other.repeatedFixed64_.isEmpty()) {
          if (repeatedFixed64_.isEmpty()) {
            repeatedFixed64_ = other.repeatedFixed64_;
            bitField0_ = (bitField0_ & ~0x80000000);
          } else {
            ensureRepeatedFixed64IsMutable();
            repeatedFixed64_.addAll(other.repeatedFixed64_);
          }
          
        }
        if (!other.repeatedSfixed32_.isEmpty()) {
          if (repeatedSfixed32_.isEmpty()) {
            repeatedSfixed32_ = other.repeatedSfixed32_;
            bitField1_ = (bitField1_ & ~0x00000001);
          } else {
            ensureRepeatedSfixed32IsMutable();
            repeatedSfixed32_.addAll(other.repeatedSfixed32_);
          }
          
        }
        if (!other.repeatedSfixed64_.isEmpty()) {
          if (repeatedSfixed64_.isEmpty()) {
            repeatedSfixed64_ = other.repeatedSfixed64_;
            bitField1_ = (bitField1_ & ~0x00000002);
          } else {
            ensureRepeatedSfixed64IsMutable();
            repeatedSfixed64_.addAll(other.repeatedSfixed64_);
          }
          
        }
        if (!other.repeatedFloat_.isEmpty()) {
          if (repeatedFloat_.isEmpty()) {
            repeatedFloat_ = other.repeatedFloat_;
            bitField1_ = (bitField1_ & ~0x00000004);
          } else {
            ensureRepeatedFloatIsMutable();
            repeatedFloat_.addAll(other.repeatedFloat_);
          }
          
        }
        if (!other.repeatedDouble_.isEmpty()) {
          if (repeatedDouble_.isEmpty()) {
            repeatedDouble_ = other.repeatedDouble_;
            bitField1_ = (bitField1_ & ~0x00000008);
          } else {
            ensureRepeatedDoubleIsMutable();
            repeatedDouble_.addAll(other.repeatedDouble_);
          }
          
        }
        if (!other.repeatedBool_.isEmpty()) {
          if (repeatedBool_.isEmpty()) {
            repeatedBool_ = other.repeatedBool_;
            bitField1_ = (bitField1_ & ~0x00000010);
          } else {
            ensureRepeatedBoolIsMutable();
            repeatedBool_.addAll(other.repeatedBool_);
          }
          
        }
        if (!other.repeatedString_.isEmpty()) {
          if (repeatedString_.isEmpty()) {
            repeatedString_ = other.repeatedString_;
            bitField1_ = (bitField1_ & ~0x00000020);
          } else {
            ensureRepeatedStringIsMutable();
            repeatedString_.addAll(other.repeatedString_);
          }
          
        }
        if (!other.repeatedBytes_.isEmpty()) {
          if (repeatedBytes_.isEmpty()) {
            repeatedBytes_ = other.repeatedBytes_;
            bitField1_ = (bitField1_ & ~0x00000040);
          } else {
            ensureRepeatedBytesIsMutable();
            repeatedBytes_.addAll(other.repeatedBytes_);
          }
          
        }
        if (!other.repeatedGroup_.isEmpty()) {
          if (repeatedGroup_.isEmpty()) {
            repeatedGroup_ = other.repeatedGroup_;
            bitField1_ = (bitField1_ & ~0x00000080);
          } else {
            ensureRepeatedGroupIsMutable();
            repeatedGroup_.addAll(other.repeatedGroup_);
          }
          
        }
        if (!other.repeatedNestedMessage_.isEmpty()) {
          if (repeatedNestedMessage_.isEmpty()) {
            repeatedNestedMessage_ = other.repeatedNestedMessage_;
            bitField1_ = (bitField1_ & ~0x00000100);
          } else {
            ensureRepeatedNestedMessageIsMutable();
            repeatedNestedMessage_.addAll(other.repeatedNestedMessage_);
          }
          
        }
        if (!other.repeatedForeignMessage_.isEmpty()) {
          if (repeatedForeignMessage_.isEmpty()) {
            repeatedForeignMessage_ = other.repeatedForeignMessage_;
            bitField1_ = (bitField1_ & ~0x00000200);
          } else {
            ensureRepeatedForeignMessageIsMutable();
            repeatedForeignMessage_.addAll(other.repeatedForeignMessage_);
          }
          
        }
        if (!other.repeatedImportMessage_.isEmpty()) {
          if (repeatedImportMessage_.isEmpty()) {
            repeatedImportMessage_ = other.repeatedImportMessage_;
            bitField1_ = (bitField1_ & ~0x00000400);
          } else {
            ensureRepeatedImportMessageIsMutable();
            repeatedImportMessage_.addAll(other.repeatedImportMessage_);
          }
          
        }
        if (!other.repeatedNestedEnum_.isEmpty()) {
          if (repeatedNestedEnum_.isEmpty()) {
            repeatedNestedEnum_ = other.repeatedNestedEnum_;
            bitField1_ = (bitField1_ & ~0x00000800);
          } else {
            ensureRepeatedNestedEnumIsMutable();
            repeatedNestedEnum_.addAll(other.repeatedNestedEnum_);
          }
          
        }
        if (!other.repeatedForeignEnum_.isEmpty()) {
          if (repeatedForeignEnum_.isEmpty()) {
            repeatedForeignEnum_ = other.repeatedForeignEnum_;
            bitField1_ = (bitField1_ & ~0x00001000);
          } else {
            ensureRepeatedForeignEnumIsMutable();
            repeatedForeignEnum_.addAll(other.repeatedForeignEnum_);
          }
          
        }
        if (!other.repeatedImportEnum_.isEmpty()) {
          if (repeatedImportEnum_.isEmpty()) {
            repeatedImportEnum_ = other.repeatedImportEnum_;
            bitField1_ = (bitField1_ & ~0x00002000);
          } else {
            ensureRepeatedImportEnumIsMutable();
            repeatedImportEnum_.addAll(other.repeatedImportEnum_);
          }
          
        }
        if (!other.repeatedStringPiece_.isEmpty()) {
          if (repeatedStringPiece_.isEmpty()) {
            repeatedStringPiece_ = other.repeatedStringPiece_;
            bitField1_ = (bitField1_ & ~0x00004000);
          } else {
            ensureRepeatedStringPieceIsMutable();
            repeatedStringPiece_.addAll(other.repeatedStringPiece_);
          }
          
        }
        if (!other.repeatedCord_.isEmpty()) {
          if (repeatedCord_.isEmpty()) {
            repeatedCord_ = other.repeatedCord_;
            bitField1_ = (bitField1_ & ~0x00008000);
          } else {
            ensureRepeatedCordIsMutable();
            repeatedCord_.addAll(other.repeatedCord_);
          }
          
        }
        if (other.hasDefaultInt32()) {
          setDefaultInt32(other.getDefaultInt32());
        }
        if (other.hasDefaultInt64()) {
          setDefaultInt64(other.getDefaultInt64());
        }
        if (other.hasDefaultUint32()) {
          setDefaultUint32(other.getDefaultUint32());
        }
        if (other.hasDefaultUint64()) {
          setDefaultUint64(other.getDefaultUint64());
        }
        if (other.hasDefaultSint32()) {
          setDefaultSint32(other.getDefaultSint32());
        }
        if (other.hasDefaultSint64()) {
          setDefaultSint64(other.getDefaultSint64());
        }
        if (other.hasDefaultFixed32()) {
          setDefaultFixed32(other.getDefaultFixed32());
        }
        if (other.hasDefaultFixed64()) {
          setDefaultFixed64(other.getDefaultFixed64());
        }
        if (other.hasDefaultSfixed32()) {
          setDefaultSfixed32(other.getDefaultSfixed32());
        }
        if (other.hasDefaultSfixed64()) {
          setDefaultSfixed64(other.getDefaultSfixed64());
        }
        if (other.hasDefaultFloat()) {
          setDefaultFloat(other.getDefaultFloat());
        }
        if (other.hasDefaultDouble()) {
          setDefaultDouble(other.getDefaultDouble());
        }
        if (other.hasDefaultBool()) {
          setDefaultBool(other.getDefaultBool());
        }
        if (other.hasDefaultString()) {
          setDefaultString(other.getDefaultString());
        }
        if (other.hasDefaultBytes()) {
          setDefaultBytes(other.getDefaultBytes());
        }
        if (other.hasDefaultNestedEnum()) {
          setDefaultNestedEnum(other.getDefaultNestedEnum());
        }
        if (other.hasDefaultForeignEnum()) {
          setDefaultForeignEnum(other.getDefaultForeignEnum());
        }
        if (other.hasDefaultImportEnum()) {
          setDefaultImportEnum(other.getDefaultImportEnum());
        }
        if (other.hasDefaultStringPiece()) {
          setDefaultStringPiece(other.getDefaultStringPiece());
        }
        if (other.hasDefaultCord()) {
          setDefaultCord(other.getDefaultCord());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              optionalInt32_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              optionalInt64_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              optionalUint32_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              optionalUint64_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              optionalSint32_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              optionalSint64_ = input.readSInt64();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              optionalFixed32_ = input.readFixed32();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              optionalFixed64_ = input.readFixed64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              optionalSfixed32_ = input.readSFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              optionalSfixed64_ = input.readSFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              optionalFloat_ = input.readFloat();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              optionalDouble_ = input.readDouble();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              optionalBool_ = input.readBool();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              optionalString_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              optionalBytes_ = input.readBytes();
              break;
            }
            case 131: {
              com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.Builder subBuilder = com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.newBuilder();
              if (hasOptionalGroup()) {
                subBuilder.mergeFrom(getOptionalGroup());
              }
              input.readGroup(16, subBuilder, extensionRegistry);
              setOptionalGroup(subBuilder.buildPartial());
              break;
            }
            case 146: {
              com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder subBuilder = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.newBuilder();
              if (hasOptionalNestedMessage()) {
                subBuilder.mergeFrom(getOptionalNestedMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOptionalNestedMessage(subBuilder.buildPartial());
              break;
            }
            case 154: {
              com.google.protobuf.UnittestLite.ForeignMessageLite.Builder subBuilder = com.google.protobuf.UnittestLite.ForeignMessageLite.newBuilder();
              if (hasOptionalForeignMessage()) {
                subBuilder.mergeFrom(getOptionalForeignMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOptionalForeignMessage(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder subBuilder = com.google.protobuf.UnittestImportLite.ImportMessageLite.newBuilder();
              if (hasOptionalImportMessage()) {
                subBuilder.mergeFrom(getOptionalImportMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setOptionalImportMessage(subBuilder.buildPartial());
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00080000;
                optionalNestedEnum_ = value;
              }
              break;
            }
            case 176: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00100000;
                optionalForeignEnum_ = value;
              }
              break;
            }
            case 184: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestImportLite.ImportEnumLite value = com.google.protobuf.UnittestImportLite.ImportEnumLite.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00200000;
                optionalImportEnum_ = value;
              }
              break;
            }
            case 194: {
              bitField0_ |= 0x00400000;
              optionalStringPiece_ = input.readBytes();
              break;
            }
            case 202: {
              bitField0_ |= 0x00800000;
              optionalCord_ = input.readBytes();
              break;
            }
            case 248: {
              ensureRepeatedInt32IsMutable();
              repeatedInt32_.add(input.readInt32());
              break;
            }
            case 250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedInt32(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 256: {
              ensureRepeatedInt64IsMutable();
              repeatedInt64_.add(input.readInt64());
              break;
            }
            case 258: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedInt64(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 264: {
              ensureRepeatedUint32IsMutable();
              repeatedUint32_.add(input.readUInt32());
              break;
            }
            case 266: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedUint32(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 272: {
              ensureRepeatedUint64IsMutable();
              repeatedUint64_.add(input.readUInt64());
              break;
            }
            case 274: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedUint64(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 280: {
              ensureRepeatedSint32IsMutable();
              repeatedSint32_.add(input.readSInt32());
              break;
            }
            case 282: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedSint32(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 288: {
              ensureRepeatedSint64IsMutable();
              repeatedSint64_.add(input.readSInt64());
              break;
            }
            case 290: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedSint64(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 301: {
              ensureRepeatedFixed32IsMutable();
              repeatedFixed32_.add(input.readFixed32());
              break;
            }
            case 298: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedFixed32(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 305: {
              ensureRepeatedFixed64IsMutable();
              repeatedFixed64_.add(input.readFixed64());
              break;
            }
            case 306: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedFixed64(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 317: {
              ensureRepeatedSfixed32IsMutable();
              repeatedSfixed32_.add(input.readSFixed32());
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedSfixed32(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 321: {
              ensureRepeatedSfixed64IsMutable();
              repeatedSfixed64_.add(input.readSFixed64());
              break;
            }
            case 322: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedSfixed64(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 333: {
              ensureRepeatedFloatIsMutable();
              repeatedFloat_.add(input.readFloat());
              break;
            }
            case 330: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 337: {
              ensureRepeatedDoubleIsMutable();
              repeatedDouble_.add(input.readDouble());
              break;
            }
            case 338: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 344: {
              ensureRepeatedBoolIsMutable();
              repeatedBool_.add(input.readBool());
              break;
            }
            case 346: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRepeatedBool(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 354: {
              ensureRepeatedStringIsMutable();
              repeatedString_.add(input.readBytes());
              break;
            }
            case 362: {
              ensureRepeatedBytesIsMutable();
              repeatedBytes_.add(input.readBytes());
              break;
            }
            case 371: {
              com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.Builder subBuilder = com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.newBuilder();
              input.readGroup(46, subBuilder, extensionRegistry);
              addRepeatedGroup(subBuilder.buildPartial());
              break;
            }
            case 386: {
              com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder subBuilder = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRepeatedNestedMessage(subBuilder.buildPartial());
              break;
            }
            case 394: {
              com.google.protobuf.UnittestLite.ForeignMessageLite.Builder subBuilder = com.google.protobuf.UnittestLite.ForeignMessageLite.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRepeatedForeignMessage(subBuilder.buildPartial());
              break;
            }
            case 402: {
              com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder subBuilder = com.google.protobuf.UnittestImportLite.ImportMessageLite.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRepeatedImportMessage(subBuilder.buildPartial());
              break;
            }
            case 408: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.valueOf(rawValue);
              if (value != null) {
                addRepeatedNestedEnum(value);
              }
              break;
            }
            case 410: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.valueOf(rawValue);
                if (value != null) {
                  addRepeatedNestedEnum(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 416: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
              if (value != null) {
                addRepeatedForeignEnum(value);
              }
              break;
            }
            case 418: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
                if (value != null) {
                  addRepeatedForeignEnum(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 424: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestImportLite.ImportEnumLite value = com.google.protobuf.UnittestImportLite.ImportEnumLite.valueOf(rawValue);
              if (value != null) {
                addRepeatedImportEnum(value);
              }
              break;
            }
            case 426: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.google.protobuf.UnittestImportLite.ImportEnumLite value = com.google.protobuf.UnittestImportLite.ImportEnumLite.valueOf(rawValue);
                if (value != null) {
                  addRepeatedImportEnum(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 434: {
              ensureRepeatedStringPieceIsMutable();
              repeatedStringPiece_.add(input.readBytes());
              break;
            }
            case 442: {
              ensureRepeatedCordIsMutable();
              repeatedCord_.add(input.readBytes());
              break;
            }
            case 488: {
              bitField1_ |= 0x00010000;
              defaultInt32_ = input.readInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x00020000;
              defaultInt64_ = input.readInt64();
              break;
            }
            case 504: {
              bitField1_ |= 0x00040000;
              defaultUint32_ = input.readUInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x00080000;
              defaultUint64_ = input.readUInt64();
              break;
            }
            case 520: {
              bitField1_ |= 0x00100000;
              defaultSint32_ = input.readSInt32();
              break;
            }
            case 528: {
              bitField1_ |= 0x00200000;
              defaultSint64_ = input.readSInt64();
              break;
            }
            case 541: {
              bitField1_ |= 0x00400000;
              defaultFixed32_ = input.readFixed32();
              break;
            }
            case 545: {
              bitField1_ |= 0x00800000;
              defaultFixed64_ = input.readFixed64();
              break;
            }
            case 557: {
              bitField1_ |= 0x01000000;
              defaultSfixed32_ = input.readSFixed32();
              break;
            }
            case 561: {
              bitField1_ |= 0x02000000;
              defaultSfixed64_ = input.readSFixed64();
              break;
            }
            case 573: {
              bitField1_ |= 0x04000000;
              defaultFloat_ = input.readFloat();
              break;
            }
            case 577: {
              bitField1_ |= 0x08000000;
              defaultDouble_ = input.readDouble();
              break;
            }
            case 584: {
              bitField1_ |= 0x10000000;
              defaultBool_ = input.readBool();
              break;
            }
            case 594: {
              bitField1_ |= 0x20000000;
              defaultString_ = input.readBytes();
              break;
            }
            case 602: {
              bitField1_ |= 0x40000000;
              defaultBytes_ = input.readBytes();
              break;
            }
            case 648: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.valueOf(rawValue);
              if (value != null) {
                bitField1_ |= 0x80000000;
                defaultNestedEnum_ = value;
              }
              break;
            }
            case 656: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
              if (value != null) {
                bitField2_ |= 0x00000001;
                defaultForeignEnum_ = value;
              }
              break;
            }
            case 664: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestImportLite.ImportEnumLite value = com.google.protobuf.UnittestImportLite.ImportEnumLite.valueOf(rawValue);
              if (value != null) {
                bitField2_ |= 0x00000002;
                defaultImportEnum_ = value;
              }
              break;
            }
            case 674: {
              bitField2_ |= 0x00000004;
              defaultStringPiece_ = input.readBytes();
              break;
            }
            case 682: {
              bitField2_ |= 0x00000008;
              defaultCord_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;
      
      // optional int32 optional_int32 = 1;
      private int optionalInt32_ ;
      public boolean hasOptionalInt32() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getOptionalInt32() {
        return optionalInt32_;
      }
      public Builder setOptionalInt32(int value) {
        bitField0_ |= 0x00000001;
        optionalInt32_ = value;
        
        return this;
      }
      public Builder clearOptionalInt32() {
        bitField0_ = (bitField0_ & ~0x00000001);
        optionalInt32_ = 0;
        
        return this;
      }
      
      // optional int64 optional_int64 = 2;
      private long optionalInt64_ ;
      public boolean hasOptionalInt64() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getOptionalInt64() {
        return optionalInt64_;
      }
      public Builder setOptionalInt64(long value) {
        bitField0_ |= 0x00000002;
        optionalInt64_ = value;
        
        return this;
      }
      public Builder clearOptionalInt64() {
        bitField0_ = (bitField0_ & ~0x00000002);
        optionalInt64_ = 0L;
        
        return this;
      }
      
      // optional uint32 optional_uint32 = 3;
      private int optionalUint32_ ;
      public boolean hasOptionalUint32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getOptionalUint32() {
        return optionalUint32_;
      }
      public Builder setOptionalUint32(int value) {
        bitField0_ |= 0x00000004;
        optionalUint32_ = value;
        
        return this;
      }
      public Builder clearOptionalUint32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        optionalUint32_ = 0;
        
        return this;
      }
      
      // optional uint64 optional_uint64 = 4;
      private long optionalUint64_ ;
      public boolean hasOptionalUint64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getOptionalUint64() {
        return optionalUint64_;
      }
      public Builder setOptionalUint64(long value) {
        bitField0_ |= 0x00000008;
        optionalUint64_ = value;
        
        return this;
      }
      public Builder clearOptionalUint64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        optionalUint64_ = 0L;
        
        return this;
      }
      
      // optional sint32 optional_sint32 = 5;
      private int optionalSint32_ ;
      public boolean hasOptionalSint32() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getOptionalSint32() {
        return optionalSint32_;
      }
      public Builder setOptionalSint32(int value) {
        bitField0_ |= 0x00000010;
        optionalSint32_ = value;
        
        return this;
      }
      public Builder clearOptionalSint32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        optionalSint32_ = 0;
        
        return this;
      }
      
      // optional sint64 optional_sint64 = 6;
      private long optionalSint64_ ;
      public boolean hasOptionalSint64() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getOptionalSint64() {
        return optionalSint64_;
      }
      public Builder setOptionalSint64(long value) {
        bitField0_ |= 0x00000020;
        optionalSint64_ = value;
        
        return this;
      }
      public Builder clearOptionalSint64() {
        bitField0_ = (bitField0_ & ~0x00000020);
        optionalSint64_ = 0L;
        
        return this;
      }
      
      // optional fixed32 optional_fixed32 = 7;
      private int optionalFixed32_ ;
      public boolean hasOptionalFixed32() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getOptionalFixed32() {
        return optionalFixed32_;
      }
      public Builder setOptionalFixed32(int value) {
        bitField0_ |= 0x00000040;
        optionalFixed32_ = value;
        
        return this;
      }
      public Builder clearOptionalFixed32() {
        bitField0_ = (bitField0_ & ~0x00000040);
        optionalFixed32_ = 0;
        
        return this;
      }
      
      // optional fixed64 optional_fixed64 = 8;
      private long optionalFixed64_ ;
      public boolean hasOptionalFixed64() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getOptionalFixed64() {
        return optionalFixed64_;
      }
      public Builder setOptionalFixed64(long value) {
        bitField0_ |= 0x00000080;
        optionalFixed64_ = value;
        
        return this;
      }
      public Builder clearOptionalFixed64() {
        bitField0_ = (bitField0_ & ~0x00000080);
        optionalFixed64_ = 0L;
        
        return this;
      }
      
      // optional sfixed32 optional_sfixed32 = 9;
      private int optionalSfixed32_ ;
      public boolean hasOptionalSfixed32() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getOptionalSfixed32() {
        return optionalSfixed32_;
      }
      public Builder setOptionalSfixed32(int value) {
        bitField0_ |= 0x00000100;
        optionalSfixed32_ = value;
        
        return this;
      }
      public Builder clearOptionalSfixed32() {
        bitField0_ = (bitField0_ & ~0x00000100);
        optionalSfixed32_ = 0;
        
        return this;
      }
      
      // optional sfixed64 optional_sfixed64 = 10;
      private long optionalSfixed64_ ;
      public boolean hasOptionalSfixed64() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getOptionalSfixed64() {
        return optionalSfixed64_;
      }
      public Builder setOptionalSfixed64(long value) {
        bitField0_ |= 0x00000200;
        optionalSfixed64_ = value;
        
        return this;
      }
      public Builder clearOptionalSfixed64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        optionalSfixed64_ = 0L;
        
        return this;
      }
      
      // optional float optional_float = 11;
      private float optionalFloat_ ;
      public boolean hasOptionalFloat() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public float getOptionalFloat() {
        return optionalFloat_;
      }
      public Builder setOptionalFloat(float value) {
        bitField0_ |= 0x00000400;
        optionalFloat_ = value;
        
        return this;
      }
      public Builder clearOptionalFloat() {
        bitField0_ = (bitField0_ & ~0x00000400);
        optionalFloat_ = 0F;
        
        return this;
      }
      
      // optional double optional_double = 12;
      private double optionalDouble_ ;
      public boolean hasOptionalDouble() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getOptionalDouble() {
        return optionalDouble_;
      }
      public Builder setOptionalDouble(double value) {
        bitField0_ |= 0x00000800;
        optionalDouble_ = value;
        
        return this;
      }
      public Builder clearOptionalDouble() {
        bitField0_ = (bitField0_ & ~0x00000800);
        optionalDouble_ = 0D;
        
        return this;
      }
      
      // optional bool optional_bool = 13;
      private boolean optionalBool_ ;
      public boolean hasOptionalBool() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public boolean getOptionalBool() {
        return optionalBool_;
      }
      public Builder setOptionalBool(boolean value) {
        bitField0_ |= 0x00001000;
        optionalBool_ = value;
        
        return this;
      }
      public Builder clearOptionalBool() {
        bitField0_ = (bitField0_ & ~0x00001000);
        optionalBool_ = false;
        
        return this;
      }
      
      // optional string optional_string = 14;
      private java.lang.Object optionalString_ = "";
      public boolean hasOptionalString() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getOptionalString() {
        java.lang.Object ref = optionalString_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          optionalString_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOptionalString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        optionalString_ = value;
        
        return this;
      }
      public Builder clearOptionalString() {
        bitField0_ = (bitField0_ & ~0x00002000);
        optionalString_ = getDefaultInstance().getOptionalString();
        
        return this;
      }
      void setOptionalString(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        optionalString_ = value;
        
      }
      
      // optional bytes optional_bytes = 15;
      private com.google.protobuf.ByteString optionalBytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasOptionalBytes() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public com.google.protobuf.ByteString getOptionalBytes() {
        return optionalBytes_;
      }
      public Builder setOptionalBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        optionalBytes_ = value;
        
        return this;
      }
      public Builder clearOptionalBytes() {
        bitField0_ = (bitField0_ & ~0x00004000);
        optionalBytes_ = getDefaultInstance().getOptionalBytes();
        
        return this;
      }
      
      // optional group OptionalGroup = 16 {
      private com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup optionalGroup_ = com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance();
      public boolean hasOptionalGroup() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup getOptionalGroup() {
        return optionalGroup_;
      }
      public Builder setOptionalGroup(com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalGroup_ = value;
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder setOptionalGroup(
          com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.Builder builderForValue) {
        optionalGroup_ = builderForValue.build();
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder mergeOptionalGroup(com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup value) {
        if (((bitField0_ & 0x00008000) == 0x00008000) &&
            optionalGroup_ != com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance()) {
          optionalGroup_ =
            com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.newBuilder(optionalGroup_).mergeFrom(value).buildPartial();
        } else {
          optionalGroup_ = value;
        }
        
        bitField0_ |= 0x00008000;
        return this;
      }
      public Builder clearOptionalGroup() {
        optionalGroup_ = com.google.protobuf.UnittestLite.TestAllTypesLite.OptionalGroup.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      // optional .protobuf_unittest.TestAllTypesLite.NestedMessage optional_nested_message = 18;
      private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage optionalNestedMessage_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance();
      public boolean hasOptionalNestedMessage() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getOptionalNestedMessage() {
        return optionalNestedMessage_;
      }
      public Builder setOptionalNestedMessage(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalNestedMessage_ = value;
        
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder setOptionalNestedMessage(
          com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder builderForValue) {
        optionalNestedMessage_ = builderForValue.build();
        
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder mergeOptionalNestedMessage(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage value) {
        if (((bitField0_ & 0x00010000) == 0x00010000) &&
            optionalNestedMessage_ != com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance()) {
          optionalNestedMessage_ =
            com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.newBuilder(optionalNestedMessage_).mergeFrom(value).buildPartial();
        } else {
          optionalNestedMessage_ = value;
        }
        
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder clearOptionalNestedMessage() {
        optionalNestedMessage_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      
      // optional .protobuf_unittest.ForeignMessageLite optional_foreign_message = 19;
      private com.google.protobuf.UnittestLite.ForeignMessageLite optionalForeignMessage_ = com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance();
      public boolean hasOptionalForeignMessage() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public com.google.protobuf.UnittestLite.ForeignMessageLite getOptionalForeignMessage() {
        return optionalForeignMessage_;
      }
      public Builder setOptionalForeignMessage(com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalForeignMessage_ = value;
        
        bitField0_ |= 0x00020000;
        return this;
      }
      public Builder setOptionalForeignMessage(
          com.google.protobuf.UnittestLite.ForeignMessageLite.Builder builderForValue) {
        optionalForeignMessage_ = builderForValue.build();
        
        bitField0_ |= 0x00020000;
        return this;
      }
      public Builder mergeOptionalForeignMessage(com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        if (((bitField0_ & 0x00020000) == 0x00020000) &&
            optionalForeignMessage_ != com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance()) {
          optionalForeignMessage_ =
            com.google.protobuf.UnittestLite.ForeignMessageLite.newBuilder(optionalForeignMessage_).mergeFrom(value).buildPartial();
        } else {
          optionalForeignMessage_ = value;
        }
        
        bitField0_ |= 0x00020000;
        return this;
      }
      public Builder clearOptionalForeignMessage() {
        optionalForeignMessage_ = com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      
      // optional .protobuf_unittest_import.ImportMessageLite optional_import_message = 20;
      private com.google.protobuf.UnittestImportLite.ImportMessageLite optionalImportMessage_ = com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance();
      public boolean hasOptionalImportMessage() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public com.google.protobuf.UnittestImportLite.ImportMessageLite getOptionalImportMessage() {
        return optionalImportMessage_;
      }
      public Builder setOptionalImportMessage(com.google.protobuf.UnittestImportLite.ImportMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalImportMessage_ = value;
        
        bitField0_ |= 0x00040000;
        return this;
      }
      public Builder setOptionalImportMessage(
          com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder builderForValue) {
        optionalImportMessage_ = builderForValue.build();
        
        bitField0_ |= 0x00040000;
        return this;
      }
      public Builder mergeOptionalImportMessage(com.google.protobuf.UnittestImportLite.ImportMessageLite value) {
        if (((bitField0_ & 0x00040000) == 0x00040000) &&
            optionalImportMessage_ != com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance()) {
          optionalImportMessage_ =
            com.google.protobuf.UnittestImportLite.ImportMessageLite.newBuilder(optionalImportMessage_).mergeFrom(value).buildPartial();
        } else {
          optionalImportMessage_ = value;
        }
        
        bitField0_ |= 0x00040000;
        return this;
      }
      public Builder clearOptionalImportMessage() {
        optionalImportMessage_ = com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      
      // optional .protobuf_unittest.TestAllTypesLite.NestedEnum optional_nested_enum = 21;
      private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum optionalNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.FOO;
      public boolean hasOptionalNestedEnum() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getOptionalNestedEnum() {
        return optionalNestedEnum_;
      }
      public Builder setOptionalNestedEnum(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        optionalNestedEnum_ = value;
        
        return this;
      }
      public Builder clearOptionalNestedEnum() {
        bitField0_ = (bitField0_ & ~0x00080000);
        optionalNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.FOO;
        
        return this;
      }
      
      // optional .protobuf_unittest.ForeignEnumLite optional_foreign_enum = 22;
      private com.google.protobuf.UnittestLite.ForeignEnumLite optionalForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_FOO;
      public boolean hasOptionalForeignEnum() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public com.google.protobuf.UnittestLite.ForeignEnumLite getOptionalForeignEnum() {
        return optionalForeignEnum_;
      }
      public Builder setOptionalForeignEnum(com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        optionalForeignEnum_ = value;
        
        return this;
      }
      public Builder clearOptionalForeignEnum() {
        bitField0_ = (bitField0_ & ~0x00100000);
        optionalForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_FOO;
        
        return this;
      }
      
      // optional .protobuf_unittest_import.ImportEnumLite optional_import_enum = 23;
      private com.google.protobuf.UnittestImportLite.ImportEnumLite optionalImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_FOO;
      public boolean hasOptionalImportEnum() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public com.google.protobuf.UnittestImportLite.ImportEnumLite getOptionalImportEnum() {
        return optionalImportEnum_;
      }
      public Builder setOptionalImportEnum(com.google.protobuf.UnittestImportLite.ImportEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00200000;
        optionalImportEnum_ = value;
        
        return this;
      }
      public Builder clearOptionalImportEnum() {
        bitField0_ = (bitField0_ & ~0x00200000);
        optionalImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_FOO;
        
        return this;
      }
      
      // optional string optional_string_piece = 24 [ctype = STRING_PIECE];
      private java.lang.Object optionalStringPiece_ = "";
      public boolean hasOptionalStringPiece() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public String getOptionalStringPiece() {
        java.lang.Object ref = optionalStringPiece_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          optionalStringPiece_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOptionalStringPiece(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        optionalStringPiece_ = value;
        
        return this;
      }
      public Builder clearOptionalStringPiece() {
        bitField0_ = (bitField0_ & ~0x00400000);
        optionalStringPiece_ = getDefaultInstance().getOptionalStringPiece();
        
        return this;
      }
      void setOptionalStringPiece(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00400000;
        optionalStringPiece_ = value;
        
      }
      
      // optional string optional_cord = 25 [ctype = CORD];
      private java.lang.Object optionalCord_ = "";
      public boolean hasOptionalCord() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public String getOptionalCord() {
        java.lang.Object ref = optionalCord_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          optionalCord_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOptionalCord(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        optionalCord_ = value;
        
        return this;
      }
      public Builder clearOptionalCord() {
        bitField0_ = (bitField0_ & ~0x00800000);
        optionalCord_ = getDefaultInstance().getOptionalCord();
        
        return this;
      }
      void setOptionalCord(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00800000;
        optionalCord_ = value;
        
      }
      
      // repeated int32 repeated_int32 = 31;
      private java.util.List<java.lang.Integer> repeatedInt32_ = java.util.Collections.emptyList();;
      private void ensureRepeatedInt32IsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          repeatedInt32_ = new java.util.ArrayList<java.lang.Integer>(repeatedInt32_);
          bitField0_ |= 0x01000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getRepeatedInt32List() {
        return java.util.Collections.unmodifiableList(repeatedInt32_);
      }
      public int getRepeatedInt32Count() {
        return repeatedInt32_.size();
      }
      public int getRepeatedInt32(int index) {
        return repeatedInt32_.get(index);
      }
      public Builder setRepeatedInt32(
          int index, int value) {
        ensureRepeatedInt32IsMutable();
        repeatedInt32_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedInt32(int value) {
        ensureRepeatedInt32IsMutable();
        repeatedInt32_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedInt32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedInt32IsMutable();
        super.addAll(values, repeatedInt32_);
        
        return this;
      }
      public Builder clearRepeatedInt32() {
        repeatedInt32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x01000000);
        
        return this;
      }
      
      // repeated int64 repeated_int64 = 32;
      private java.util.List<java.lang.Long> repeatedInt64_ = java.util.Collections.emptyList();;
      private void ensureRepeatedInt64IsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          repeatedInt64_ = new java.util.ArrayList<java.lang.Long>(repeatedInt64_);
          bitField0_ |= 0x02000000;
         }
      }
      public java.util.List<java.lang.Long>
          getRepeatedInt64List() {
        return java.util.Collections.unmodifiableList(repeatedInt64_);
      }
      public int getRepeatedInt64Count() {
        return repeatedInt64_.size();
      }
      public long getRepeatedInt64(int index) {
        return repeatedInt64_.get(index);
      }
      public Builder setRepeatedInt64(
          int index, long value) {
        ensureRepeatedInt64IsMutable();
        repeatedInt64_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedInt64(long value) {
        ensureRepeatedInt64IsMutable();
        repeatedInt64_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedInt64IsMutable();
        super.addAll(values, repeatedInt64_);
        
        return this;
      }
      public Builder clearRepeatedInt64() {
        repeatedInt64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x02000000);
        
        return this;
      }
      
      // repeated uint32 repeated_uint32 = 33;
      private java.util.List<java.lang.Integer> repeatedUint32_ = java.util.Collections.emptyList();;
      private void ensureRepeatedUint32IsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          repeatedUint32_ = new java.util.ArrayList<java.lang.Integer>(repeatedUint32_);
          bitField0_ |= 0x04000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getRepeatedUint32List() {
        return java.util.Collections.unmodifiableList(repeatedUint32_);
      }
      public int getRepeatedUint32Count() {
        return repeatedUint32_.size();
      }
      public int getRepeatedUint32(int index) {
        return repeatedUint32_.get(index);
      }
      public Builder setRepeatedUint32(
          int index, int value) {
        ensureRepeatedUint32IsMutable();
        repeatedUint32_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedUint32(int value) {
        ensureRepeatedUint32IsMutable();
        repeatedUint32_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedUint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedUint32IsMutable();
        super.addAll(values, repeatedUint32_);
        
        return this;
      }
      public Builder clearRepeatedUint32() {
        repeatedUint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x04000000);
        
        return this;
      }
      
      // repeated uint64 repeated_uint64 = 34;
      private java.util.List<java.lang.Long> repeatedUint64_ = java.util.Collections.emptyList();;
      private void ensureRepeatedUint64IsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          repeatedUint64_ = new java.util.ArrayList<java.lang.Long>(repeatedUint64_);
          bitField0_ |= 0x08000000;
         }
      }
      public java.util.List<java.lang.Long>
          getRepeatedUint64List() {
        return java.util.Collections.unmodifiableList(repeatedUint64_);
      }
      public int getRepeatedUint64Count() {
        return repeatedUint64_.size();
      }
      public long getRepeatedUint64(int index) {
        return repeatedUint64_.get(index);
      }
      public Builder setRepeatedUint64(
          int index, long value) {
        ensureRepeatedUint64IsMutable();
        repeatedUint64_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedUint64(long value) {
        ensureRepeatedUint64IsMutable();
        repeatedUint64_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedUint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedUint64IsMutable();
        super.addAll(values, repeatedUint64_);
        
        return this;
      }
      public Builder clearRepeatedUint64() {
        repeatedUint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x08000000);
        
        return this;
      }
      
      // repeated sint32 repeated_sint32 = 35;
      private java.util.List<java.lang.Integer> repeatedSint32_ = java.util.Collections.emptyList();;
      private void ensureRepeatedSint32IsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          repeatedSint32_ = new java.util.ArrayList<java.lang.Integer>(repeatedSint32_);
          bitField0_ |= 0x10000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getRepeatedSint32List() {
        return java.util.Collections.unmodifiableList(repeatedSint32_);
      }
      public int getRepeatedSint32Count() {
        return repeatedSint32_.size();
      }
      public int getRepeatedSint32(int index) {
        return repeatedSint32_.get(index);
      }
      public Builder setRepeatedSint32(
          int index, int value) {
        ensureRepeatedSint32IsMutable();
        repeatedSint32_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedSint32(int value) {
        ensureRepeatedSint32IsMutable();
        repeatedSint32_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedSint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedSint32IsMutable();
        super.addAll(values, repeatedSint32_);
        
        return this;
      }
      public Builder clearRepeatedSint32() {
        repeatedSint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x10000000);
        
        return this;
      }
      
      // repeated sint64 repeated_sint64 = 36;
      private java.util.List<java.lang.Long> repeatedSint64_ = java.util.Collections.emptyList();;
      private void ensureRepeatedSint64IsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          repeatedSint64_ = new java.util.ArrayList<java.lang.Long>(repeatedSint64_);
          bitField0_ |= 0x20000000;
         }
      }
      public java.util.List<java.lang.Long>
          getRepeatedSint64List() {
        return java.util.Collections.unmodifiableList(repeatedSint64_);
      }
      public int getRepeatedSint64Count() {
        return repeatedSint64_.size();
      }
      public long getRepeatedSint64(int index) {
        return repeatedSint64_.get(index);
      }
      public Builder setRepeatedSint64(
          int index, long value) {
        ensureRepeatedSint64IsMutable();
        repeatedSint64_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedSint64(long value) {
        ensureRepeatedSint64IsMutable();
        repeatedSint64_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedSint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedSint64IsMutable();
        super.addAll(values, repeatedSint64_);
        
        return this;
      }
      public Builder clearRepeatedSint64() {
        repeatedSint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x20000000);
        
        return this;
      }
      
      // repeated fixed32 repeated_fixed32 = 37;
      private java.util.List<java.lang.Integer> repeatedFixed32_ = java.util.Collections.emptyList();;
      private void ensureRepeatedFixed32IsMutable() {
        if (!((bitField0_ & 0x40000000) == 0x40000000)) {
          repeatedFixed32_ = new java.util.ArrayList<java.lang.Integer>(repeatedFixed32_);
          bitField0_ |= 0x40000000;
         }
      }
      public java.util.List<java.lang.Integer>
          getRepeatedFixed32List() {
        return java.util.Collections.unmodifiableList(repeatedFixed32_);
      }
      public int getRepeatedFixed32Count() {
        return repeatedFixed32_.size();
      }
      public int getRepeatedFixed32(int index) {
        return repeatedFixed32_.get(index);
      }
      public Builder setRepeatedFixed32(
          int index, int value) {
        ensureRepeatedFixed32IsMutable();
        repeatedFixed32_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedFixed32(int value) {
        ensureRepeatedFixed32IsMutable();
        repeatedFixed32_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedFixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedFixed32IsMutable();
        super.addAll(values, repeatedFixed32_);
        
        return this;
      }
      public Builder clearRepeatedFixed32() {
        repeatedFixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x40000000);
        
        return this;
      }
      
      // repeated fixed64 repeated_fixed64 = 38;
      private java.util.List<java.lang.Long> repeatedFixed64_ = java.util.Collections.emptyList();;
      private void ensureRepeatedFixed64IsMutable() {
        if (!((bitField0_ & 0x80000000) == 0x80000000)) {
          repeatedFixed64_ = new java.util.ArrayList<java.lang.Long>(repeatedFixed64_);
          bitField0_ |= 0x80000000;
         }
      }
      public java.util.List<java.lang.Long>
          getRepeatedFixed64List() {
        return java.util.Collections.unmodifiableList(repeatedFixed64_);
      }
      public int getRepeatedFixed64Count() {
        return repeatedFixed64_.size();
      }
      public long getRepeatedFixed64(int index) {
        return repeatedFixed64_.get(index);
      }
      public Builder setRepeatedFixed64(
          int index, long value) {
        ensureRepeatedFixed64IsMutable();
        repeatedFixed64_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedFixed64(long value) {
        ensureRepeatedFixed64IsMutable();
        repeatedFixed64_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedFixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedFixed64IsMutable();
        super.addAll(values, repeatedFixed64_);
        
        return this;
      }
      public Builder clearRepeatedFixed64() {
        repeatedFixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x80000000);
        
        return this;
      }
      
      // repeated sfixed32 repeated_sfixed32 = 39;
      private java.util.List<java.lang.Integer> repeatedSfixed32_ = java.util.Collections.emptyList();;
      private void ensureRepeatedSfixed32IsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          repeatedSfixed32_ = new java.util.ArrayList<java.lang.Integer>(repeatedSfixed32_);
          bitField1_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getRepeatedSfixed32List() {
        return java.util.Collections.unmodifiableList(repeatedSfixed32_);
      }
      public int getRepeatedSfixed32Count() {
        return repeatedSfixed32_.size();
      }
      public int getRepeatedSfixed32(int index) {
        return repeatedSfixed32_.get(index);
      }
      public Builder setRepeatedSfixed32(
          int index, int value) {
        ensureRepeatedSfixed32IsMutable();
        repeatedSfixed32_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedSfixed32(int value) {
        ensureRepeatedSfixed32IsMutable();
        repeatedSfixed32_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedSfixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRepeatedSfixed32IsMutable();
        super.addAll(values, repeatedSfixed32_);
        
        return this;
      }
      public Builder clearRepeatedSfixed32() {
        repeatedSfixed32_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000001);
        
        return this;
      }
      
      // repeated sfixed64 repeated_sfixed64 = 40;
      private java.util.List<java.lang.Long> repeatedSfixed64_ = java.util.Collections.emptyList();;
      private void ensureRepeatedSfixed64IsMutable() {
        if (!((bitField1_ & 0x00000002) == 0x00000002)) {
          repeatedSfixed64_ = new java.util.ArrayList<java.lang.Long>(repeatedSfixed64_);
          bitField1_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Long>
          getRepeatedSfixed64List() {
        return java.util.Collections.unmodifiableList(repeatedSfixed64_);
      }
      public int getRepeatedSfixed64Count() {
        return repeatedSfixed64_.size();
      }
      public long getRepeatedSfixed64(int index) {
        return repeatedSfixed64_.get(index);
      }
      public Builder setRepeatedSfixed64(
          int index, long value) {
        ensureRepeatedSfixed64IsMutable();
        repeatedSfixed64_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedSfixed64(long value) {
        ensureRepeatedSfixed64IsMutable();
        repeatedSfixed64_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedSfixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRepeatedSfixed64IsMutable();
        super.addAll(values, repeatedSfixed64_);
        
        return this;
      }
      public Builder clearRepeatedSfixed64() {
        repeatedSfixed64_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000002);
        
        return this;
      }
      
      // repeated float repeated_float = 41;
      private java.util.List<java.lang.Float> repeatedFloat_ = java.util.Collections.emptyList();;
      private void ensureRepeatedFloatIsMutable() {
        if (!((bitField1_ & 0x00000004) == 0x00000004)) {
          repeatedFloat_ = new java.util.ArrayList<java.lang.Float>(repeatedFloat_);
          bitField1_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Float>
          getRepeatedFloatList() {
        return java.util.Collections.unmodifiableList(repeatedFloat_);
      }
      public int getRepeatedFloatCount() {
        return repeatedFloat_.size();
      }
      public float getRepeatedFloat(int index) {
        return repeatedFloat_.get(index);
      }
      public Builder setRepeatedFloat(
          int index, float value) {
        ensureRepeatedFloatIsMutable();
        repeatedFloat_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedFloat(float value) {
        ensureRepeatedFloatIsMutable();
        repeatedFloat_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureRepeatedFloatIsMutable();
        super.addAll(values, repeatedFloat_);
        
        return this;
      }
      public Builder clearRepeatedFloat() {
        repeatedFloat_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000004);
        
        return this;
      }
      
      // repeated double repeated_double = 42;
      private java.util.List<java.lang.Double> repeatedDouble_ = java.util.Collections.emptyList();;
      private void ensureRepeatedDoubleIsMutable() {
        if (!((bitField1_ & 0x00000008) == 0x00000008)) {
          repeatedDouble_ = new java.util.ArrayList<java.lang.Double>(repeatedDouble_);
          bitField1_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Double>
          getRepeatedDoubleList() {
        return java.util.Collections.unmodifiableList(repeatedDouble_);
      }
      public int getRepeatedDoubleCount() {
        return repeatedDouble_.size();
      }
      public double getRepeatedDouble(int index) {
        return repeatedDouble_.get(index);
      }
      public Builder setRepeatedDouble(
          int index, double value) {
        ensureRepeatedDoubleIsMutable();
        repeatedDouble_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedDouble(double value) {
        ensureRepeatedDoubleIsMutable();
        repeatedDouble_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRepeatedDoubleIsMutable();
        super.addAll(values, repeatedDouble_);
        
        return this;
      }
      public Builder clearRepeatedDouble() {
        repeatedDouble_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000008);
        
        return this;
      }
      
      // repeated bool repeated_bool = 43;
      private java.util.List<java.lang.Boolean> repeatedBool_ = java.util.Collections.emptyList();;
      private void ensureRepeatedBoolIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          repeatedBool_ = new java.util.ArrayList<java.lang.Boolean>(repeatedBool_);
          bitField1_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Boolean>
          getRepeatedBoolList() {
        return java.util.Collections.unmodifiableList(repeatedBool_);
      }
      public int getRepeatedBoolCount() {
        return repeatedBool_.size();
      }
      public boolean getRepeatedBool(int index) {
        return repeatedBool_.get(index);
      }
      public Builder setRepeatedBool(
          int index, boolean value) {
        ensureRepeatedBoolIsMutable();
        repeatedBool_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedBool(boolean value) {
        ensureRepeatedBoolIsMutable();
        repeatedBool_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedBool(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureRepeatedBoolIsMutable();
        super.addAll(values, repeatedBool_);
        
        return this;
      }
      public Builder clearRepeatedBool() {
        repeatedBool_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000010);
        
        return this;
      }
      
      // repeated string repeated_string = 44;
      private com.google.protobuf.LazyStringList repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedStringIsMutable() {
        if (!((bitField1_ & 0x00000020) == 0x00000020)) {
          repeatedString_ = new com.google.protobuf.LazyStringArrayList(repeatedString_);
          bitField1_ |= 0x00000020;
         }
      }
      public java.util.List<String>
          getRepeatedStringList() {
        return java.util.Collections.unmodifiableList(repeatedString_);
      }
      public int getRepeatedStringCount() {
        return repeatedString_.size();
      }
      public String getRepeatedString(int index) {
        return repeatedString_.get(index);
      }
      public Builder setRepeatedString(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringIsMutable();
        repeatedString_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringIsMutable();
        repeatedString_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedString(
          java.lang.Iterable<String> values) {
        ensureRepeatedStringIsMutable();
        super.addAll(values, repeatedString_);
        
        return this;
      }
      public Builder clearRepeatedString() {
        repeatedString_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000020);
        
        return this;
      }
      void addRepeatedString(com.google.protobuf.ByteString value) {
        ensureRepeatedStringIsMutable();
        repeatedString_.add(value);
        
      }
      
      // repeated bytes repeated_bytes = 45;
      private java.util.List<com.google.protobuf.ByteString> repeatedBytes_ = java.util.Collections.emptyList();;
      private void ensureRepeatedBytesIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          repeatedBytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(repeatedBytes_);
          bitField1_ |= 0x00000040;
         }
      }
      public java.util.List<com.google.protobuf.ByteString>
          getRepeatedBytesList() {
        return java.util.Collections.unmodifiableList(repeatedBytes_);
      }
      public int getRepeatedBytesCount() {
        return repeatedBytes_.size();
      }
      public com.google.protobuf.ByteString getRepeatedBytes(int index) {
        return repeatedBytes_.get(index);
      }
      public Builder setRepeatedBytes(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedBytesIsMutable();
        repeatedBytes_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedBytesIsMutable();
        repeatedBytes_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRepeatedBytesIsMutable();
        super.addAll(values, repeatedBytes_);
        
        return this;
      }
      public Builder clearRepeatedBytes() {
        repeatedBytes_ = java.util.Collections.emptyList();;
        bitField1_ = (bitField1_ & ~0x00000040);
        
        return this;
      }
      
      // repeated group RepeatedGroup = 46 {
      private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> repeatedGroup_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedGroupIsMutable() {
        if (!((bitField1_ & 0x00000080) == 0x00000080)) {
          repeatedGroup_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup>(repeatedGroup_);
          bitField1_ |= 0x00000080;
         }
      }
      
      public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> getRepeatedGroupList() {
        return java.util.Collections.unmodifiableList(repeatedGroup_);
      }
      public int getRepeatedGroupCount() {
        return repeatedGroup_.size();
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup getRepeatedGroup(int index) {
        return repeatedGroup_.get(index);
      }
      public Builder setRepeatedGroup(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.set(index, value);
        
        return this;
      }
      public Builder setRepeatedGroup(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.Builder builderForValue) {
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedGroup(com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.add(value);
        
        return this;
      }
      public Builder addRepeatedGroup(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.add(index, value);
        
        return this;
      }
      public Builder addRepeatedGroup(
          com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.Builder builderForValue) {
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.add(builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedGroup(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup.Builder builderForValue) {
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllRepeatedGroup(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.TestAllTypesLite.RepeatedGroup> values) {
        ensureRepeatedGroupIsMutable();
        super.addAll(values, repeatedGroup_);
        
        return this;
      }
      public Builder clearRepeatedGroup() {
        repeatedGroup_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        
        return this;
      }
      public Builder removeRepeatedGroup(int index) {
        ensureRepeatedGroupIsMutable();
        repeatedGroup_.remove(index);
        
        return this;
      }
      
      // repeated .protobuf_unittest.TestAllTypesLite.NestedMessage repeated_nested_message = 48;
      private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> repeatedNestedMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedMessageIsMutable() {
        if (!((bitField1_ & 0x00000100) == 0x00000100)) {
          repeatedNestedMessage_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage>(repeatedNestedMessage_);
          bitField1_ |= 0x00000100;
         }
      }
      
      public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> getRepeatedNestedMessageList() {
        return java.util.Collections.unmodifiableList(repeatedNestedMessage_);
      }
      public int getRepeatedNestedMessageCount() {
        return repeatedNestedMessage_.size();
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage getRepeatedNestedMessage(int index) {
        return repeatedNestedMessage_.get(index);
      }
      public Builder setRepeatedNestedMessage(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.set(index, value);
        
        return this;
      }
      public Builder setRepeatedNestedMessage(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder builderForValue) {
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedNestedMessage(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.add(value);
        
        return this;
      }
      public Builder addRepeatedNestedMessage(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.add(index, value);
        
        return this;
      }
      public Builder addRepeatedNestedMessage(
          com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder builderForValue) {
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.add(builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedNestedMessage(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.Builder builderForValue) {
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllRepeatedNestedMessage(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> values) {
        ensureRepeatedNestedMessageIsMutable();
        super.addAll(values, repeatedNestedMessage_);
        
        return this;
      }
      public Builder clearRepeatedNestedMessage() {
        repeatedNestedMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000100);
        
        return this;
      }
      public Builder removeRepeatedNestedMessage(int index) {
        ensureRepeatedNestedMessageIsMutable();
        repeatedNestedMessage_.remove(index);
        
        return this;
      }
      
      // repeated .protobuf_unittest.ForeignMessageLite repeated_foreign_message = 49;
      private java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite> repeatedForeignMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedForeignMessageIsMutable() {
        if (!((bitField1_ & 0x00000200) == 0x00000200)) {
          repeatedForeignMessage_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.ForeignMessageLite>(repeatedForeignMessage_);
          bitField1_ |= 0x00000200;
         }
      }
      
      public java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite> getRepeatedForeignMessageList() {
        return java.util.Collections.unmodifiableList(repeatedForeignMessage_);
      }
      public int getRepeatedForeignMessageCount() {
        return repeatedForeignMessage_.size();
      }
      public com.google.protobuf.UnittestLite.ForeignMessageLite getRepeatedForeignMessage(int index) {
        return repeatedForeignMessage_.get(index);
      }
      public Builder setRepeatedForeignMessage(
          int index, com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.set(index, value);
        
        return this;
      }
      public Builder setRepeatedForeignMessage(
          int index, com.google.protobuf.UnittestLite.ForeignMessageLite.Builder builderForValue) {
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedForeignMessage(com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.add(value);
        
        return this;
      }
      public Builder addRepeatedForeignMessage(
          int index, com.google.protobuf.UnittestLite.ForeignMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.add(index, value);
        
        return this;
      }
      public Builder addRepeatedForeignMessage(
          com.google.protobuf.UnittestLite.ForeignMessageLite.Builder builderForValue) {
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.add(builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedForeignMessage(
          int index, com.google.protobuf.UnittestLite.ForeignMessageLite.Builder builderForValue) {
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllRepeatedForeignMessage(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.ForeignMessageLite> values) {
        ensureRepeatedForeignMessageIsMutable();
        super.addAll(values, repeatedForeignMessage_);
        
        return this;
      }
      public Builder clearRepeatedForeignMessage() {
        repeatedForeignMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000200);
        
        return this;
      }
      public Builder removeRepeatedForeignMessage(int index) {
        ensureRepeatedForeignMessageIsMutable();
        repeatedForeignMessage_.remove(index);
        
        return this;
      }
      
      // repeated .protobuf_unittest_import.ImportMessageLite repeated_import_message = 50;
      private java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite> repeatedImportMessage_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedImportMessageIsMutable() {
        if (!((bitField1_ & 0x00000400) == 0x00000400)) {
          repeatedImportMessage_ = new java.util.ArrayList<com.google.protobuf.UnittestImportLite.ImportMessageLite>(repeatedImportMessage_);
          bitField1_ |= 0x00000400;
         }
      }
      
      public java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite> getRepeatedImportMessageList() {
        return java.util.Collections.unmodifiableList(repeatedImportMessage_);
      }
      public int getRepeatedImportMessageCount() {
        return repeatedImportMessage_.size();
      }
      public com.google.protobuf.UnittestImportLite.ImportMessageLite getRepeatedImportMessage(int index) {
        return repeatedImportMessage_.get(index);
      }
      public Builder setRepeatedImportMessage(
          int index, com.google.protobuf.UnittestImportLite.ImportMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.set(index, value);
        
        return this;
      }
      public Builder setRepeatedImportMessage(
          int index, com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder builderForValue) {
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedImportMessage(com.google.protobuf.UnittestImportLite.ImportMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.add(value);
        
        return this;
      }
      public Builder addRepeatedImportMessage(
          int index, com.google.protobuf.UnittestImportLite.ImportMessageLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.add(index, value);
        
        return this;
      }
      public Builder addRepeatedImportMessage(
          com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder builderForValue) {
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.add(builderForValue.build());
        
        return this;
      }
      public Builder addRepeatedImportMessage(
          int index, com.google.protobuf.UnittestImportLite.ImportMessageLite.Builder builderForValue) {
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllRepeatedImportMessage(
          java.lang.Iterable<? extends com.google.protobuf.UnittestImportLite.ImportMessageLite> values) {
        ensureRepeatedImportMessageIsMutable();
        super.addAll(values, repeatedImportMessage_);
        
        return this;
      }
      public Builder clearRepeatedImportMessage() {
        repeatedImportMessage_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000400);
        
        return this;
      }
      public Builder removeRepeatedImportMessage(int index) {
        ensureRepeatedImportMessageIsMutable();
        repeatedImportMessage_.remove(index);
        
        return this;
      }
      
      // repeated .protobuf_unittest.TestAllTypesLite.NestedEnum repeated_nested_enum = 51;
      private java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> repeatedNestedEnum_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedNestedEnumIsMutable() {
        if (!((bitField1_ & 0x00000800) == 0x00000800)) {
          repeatedNestedEnum_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum>(repeatedNestedEnum_);
          bitField1_ |= 0x00000800;
        }
      }
      public java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> getRepeatedNestedEnumList() {
        return java.util.Collections.unmodifiableList(repeatedNestedEnum_);
      }
      public int getRepeatedNestedEnumCount() {
        return repeatedNestedEnum_.size();
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getRepeatedNestedEnum(int index) {
        return repeatedNestedEnum_.get(index);
      }
      public Builder setRepeatedNestedEnum(
          int index, com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedNestedEnum(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedNestedEnumIsMutable();
        repeatedNestedEnum_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedNestedEnum(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> values) {
        ensureRepeatedNestedEnumIsMutable();
        super.addAll(values, repeatedNestedEnum_);
        
        return this;
      }
      public Builder clearRepeatedNestedEnum() {
        repeatedNestedEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000800);
        
        return this;
      }
      
      // repeated .protobuf_unittest.ForeignEnumLite repeated_foreign_enum = 52;
      private java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> repeatedForeignEnum_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedForeignEnumIsMutable() {
        if (!((bitField1_ & 0x00001000) == 0x00001000)) {
          repeatedForeignEnum_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.ForeignEnumLite>(repeatedForeignEnum_);
          bitField1_ |= 0x00001000;
        }
      }
      public java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getRepeatedForeignEnumList() {
        return java.util.Collections.unmodifiableList(repeatedForeignEnum_);
      }
      public int getRepeatedForeignEnumCount() {
        return repeatedForeignEnum_.size();
      }
      public com.google.protobuf.UnittestLite.ForeignEnumLite getRepeatedForeignEnum(int index) {
        return repeatedForeignEnum_.get(index);
      }
      public Builder setRepeatedForeignEnum(
          int index, com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedForeignEnumIsMutable();
        repeatedForeignEnum_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedForeignEnum(com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedForeignEnumIsMutable();
        repeatedForeignEnum_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedForeignEnum(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.ForeignEnumLite> values) {
        ensureRepeatedForeignEnumIsMutable();
        super.addAll(values, repeatedForeignEnum_);
        
        return this;
      }
      public Builder clearRepeatedForeignEnum() {
        repeatedForeignEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00001000);
        
        return this;
      }
      
      // repeated .protobuf_unittest_import.ImportEnumLite repeated_import_enum = 53;
      private java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite> repeatedImportEnum_ =
        java.util.Collections.emptyList();
      private void ensureRepeatedImportEnumIsMutable() {
        if (!((bitField1_ & 0x00002000) == 0x00002000)) {
          repeatedImportEnum_ = new java.util.ArrayList<com.google.protobuf.UnittestImportLite.ImportEnumLite>(repeatedImportEnum_);
          bitField1_ |= 0x00002000;
        }
      }
      public java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite> getRepeatedImportEnumList() {
        return java.util.Collections.unmodifiableList(repeatedImportEnum_);
      }
      public int getRepeatedImportEnumCount() {
        return repeatedImportEnum_.size();
      }
      public com.google.protobuf.UnittestImportLite.ImportEnumLite getRepeatedImportEnum(int index) {
        return repeatedImportEnum_.get(index);
      }
      public Builder setRepeatedImportEnum(
          int index, com.google.protobuf.UnittestImportLite.ImportEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedImportEnumIsMutable();
        repeatedImportEnum_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedImportEnum(com.google.protobuf.UnittestImportLite.ImportEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRepeatedImportEnumIsMutable();
        repeatedImportEnum_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedImportEnum(
          java.lang.Iterable<? extends com.google.protobuf.UnittestImportLite.ImportEnumLite> values) {
        ensureRepeatedImportEnumIsMutable();
        super.addAll(values, repeatedImportEnum_);
        
        return this;
      }
      public Builder clearRepeatedImportEnum() {
        repeatedImportEnum_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00002000);
        
        return this;
      }
      
      // repeated string repeated_string_piece = 54 [ctype = STRING_PIECE];
      private com.google.protobuf.LazyStringList repeatedStringPiece_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedStringPieceIsMutable() {
        if (!((bitField1_ & 0x00004000) == 0x00004000)) {
          repeatedStringPiece_ = new com.google.protobuf.LazyStringArrayList(repeatedStringPiece_);
          bitField1_ |= 0x00004000;
         }
      }
      public java.util.List<String>
          getRepeatedStringPieceList() {
        return java.util.Collections.unmodifiableList(repeatedStringPiece_);
      }
      public int getRepeatedStringPieceCount() {
        return repeatedStringPiece_.size();
      }
      public String getRepeatedStringPiece(int index) {
        return repeatedStringPiece_.get(index);
      }
      public Builder setRepeatedStringPiece(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringPieceIsMutable();
        repeatedStringPiece_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedStringPiece(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedStringPieceIsMutable();
        repeatedStringPiece_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedStringPiece(
          java.lang.Iterable<String> values) {
        ensureRepeatedStringPieceIsMutable();
        super.addAll(values, repeatedStringPiece_);
        
        return this;
      }
      public Builder clearRepeatedStringPiece() {
        repeatedStringPiece_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00004000);
        
        return this;
      }
      void addRepeatedStringPiece(com.google.protobuf.ByteString value) {
        ensureRepeatedStringPieceIsMutable();
        repeatedStringPiece_.add(value);
        
      }
      
      // repeated string repeated_cord = 55 [ctype = CORD];
      private com.google.protobuf.LazyStringList repeatedCord_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRepeatedCordIsMutable() {
        if (!((bitField1_ & 0x00008000) == 0x00008000)) {
          repeatedCord_ = new com.google.protobuf.LazyStringArrayList(repeatedCord_);
          bitField1_ |= 0x00008000;
         }
      }
      public java.util.List<String>
          getRepeatedCordList() {
        return java.util.Collections.unmodifiableList(repeatedCord_);
      }
      public int getRepeatedCordCount() {
        return repeatedCord_.size();
      }
      public String getRepeatedCord(int index) {
        return repeatedCord_.get(index);
      }
      public Builder setRepeatedCord(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedCordIsMutable();
        repeatedCord_.set(index, value);
        
        return this;
      }
      public Builder addRepeatedCord(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatedCordIsMutable();
        repeatedCord_.add(value);
        
        return this;
      }
      public Builder addAllRepeatedCord(
          java.lang.Iterable<String> values) {
        ensureRepeatedCordIsMutable();
        super.addAll(values, repeatedCord_);
        
        return this;
      }
      public Builder clearRepeatedCord() {
        repeatedCord_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00008000);
        
        return this;
      }
      void addRepeatedCord(com.google.protobuf.ByteString value) {
        ensureRepeatedCordIsMutable();
        repeatedCord_.add(value);
        
      }
      
      // optional int32 default_int32 = 61 [default = 41];
      private int defaultInt32_ = 41;
      public boolean hasDefaultInt32() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      public int getDefaultInt32() {
        return defaultInt32_;
      }
      public Builder setDefaultInt32(int value) {
        bitField1_ |= 0x00010000;
        defaultInt32_ = value;
        
        return this;
      }
      public Builder clearDefaultInt32() {
        bitField1_ = (bitField1_ & ~0x00010000);
        defaultInt32_ = 41;
        
        return this;
      }
      
      // optional int64 default_int64 = 62 [default = 42];
      private long defaultInt64_ = 42L;
      public boolean hasDefaultInt64() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      public long getDefaultInt64() {
        return defaultInt64_;
      }
      public Builder setDefaultInt64(long value) {
        bitField1_ |= 0x00020000;
        defaultInt64_ = value;
        
        return this;
      }
      public Builder clearDefaultInt64() {
        bitField1_ = (bitField1_ & ~0x00020000);
        defaultInt64_ = 42L;
        
        return this;
      }
      
      // optional uint32 default_uint32 = 63 [default = 43];
      private int defaultUint32_ = 43;
      public boolean hasDefaultUint32() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      public int getDefaultUint32() {
        return defaultUint32_;
      }
      public Builder setDefaultUint32(int value) {
        bitField1_ |= 0x00040000;
        defaultUint32_ = value;
        
        return this;
      }
      public Builder clearDefaultUint32() {
        bitField1_ = (bitField1_ & ~0x00040000);
        defaultUint32_ = 43;
        
        return this;
      }
      
      // optional uint64 default_uint64 = 64 [default = 44];
      private long defaultUint64_ = 44L;
      public boolean hasDefaultUint64() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      public long getDefaultUint64() {
        return defaultUint64_;
      }
      public Builder setDefaultUint64(long value) {
        bitField1_ |= 0x00080000;
        defaultUint64_ = value;
        
        return this;
      }
      public Builder clearDefaultUint64() {
        bitField1_ = (bitField1_ & ~0x00080000);
        defaultUint64_ = 44L;
        
        return this;
      }
      
      // optional sint32 default_sint32 = 65 [default = -45];
      private int defaultSint32_ = -45;
      public boolean hasDefaultSint32() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      public int getDefaultSint32() {
        return defaultSint32_;
      }
      public Builder setDefaultSint32(int value) {
        bitField1_ |= 0x00100000;
        defaultSint32_ = value;
        
        return this;
      }
      public Builder clearDefaultSint32() {
        bitField1_ = (bitField1_ & ~0x00100000);
        defaultSint32_ = -45;
        
        return this;
      }
      
      // optional sint64 default_sint64 = 66 [default = 46];
      private long defaultSint64_ = 46L;
      public boolean hasDefaultSint64() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      public long getDefaultSint64() {
        return defaultSint64_;
      }
      public Builder setDefaultSint64(long value) {
        bitField1_ |= 0x00200000;
        defaultSint64_ = value;
        
        return this;
      }
      public Builder clearDefaultSint64() {
        bitField1_ = (bitField1_ & ~0x00200000);
        defaultSint64_ = 46L;
        
        return this;
      }
      
      // optional fixed32 default_fixed32 = 67 [default = 47];
      private int defaultFixed32_ = 47;
      public boolean hasDefaultFixed32() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      public int getDefaultFixed32() {
        return defaultFixed32_;
      }
      public Builder setDefaultFixed32(int value) {
        bitField1_ |= 0x00400000;
        defaultFixed32_ = value;
        
        return this;
      }
      public Builder clearDefaultFixed32() {
        bitField1_ = (bitField1_ & ~0x00400000);
        defaultFixed32_ = 47;
        
        return this;
      }
      
      // optional fixed64 default_fixed64 = 68 [default = 48];
      private long defaultFixed64_ = 48L;
      public boolean hasDefaultFixed64() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      public long getDefaultFixed64() {
        return defaultFixed64_;
      }
      public Builder setDefaultFixed64(long value) {
        bitField1_ |= 0x00800000;
        defaultFixed64_ = value;
        
        return this;
      }
      public Builder clearDefaultFixed64() {
        bitField1_ = (bitField1_ & ~0x00800000);
        defaultFixed64_ = 48L;
        
        return this;
      }
      
      // optional sfixed32 default_sfixed32 = 69 [default = 49];
      private int defaultSfixed32_ = 49;
      public boolean hasDefaultSfixed32() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      public int getDefaultSfixed32() {
        return defaultSfixed32_;
      }
      public Builder setDefaultSfixed32(int value) {
        bitField1_ |= 0x01000000;
        defaultSfixed32_ = value;
        
        return this;
      }
      public Builder clearDefaultSfixed32() {
        bitField1_ = (bitField1_ & ~0x01000000);
        defaultSfixed32_ = 49;
        
        return this;
      }
      
      // optional sfixed64 default_sfixed64 = 70 [default = -50];
      private long defaultSfixed64_ = -50L;
      public boolean hasDefaultSfixed64() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      public long getDefaultSfixed64() {
        return defaultSfixed64_;
      }
      public Builder setDefaultSfixed64(long value) {
        bitField1_ |= 0x02000000;
        defaultSfixed64_ = value;
        
        return this;
      }
      public Builder clearDefaultSfixed64() {
        bitField1_ = (bitField1_ & ~0x02000000);
        defaultSfixed64_ = -50L;
        
        return this;
      }
      
      // optional float default_float = 71 [default = 51.5];
      private float defaultFloat_ = 51.5F;
      public boolean hasDefaultFloat() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      public float getDefaultFloat() {
        return defaultFloat_;
      }
      public Builder setDefaultFloat(float value) {
        bitField1_ |= 0x04000000;
        defaultFloat_ = value;
        
        return this;
      }
      public Builder clearDefaultFloat() {
        bitField1_ = (bitField1_ & ~0x04000000);
        defaultFloat_ = 51.5F;
        
        return this;
      }
      
      // optional double default_double = 72 [default = 52000];
      private double defaultDouble_ = 52000D;
      public boolean hasDefaultDouble() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      public double getDefaultDouble() {
        return defaultDouble_;
      }
      public Builder setDefaultDouble(double value) {
        bitField1_ |= 0x08000000;
        defaultDouble_ = value;
        
        return this;
      }
      public Builder clearDefaultDouble() {
        bitField1_ = (bitField1_ & ~0x08000000);
        defaultDouble_ = 52000D;
        
        return this;
      }
      
      // optional bool default_bool = 73 [default = true];
      private boolean defaultBool_ = true;
      public boolean hasDefaultBool() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      public boolean getDefaultBool() {
        return defaultBool_;
      }
      public Builder setDefaultBool(boolean value) {
        bitField1_ |= 0x10000000;
        defaultBool_ = value;
        
        return this;
      }
      public Builder clearDefaultBool() {
        bitField1_ = (bitField1_ & ~0x10000000);
        defaultBool_ = true;
        
        return this;
      }
      
      // optional string default_string = 74 [default = "hello"];
      private java.lang.Object defaultString_ = "hello";
      public boolean hasDefaultString() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      public String getDefaultString() {
        java.lang.Object ref = defaultString_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          defaultString_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDefaultString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x20000000;
        defaultString_ = value;
        
        return this;
      }
      public Builder clearDefaultString() {
        bitField1_ = (bitField1_ & ~0x20000000);
        defaultString_ = getDefaultInstance().getDefaultString();
        
        return this;
      }
      void setDefaultString(com.google.protobuf.ByteString value) {
        bitField1_ |= 0x20000000;
        defaultString_ = value;
        
      }
      
      // optional bytes default_bytes = 75 [default = "world"];
      private com.google.protobuf.ByteString defaultBytes_ = com.google.protobuf.Internal.bytesDefaultValue("world");
      public boolean hasDefaultBytes() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      public com.google.protobuf.ByteString getDefaultBytes() {
        return defaultBytes_;
      }
      public Builder setDefaultBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x40000000;
        defaultBytes_ = value;
        
        return this;
      }
      public Builder clearDefaultBytes() {
        bitField1_ = (bitField1_ & ~0x40000000);
        defaultBytes_ = getDefaultInstance().getDefaultBytes();
        
        return this;
      }
      
      // optional .protobuf_unittest.TestAllTypesLite.NestedEnum default_nested_enum = 81 [default = BAR];
      private com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum defaultNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.BAR;
      public boolean hasDefaultNestedEnum() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      public com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum getDefaultNestedEnum() {
        return defaultNestedEnum_;
      }
      public Builder setDefaultNestedEnum(com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x80000000;
        defaultNestedEnum_ = value;
        
        return this;
      }
      public Builder clearDefaultNestedEnum() {
        bitField1_ = (bitField1_ & ~0x80000000);
        defaultNestedEnum_ = com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.BAR;
        
        return this;
      }
      
      // optional .protobuf_unittest.ForeignEnumLite default_foreign_enum = 82 [default = FOREIGN_LITE_BAR];
      private com.google.protobuf.UnittestLite.ForeignEnumLite defaultForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_BAR;
      public boolean hasDefaultForeignEnum() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.UnittestLite.ForeignEnumLite getDefaultForeignEnum() {
        return defaultForeignEnum_;
      }
      public Builder setDefaultForeignEnum(com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField2_ |= 0x00000001;
        defaultForeignEnum_ = value;
        
        return this;
      }
      public Builder clearDefaultForeignEnum() {
        bitField2_ = (bitField2_ & ~0x00000001);
        defaultForeignEnum_ = com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_BAR;
        
        return this;
      }
      
      // optional .protobuf_unittest_import.ImportEnumLite default_import_enum = 83 [default = IMPORT_LITE_BAR];
      private com.google.protobuf.UnittestImportLite.ImportEnumLite defaultImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_BAR;
      public boolean hasDefaultImportEnum() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.UnittestImportLite.ImportEnumLite getDefaultImportEnum() {
        return defaultImportEnum_;
      }
      public Builder setDefaultImportEnum(com.google.protobuf.UnittestImportLite.ImportEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField2_ |= 0x00000002;
        defaultImportEnum_ = value;
        
        return this;
      }
      public Builder clearDefaultImportEnum() {
        bitField2_ = (bitField2_ & ~0x00000002);
        defaultImportEnum_ = com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_BAR;
        
        return this;
      }
      
      // optional string default_string_piece = 84 [default = "abc", ctype = STRING_PIECE];
      private java.lang.Object defaultStringPiece_ = "abc";
      public boolean hasDefaultStringPiece() {
        return ((bitField2_ & 0x00000004) == 0x00000004);
      }
      public String getDefaultStringPiece() {
        java.lang.Object ref = defaultStringPiece_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          defaultStringPiece_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDefaultStringPiece(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000004;
        defaultStringPiece_ = value;
        
        return this;
      }
      public Builder clearDefaultStringPiece() {
        bitField2_ = (bitField2_ & ~0x00000004);
        defaultStringPiece_ = getDefaultInstance().getDefaultStringPiece();
        
        return this;
      }
      void setDefaultStringPiece(com.google.protobuf.ByteString value) {
        bitField2_ |= 0x00000004;
        defaultStringPiece_ = value;
        
      }
      
      // optional string default_cord = 85 [default = "123", ctype = CORD];
      private java.lang.Object defaultCord_ = "123";
      public boolean hasDefaultCord() {
        return ((bitField2_ & 0x00000008) == 0x00000008);
      }
      public String getDefaultCord() {
        java.lang.Object ref = defaultCord_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          defaultCord_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDefaultCord(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000008;
        defaultCord_ = value;
        
        return this;
      }
      public Builder clearDefaultCord() {
        bitField2_ = (bitField2_ & ~0x00000008);
        defaultCord_ = getDefaultInstance().getDefaultCord();
        
        return this;
      }
      void setDefaultCord(com.google.protobuf.ByteString value) {
        bitField2_ |= 0x00000008;
        defaultCord_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestAllTypesLite)
    }
    
    static {
      defaultInstance = new TestAllTypesLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestAllTypesLite)
  }
  
  public interface ForeignMessageLiteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int32 c = 1;
    boolean hasC();
    int getC();
  }
  public static final class ForeignMessageLite extends
      com.google.protobuf.GeneratedMessageLite
      implements ForeignMessageLiteOrBuilder {
    // Use ForeignMessageLite.newBuilder() to construct.
    private ForeignMessageLite(Builder builder) {
      super(builder);
    }
    private ForeignMessageLite(boolean noInit) {}
    
    private static final ForeignMessageLite defaultInstance;
    public static ForeignMessageLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public ForeignMessageLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int32 c = 1;
    public static final int C_FIELD_NUMBER = 1;
    private int c_;
    public boolean hasC() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getC() {
      return c_;
    }
    
    private void initFields() {
      c_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, c_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, c_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.ForeignMessageLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.ForeignMessageLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.ForeignMessageLite, Builder>
        implements com.google.protobuf.UnittestLite.ForeignMessageLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.ForeignMessageLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        c_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.ForeignMessageLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.ForeignMessageLite build() {
        com.google.protobuf.UnittestLite.ForeignMessageLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.ForeignMessageLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.ForeignMessageLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.ForeignMessageLite buildPartial() {
        com.google.protobuf.UnittestLite.ForeignMessageLite result = new com.google.protobuf.UnittestLite.ForeignMessageLite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.c_ = c_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.ForeignMessageLite other) {
        if (other == com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance()) return this;
        if (other.hasC()) {
          setC(other.getC());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              c_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 c = 1;
      private int c_ ;
      public boolean hasC() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getC() {
        return c_;
      }
      public Builder setC(int value) {
        bitField0_ |= 0x00000001;
        c_ = value;
        
        return this;
      }
      public Builder clearC() {
        bitField0_ = (bitField0_ & ~0x00000001);
        c_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.ForeignMessageLite)
    }
    
    static {
      defaultInstance = new ForeignMessageLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.ForeignMessageLite)
  }
  
  public interface TestPackedTypesLiteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated int32 packed_int32 = 90 [packed = true];
    java.util.List<java.lang.Integer> getPackedInt32List();
    int getPackedInt32Count();
    int getPackedInt32(int index);
    
    // repeated int64 packed_int64 = 91 [packed = true];
    java.util.List<java.lang.Long> getPackedInt64List();
    int getPackedInt64Count();
    long getPackedInt64(int index);
    
    // repeated uint32 packed_uint32 = 92 [packed = true];
    java.util.List<java.lang.Integer> getPackedUint32List();
    int getPackedUint32Count();
    int getPackedUint32(int index);
    
    // repeated uint64 packed_uint64 = 93 [packed = true];
    java.util.List<java.lang.Long> getPackedUint64List();
    int getPackedUint64Count();
    long getPackedUint64(int index);
    
    // repeated sint32 packed_sint32 = 94 [packed = true];
    java.util.List<java.lang.Integer> getPackedSint32List();
    int getPackedSint32Count();
    int getPackedSint32(int index);
    
    // repeated sint64 packed_sint64 = 95 [packed = true];
    java.util.List<java.lang.Long> getPackedSint64List();
    int getPackedSint64Count();
    long getPackedSint64(int index);
    
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    java.util.List<java.lang.Integer> getPackedFixed32List();
    int getPackedFixed32Count();
    int getPackedFixed32(int index);
    
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    java.util.List<java.lang.Long> getPackedFixed64List();
    int getPackedFixed64Count();
    long getPackedFixed64(int index);
    
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    java.util.List<java.lang.Integer> getPackedSfixed32List();
    int getPackedSfixed32Count();
    int getPackedSfixed32(int index);
    
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    java.util.List<java.lang.Long> getPackedSfixed64List();
    int getPackedSfixed64Count();
    long getPackedSfixed64(int index);
    
    // repeated float packed_float = 100 [packed = true];
    java.util.List<java.lang.Float> getPackedFloatList();
    int getPackedFloatCount();
    float getPackedFloat(int index);
    
    // repeated double packed_double = 101 [packed = true];
    java.util.List<java.lang.Double> getPackedDoubleList();
    int getPackedDoubleCount();
    double getPackedDouble(int index);
    
    // repeated bool packed_bool = 102 [packed = true];
    java.util.List<java.lang.Boolean> getPackedBoolList();
    int getPackedBoolCount();
    boolean getPackedBool(int index);
    
    // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
    java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getPackedEnumList();
    int getPackedEnumCount();
    com.google.protobuf.UnittestLite.ForeignEnumLite getPackedEnum(int index);
  }
  public static final class TestPackedTypesLite extends
      com.google.protobuf.GeneratedMessageLite
      implements TestPackedTypesLiteOrBuilder {
    // Use TestPackedTypesLite.newBuilder() to construct.
    private TestPackedTypesLite(Builder builder) {
      super(builder);
    }
    private TestPackedTypesLite(boolean noInit) {}
    
    private static final TestPackedTypesLite defaultInstance;
    public static TestPackedTypesLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestPackedTypesLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated int32 packed_int32 = 90 [packed = true];
    public static final int PACKED_INT32_FIELD_NUMBER = 90;
    private java.util.List<java.lang.Integer> packedInt32_;
    public java.util.List<java.lang.Integer>
        getPackedInt32List() {
      return packedInt32_;
    }
    public int getPackedInt32Count() {
      return packedInt32_.size();
    }
    public int getPackedInt32(int index) {
      return packedInt32_.get(index);
    }
    private int packedInt32MemoizedSerializedSize = -1;
    
    // repeated int64 packed_int64 = 91 [packed = true];
    public static final int PACKED_INT64_FIELD_NUMBER = 91;
    private java.util.List<java.lang.Long> packedInt64_;
    public java.util.List<java.lang.Long>
        getPackedInt64List() {
      return packedInt64_;
    }
    public int getPackedInt64Count() {
      return packedInt64_.size();
    }
    public long getPackedInt64(int index) {
      return packedInt64_.get(index);
    }
    private int packedInt64MemoizedSerializedSize = -1;
    
    // repeated uint32 packed_uint32 = 92 [packed = true];
    public static final int PACKED_UINT32_FIELD_NUMBER = 92;
    private java.util.List<java.lang.Integer> packedUint32_;
    public java.util.List<java.lang.Integer>
        getPackedUint32List() {
      return packedUint32_;
    }
    public int getPackedUint32Count() {
      return packedUint32_.size();
    }
    public int getPackedUint32(int index) {
      return packedUint32_.get(index);
    }
    private int packedUint32MemoizedSerializedSize = -1;
    
    // repeated uint64 packed_uint64 = 93 [packed = true];
    public static final int PACKED_UINT64_FIELD_NUMBER = 93;
    private java.util.List<java.lang.Long> packedUint64_;
    public java.util.List<java.lang.Long>
        getPackedUint64List() {
      return packedUint64_;
    }
    public int getPackedUint64Count() {
      return packedUint64_.size();
    }
    public long getPackedUint64(int index) {
      return packedUint64_.get(index);
    }
    private int packedUint64MemoizedSerializedSize = -1;
    
    // repeated sint32 packed_sint32 = 94 [packed = true];
    public static final int PACKED_SINT32_FIELD_NUMBER = 94;
    private java.util.List<java.lang.Integer> packedSint32_;
    public java.util.List<java.lang.Integer>
        getPackedSint32List() {
      return packedSint32_;
    }
    public int getPackedSint32Count() {
      return packedSint32_.size();
    }
    public int getPackedSint32(int index) {
      return packedSint32_.get(index);
    }
    private int packedSint32MemoizedSerializedSize = -1;
    
    // repeated sint64 packed_sint64 = 95 [packed = true];
    public static final int PACKED_SINT64_FIELD_NUMBER = 95;
    private java.util.List<java.lang.Long> packedSint64_;
    public java.util.List<java.lang.Long>
        getPackedSint64List() {
      return packedSint64_;
    }
    public int getPackedSint64Count() {
      return packedSint64_.size();
    }
    public long getPackedSint64(int index) {
      return packedSint64_.get(index);
    }
    private int packedSint64MemoizedSerializedSize = -1;
    
    // repeated fixed32 packed_fixed32 = 96 [packed = true];
    public static final int PACKED_FIXED32_FIELD_NUMBER = 96;
    private java.util.List<java.lang.Integer> packedFixed32_;
    public java.util.List<java.lang.Integer>
        getPackedFixed32List() {
      return packedFixed32_;
    }
    public int getPackedFixed32Count() {
      return packedFixed32_.size();
    }
    public int getPackedFixed32(int index) {
      return packedFixed32_.get(index);
    }
    private int packedFixed32MemoizedSerializedSize = -1;
    
    // repeated fixed64 packed_fixed64 = 97 [packed = true];
    public static final int PACKED_FIXED64_FIELD_NUMBER = 97;
    private java.util.List<java.lang.Long> packedFixed64_;
    public java.util.List<java.lang.Long>
        getPackedFixed64List() {
      return packedFixed64_;
    }
    public int getPackedFixed64Count() {
      return packedFixed64_.size();
    }
    public long getPackedFixed64(int index) {
      return packedFixed64_.get(index);
    }
    private int packedFixed64MemoizedSerializedSize = -1;
    
    // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
    public static final int PACKED_SFIXED32_FIELD_NUMBER = 98;
    private java.util.List<java.lang.Integer> packedSfixed32_;
    public java.util.List<java.lang.Integer>
        getPackedSfixed32List() {
      return packedSfixed32_;
    }
    public int getPackedSfixed32Count() {
      return packedSfixed32_.size();
    }
    public int getPackedSfixed32(int index) {
      return packedSfixed32_.get(index);
    }
    private int packedSfixed32MemoizedSerializedSize = -1;
    
    // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
    public static final int PACKED_SFIXED64_FIELD_NUMBER = 99;
    private java.util.List<java.lang.Long> packedSfixed64_;
    public java.util.List<java.lang.Long>
        getPackedSfixed64List() {
      return packedSfixed64_;
    }
    public int getPackedSfixed64Count() {
      return packedSfixed64_.size();
    }
    public long getPackedSfixed64(int index) {
      return packedSfixed64_.get(index);
    }
    private int packedSfixed64MemoizedSerializedSize = -1;
    
    // repeated float packed_float = 100 [packed = true];
    public static final int PACKED_FLOAT_FIELD_NUMBER = 100;
    private java.util.List<java.lang.Float> packedFloat_;
    public java.util.List<java.lang.Float>
        getPackedFloatList() {
      return packedFloat_;
    }
    public int getPackedFloatCount() {
      return packedFloat_.size();
    }
    public float getPackedFloat(int index) {
      return packedFloat_.get(index);
    }
    private int packedFloatMemoizedSerializedSize = -1;
    
    // repeated double packed_double = 101 [packed = true];
    public static final int PACKED_DOUBLE_FIELD_NUMBER = 101;
    private java.util.List<java.lang.Double> packedDouble_;
    public java.util.List<java.lang.Double>
        getPackedDoubleList() {
      return packedDouble_;
    }
    public int getPackedDoubleCount() {
      return packedDouble_.size();
    }
    public double getPackedDouble(int index) {
      return packedDouble_.get(index);
    }
    private int packedDoubleMemoizedSerializedSize = -1;
    
    // repeated bool packed_bool = 102 [packed = true];
    public static final int PACKED_BOOL_FIELD_NUMBER = 102;
    private java.util.List<java.lang.Boolean> packedBool_;
    public java.util.List<java.lang.Boolean>
        getPackedBoolList() {
      return packedBool_;
    }
    public int getPackedBoolCount() {
      return packedBool_.size();
    }
    public boolean getPackedBool(int index) {
      return packedBool_.get(index);
    }
    private int packedBoolMemoizedSerializedSize = -1;
    
    // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
    public static final int PACKED_ENUM_FIELD_NUMBER = 103;
    private java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> packedEnum_;
    public java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getPackedEnumList() {
      return packedEnum_;
    }
    public int getPackedEnumCount() {
      return packedEnum_.size();
    }
    public com.google.protobuf.UnittestLite.ForeignEnumLite getPackedEnum(int index) {
      return packedEnum_.get(index);
    }
    private int packedEnumMemoizedSerializedSize;
    
    private void initFields() {
      packedInt32_ = java.util.Collections.emptyList();;
      packedInt64_ = java.util.Collections.emptyList();;
      packedUint32_ = java.util.Collections.emptyList();;
      packedUint64_ = java.util.Collections.emptyList();;
      packedSint32_ = java.util.Collections.emptyList();;
      packedSint64_ = java.util.Collections.emptyList();;
      packedFixed32_ = java.util.Collections.emptyList();;
      packedFixed64_ = java.util.Collections.emptyList();;
      packedSfixed32_ = java.util.Collections.emptyList();;
      packedSfixed64_ = java.util.Collections.emptyList();;
      packedFloat_ = java.util.Collections.emptyList();;
      packedDouble_ = java.util.Collections.emptyList();;
      packedBool_ = java.util.Collections.emptyList();;
      packedEnum_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getPackedInt32List().size() > 0) {
        output.writeRawVarint32(722);
        output.writeRawVarint32(packedInt32MemoizedSerializedSize);
      }
      for (int i = 0; i < packedInt32_.size(); i++) {
        output.writeInt32NoTag(packedInt32_.get(i));
      }
      if (getPackedInt64List().size() > 0) {
        output.writeRawVarint32(730);
        output.writeRawVarint32(packedInt64MemoizedSerializedSize);
      }
      for (int i = 0; i < packedInt64_.size(); i++) {
        output.writeInt64NoTag(packedInt64_.get(i));
      }
      if (getPackedUint32List().size() > 0) {
        output.writeRawVarint32(738);
        output.writeRawVarint32(packedUint32MemoizedSerializedSize);
      }
      for (int i = 0; i < packedUint32_.size(); i++) {
        output.writeUInt32NoTag(packedUint32_.get(i));
      }
      if (getPackedUint64List().size() > 0) {
        output.writeRawVarint32(746);
        output.writeRawVarint32(packedUint64MemoizedSerializedSize);
      }
      for (int i = 0; i < packedUint64_.size(); i++) {
        output.writeUInt64NoTag(packedUint64_.get(i));
      }
      if (getPackedSint32List().size() > 0) {
        output.writeRawVarint32(754);
        output.writeRawVarint32(packedSint32MemoizedSerializedSize);
      }
      for (int i = 0; i < packedSint32_.size(); i++) {
        output.writeSInt32NoTag(packedSint32_.get(i));
      }
      if (getPackedSint64List().size() > 0) {
        output.writeRawVarint32(762);
        output.writeRawVarint32(packedSint64MemoizedSerializedSize);
      }
      for (int i = 0; i < packedSint64_.size(); i++) {
        output.writeSInt64NoTag(packedSint64_.get(i));
      }
      if (getPackedFixed32List().size() > 0) {
        output.writeRawVarint32(770);
        output.writeRawVarint32(packedFixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < packedFixed32_.size(); i++) {
        output.writeFixed32NoTag(packedFixed32_.get(i));
      }
      if (getPackedFixed64List().size() > 0) {
        output.writeRawVarint32(778);
        output.writeRawVarint32(packedFixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < packedFixed64_.size(); i++) {
        output.writeFixed64NoTag(packedFixed64_.get(i));
      }
      if (getPackedSfixed32List().size() > 0) {
        output.writeRawVarint32(786);
        output.writeRawVarint32(packedSfixed32MemoizedSerializedSize);
      }
      for (int i = 0; i < packedSfixed32_.size(); i++) {
        output.writeSFixed32NoTag(packedSfixed32_.get(i));
      }
      if (getPackedSfixed64List().size() > 0) {
        output.writeRawVarint32(794);
        output.writeRawVarint32(packedSfixed64MemoizedSerializedSize);
      }
      for (int i = 0; i < packedSfixed64_.size(); i++) {
        output.writeSFixed64NoTag(packedSfixed64_.get(i));
      }
      if (getPackedFloatList().size() > 0) {
        output.writeRawVarint32(802);
        output.writeRawVarint32(packedFloatMemoizedSerializedSize);
      }
      for (int i = 0; i < packedFloat_.size(); i++) {
        output.writeFloatNoTag(packedFloat_.get(i));
      }
      if (getPackedDoubleList().size() > 0) {
        output.writeRawVarint32(810);
        output.writeRawVarint32(packedDoubleMemoizedSerializedSize);
      }
      for (int i = 0; i < packedDouble_.size(); i++) {
        output.writeDoubleNoTag(packedDouble_.get(i));
      }
      if (getPackedBoolList().size() > 0) {
        output.writeRawVarint32(818);
        output.writeRawVarint32(packedBoolMemoizedSerializedSize);
      }
      for (int i = 0; i < packedBool_.size(); i++) {
        output.writeBoolNoTag(packedBool_.get(i));
      }
      if (getPackedEnumList().size() > 0) {
        output.writeRawVarint32(826);
        output.writeRawVarint32(packedEnumMemoizedSerializedSize);
      }
      for (int i = 0; i < packedEnum_.size(); i++) {
        output.writeEnumNoTag(packedEnum_.get(i).getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < packedInt32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(packedInt32_.get(i));
        }
        size += dataSize;
        if (!getPackedInt32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedInt32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedInt64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(packedInt64_.get(i));
        }
        size += dataSize;
        if (!getPackedInt64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedInt64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedUint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(packedUint32_.get(i));
        }
        size += dataSize;
        if (!getPackedUint32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedUint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedUint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(packedUint64_.get(i));
        }
        size += dataSize;
        if (!getPackedUint64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedUint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedSint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(packedSint32_.get(i));
        }
        size += dataSize;
        if (!getPackedSint32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedSint32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedSint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(packedSint64_.get(i));
        }
        size += dataSize;
        if (!getPackedSint64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedSint64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPackedFixed32List().size();
        size += dataSize;
        if (!getPackedFixed32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedFixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPackedFixed64List().size();
        size += dataSize;
        if (!getPackedFixed64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedFixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPackedSfixed32List().size();
        size += dataSize;
        if (!getPackedSfixed32List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedSfixed32MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPackedSfixed64List().size();
        size += dataSize;
        if (!getPackedSfixed64List().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedSfixed64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPackedFloatList().size();
        size += dataSize;
        if (!getPackedFloatList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedFloatMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPackedDoubleList().size();
        size += dataSize;
        if (!getPackedDoubleList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedDoubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPackedBoolList().size();
        size += dataSize;
        if (!getPackedBoolList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packedBoolMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packedEnum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(packedEnum_.get(i).getNumber());
        }
        size += dataSize;
        if (!getPackedEnumList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeRawVarint32Size(dataSize);
        }packedEnumMemoizedSerializedSize = dataSize;
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedTypesLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestPackedTypesLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.TestPackedTypesLite, Builder>
        implements com.google.protobuf.UnittestLite.TestPackedTypesLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestPackedTypesLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        packedInt32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        packedInt64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        packedUint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        packedUint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        packedSint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        packedSint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        packedFixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        packedFixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        packedSfixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        packedSfixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        packedFloat_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        packedDouble_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        packedBool_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        packedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestPackedTypesLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestPackedTypesLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestPackedTypesLite build() {
        com.google.protobuf.UnittestLite.TestPackedTypesLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestPackedTypesLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestPackedTypesLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestPackedTypesLite buildPartial() {
        com.google.protobuf.UnittestLite.TestPackedTypesLite result = new com.google.protobuf.UnittestLite.TestPackedTypesLite(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          packedInt32_ = java.util.Collections.unmodifiableList(packedInt32_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.packedInt32_ = packedInt32_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          packedInt64_ = java.util.Collections.unmodifiableList(packedInt64_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.packedInt64_ = packedInt64_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          packedUint32_ = java.util.Collections.unmodifiableList(packedUint32_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.packedUint32_ = packedUint32_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          packedUint64_ = java.util.Collections.unmodifiableList(packedUint64_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.packedUint64_ = packedUint64_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          packedSint32_ = java.util.Collections.unmodifiableList(packedSint32_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.packedSint32_ = packedSint32_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          packedSint64_ = java.util.Collections.unmodifiableList(packedSint64_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.packedSint64_ = packedSint64_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          packedFixed32_ = java.util.Collections.unmodifiableList(packedFixed32_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.packedFixed32_ = packedFixed32_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          packedFixed64_ = java.util.Collections.unmodifiableList(packedFixed64_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.packedFixed64_ = packedFixed64_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          packedSfixed32_ = java.util.Collections.unmodifiableList(packedSfixed32_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.packedSfixed32_ = packedSfixed32_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          packedSfixed64_ = java.util.Collections.unmodifiableList(packedSfixed64_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.packedSfixed64_ = packedSfixed64_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          packedFloat_ = java.util.Collections.unmodifiableList(packedFloat_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.packedFloat_ = packedFloat_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          packedDouble_ = java.util.Collections.unmodifiableList(packedDouble_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.packedDouble_ = packedDouble_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          packedBool_ = java.util.Collections.unmodifiableList(packedBool_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.packedBool_ = packedBool_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          packedEnum_ = java.util.Collections.unmodifiableList(packedEnum_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.packedEnum_ = packedEnum_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestPackedTypesLite other) {
        if (other == com.google.protobuf.UnittestLite.TestPackedTypesLite.getDefaultInstance()) return this;
        if (!other.packedInt32_.isEmpty()) {
          if (packedInt32_.isEmpty()) {
            packedInt32_ = other.packedInt32_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePackedInt32IsMutable();
            packedInt32_.addAll(other.packedInt32_);
          }
          
        }
        if (!other.packedInt64_.isEmpty()) {
          if (packedInt64_.isEmpty()) {
            packedInt64_ = other.packedInt64_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePackedInt64IsMutable();
            packedInt64_.addAll(other.packedInt64_);
          }
          
        }
        if (!other.packedUint32_.isEmpty()) {
          if (packedUint32_.isEmpty()) {
            packedUint32_ = other.packedUint32_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePackedUint32IsMutable();
            packedUint32_.addAll(other.packedUint32_);
          }
          
        }
        if (!other.packedUint64_.isEmpty()) {
          if (packedUint64_.isEmpty()) {
            packedUint64_ = other.packedUint64_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePackedUint64IsMutable();
            packedUint64_.addAll(other.packedUint64_);
          }
          
        }
        if (!other.packedSint32_.isEmpty()) {
          if (packedSint32_.isEmpty()) {
            packedSint32_ = other.packedSint32_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePackedSint32IsMutable();
            packedSint32_.addAll(other.packedSint32_);
          }
          
        }
        if (!other.packedSint64_.isEmpty()) {
          if (packedSint64_.isEmpty()) {
            packedSint64_ = other.packedSint64_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePackedSint64IsMutable();
            packedSint64_.addAll(other.packedSint64_);
          }
          
        }
        if (!other.packedFixed32_.isEmpty()) {
          if (packedFixed32_.isEmpty()) {
            packedFixed32_ = other.packedFixed32_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePackedFixed32IsMutable();
            packedFixed32_.addAll(other.packedFixed32_);
          }
          
        }
        if (!other.packedFixed64_.isEmpty()) {
          if (packedFixed64_.isEmpty()) {
            packedFixed64_ = other.packedFixed64_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePackedFixed64IsMutable();
            packedFixed64_.addAll(other.packedFixed64_);
          }
          
        }
        if (!other.packedSfixed32_.isEmpty()) {
          if (packedSfixed32_.isEmpty()) {
            packedSfixed32_ = other.packedSfixed32_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePackedSfixed32IsMutable();
            packedSfixed32_.addAll(other.packedSfixed32_);
          }
          
        }
        if (!other.packedSfixed64_.isEmpty()) {
          if (packedSfixed64_.isEmpty()) {
            packedSfixed64_ = other.packedSfixed64_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensurePackedSfixed64IsMutable();
            packedSfixed64_.addAll(other.packedSfixed64_);
          }
          
        }
        if (!other.packedFloat_.isEmpty()) {
          if (packedFloat_.isEmpty()) {
            packedFloat_ = other.packedFloat_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensurePackedFloatIsMutable();
            packedFloat_.addAll(other.packedFloat_);
          }
          
        }
        if (!other.packedDouble_.isEmpty()) {
          if (packedDouble_.isEmpty()) {
            packedDouble_ = other.packedDouble_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePackedDoubleIsMutable();
            packedDouble_.addAll(other.packedDouble_);
          }
          
        }
        if (!other.packedBool_.isEmpty()) {
          if (packedBool_.isEmpty()) {
            packedBool_ = other.packedBool_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensurePackedBoolIsMutable();
            packedBool_.addAll(other.packedBool_);
          }
          
        }
        if (!other.packedEnum_.isEmpty()) {
          if (packedEnum_.isEmpty()) {
            packedEnum_ = other.packedEnum_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensurePackedEnumIsMutable();
            packedEnum_.addAll(other.packedEnum_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 720: {
              ensurePackedInt32IsMutable();
              packedInt32_.add(input.readInt32());
              break;
            }
            case 722: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedInt32(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 728: {
              ensurePackedInt64IsMutable();
              packedInt64_.add(input.readInt64());
              break;
            }
            case 730: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedInt64(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 736: {
              ensurePackedUint32IsMutable();
              packedUint32_.add(input.readUInt32());
              break;
            }
            case 738: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedUint32(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 744: {
              ensurePackedUint64IsMutable();
              packedUint64_.add(input.readUInt64());
              break;
            }
            case 746: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedUint64(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 752: {
              ensurePackedSint32IsMutable();
              packedSint32_.add(input.readSInt32());
              break;
            }
            case 754: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedSint32(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 760: {
              ensurePackedSint64IsMutable();
              packedSint64_.add(input.readSInt64());
              break;
            }
            case 762: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedSint64(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 773: {
              ensurePackedFixed32IsMutable();
              packedFixed32_.add(input.readFixed32());
              break;
            }
            case 770: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedFixed32(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 777: {
              ensurePackedFixed64IsMutable();
              packedFixed64_.add(input.readFixed64());
              break;
            }
            case 778: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedFixed64(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 789: {
              ensurePackedSfixed32IsMutable();
              packedSfixed32_.add(input.readSFixed32());
              break;
            }
            case 786: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedSfixed32(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 793: {
              ensurePackedSfixed64IsMutable();
              packedSfixed64_.add(input.readSFixed64());
              break;
            }
            case 794: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedSfixed64(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 805: {
              ensurePackedFloatIsMutable();
              packedFloat_.add(input.readFloat());
              break;
            }
            case 802: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 809: {
              ensurePackedDoubleIsMutable();
              packedDouble_.add(input.readDouble());
              break;
            }
            case 810: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 816: {
              ensurePackedBoolIsMutable();
              packedBool_.add(input.readBool());
              break;
            }
            case 818: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPackedBool(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 824: {
              int rawValue = input.readEnum();
              com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
              if (value != null) {
                addPackedEnum(value);
              }
              break;
            }
            case 826: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.google.protobuf.UnittestLite.ForeignEnumLite value = com.google.protobuf.UnittestLite.ForeignEnumLite.valueOf(rawValue);
                if (value != null) {
                  addPackedEnum(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated int32 packed_int32 = 90 [packed = true];
      private java.util.List<java.lang.Integer> packedInt32_ = java.util.Collections.emptyList();;
      private void ensurePackedInt32IsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          packedInt32_ = new java.util.ArrayList<java.lang.Integer>(packedInt32_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getPackedInt32List() {
        return java.util.Collections.unmodifiableList(packedInt32_);
      }
      public int getPackedInt32Count() {
        return packedInt32_.size();
      }
      public int getPackedInt32(int index) {
        return packedInt32_.get(index);
      }
      public Builder setPackedInt32(
          int index, int value) {
        ensurePackedInt32IsMutable();
        packedInt32_.set(index, value);
        
        return this;
      }
      public Builder addPackedInt32(int value) {
        ensurePackedInt32IsMutable();
        packedInt32_.add(value);
        
        return this;
      }
      public Builder addAllPackedInt32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePackedInt32IsMutable();
        super.addAll(values, packedInt32_);
        
        return this;
      }
      public Builder clearPackedInt32() {
        packedInt32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      
      // repeated int64 packed_int64 = 91 [packed = true];
      private java.util.List<java.lang.Long> packedInt64_ = java.util.Collections.emptyList();;
      private void ensurePackedInt64IsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          packedInt64_ = new java.util.ArrayList<java.lang.Long>(packedInt64_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Long>
          getPackedInt64List() {
        return java.util.Collections.unmodifiableList(packedInt64_);
      }
      public int getPackedInt64Count() {
        return packedInt64_.size();
      }
      public long getPackedInt64(int index) {
        return packedInt64_.get(index);
      }
      public Builder setPackedInt64(
          int index, long value) {
        ensurePackedInt64IsMutable();
        packedInt64_.set(index, value);
        
        return this;
      }
      public Builder addPackedInt64(long value) {
        ensurePackedInt64IsMutable();
        packedInt64_.add(value);
        
        return this;
      }
      public Builder addAllPackedInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePackedInt64IsMutable();
        super.addAll(values, packedInt64_);
        
        return this;
      }
      public Builder clearPackedInt64() {
        packedInt64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      
      // repeated uint32 packed_uint32 = 92 [packed = true];
      private java.util.List<java.lang.Integer> packedUint32_ = java.util.Collections.emptyList();;
      private void ensurePackedUint32IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          packedUint32_ = new java.util.ArrayList<java.lang.Integer>(packedUint32_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getPackedUint32List() {
        return java.util.Collections.unmodifiableList(packedUint32_);
      }
      public int getPackedUint32Count() {
        return packedUint32_.size();
      }
      public int getPackedUint32(int index) {
        return packedUint32_.get(index);
      }
      public Builder setPackedUint32(
          int index, int value) {
        ensurePackedUint32IsMutable();
        packedUint32_.set(index, value);
        
        return this;
      }
      public Builder addPackedUint32(int value) {
        ensurePackedUint32IsMutable();
        packedUint32_.add(value);
        
        return this;
      }
      public Builder addAllPackedUint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePackedUint32IsMutable();
        super.addAll(values, packedUint32_);
        
        return this;
      }
      public Builder clearPackedUint32() {
        packedUint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      
      // repeated uint64 packed_uint64 = 93 [packed = true];
      private java.util.List<java.lang.Long> packedUint64_ = java.util.Collections.emptyList();;
      private void ensurePackedUint64IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          packedUint64_ = new java.util.ArrayList<java.lang.Long>(packedUint64_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Long>
          getPackedUint64List() {
        return java.util.Collections.unmodifiableList(packedUint64_);
      }
      public int getPackedUint64Count() {
        return packedUint64_.size();
      }
      public long getPackedUint64(int index) {
        return packedUint64_.get(index);
      }
      public Builder setPackedUint64(
          int index, long value) {
        ensurePackedUint64IsMutable();
        packedUint64_.set(index, value);
        
        return this;
      }
      public Builder addPackedUint64(long value) {
        ensurePackedUint64IsMutable();
        packedUint64_.add(value);
        
        return this;
      }
      public Builder addAllPackedUint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePackedUint64IsMutable();
        super.addAll(values, packedUint64_);
        
        return this;
      }
      public Builder clearPackedUint64() {
        packedUint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      
      // repeated sint32 packed_sint32 = 94 [packed = true];
      private java.util.List<java.lang.Integer> packedSint32_ = java.util.Collections.emptyList();;
      private void ensurePackedSint32IsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          packedSint32_ = new java.util.ArrayList<java.lang.Integer>(packedSint32_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getPackedSint32List() {
        return java.util.Collections.unmodifiableList(packedSint32_);
      }
      public int getPackedSint32Count() {
        return packedSint32_.size();
      }
      public int getPackedSint32(int index) {
        return packedSint32_.get(index);
      }
      public Builder setPackedSint32(
          int index, int value) {
        ensurePackedSint32IsMutable();
        packedSint32_.set(index, value);
        
        return this;
      }
      public Builder addPackedSint32(int value) {
        ensurePackedSint32IsMutable();
        packedSint32_.add(value);
        
        return this;
      }
      public Builder addAllPackedSint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePackedSint32IsMutable();
        super.addAll(values, packedSint32_);
        
        return this;
      }
      public Builder clearPackedSint32() {
        packedSint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      
      // repeated sint64 packed_sint64 = 95 [packed = true];
      private java.util.List<java.lang.Long> packedSint64_ = java.util.Collections.emptyList();;
      private void ensurePackedSint64IsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          packedSint64_ = new java.util.ArrayList<java.lang.Long>(packedSint64_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Long>
          getPackedSint64List() {
        return java.util.Collections.unmodifiableList(packedSint64_);
      }
      public int getPackedSint64Count() {
        return packedSint64_.size();
      }
      public long getPackedSint64(int index) {
        return packedSint64_.get(index);
      }
      public Builder setPackedSint64(
          int index, long value) {
        ensurePackedSint64IsMutable();
        packedSint64_.set(index, value);
        
        return this;
      }
      public Builder addPackedSint64(long value) {
        ensurePackedSint64IsMutable();
        packedSint64_.add(value);
        
        return this;
      }
      public Builder addAllPackedSint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePackedSint64IsMutable();
        super.addAll(values, packedSint64_);
        
        return this;
      }
      public Builder clearPackedSint64() {
        packedSint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        
        return this;
      }
      
      // repeated fixed32 packed_fixed32 = 96 [packed = true];
      private java.util.List<java.lang.Integer> packedFixed32_ = java.util.Collections.emptyList();;
      private void ensurePackedFixed32IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          packedFixed32_ = new java.util.ArrayList<java.lang.Integer>(packedFixed32_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getPackedFixed32List() {
        return java.util.Collections.unmodifiableList(packedFixed32_);
      }
      public int getPackedFixed32Count() {
        return packedFixed32_.size();
      }
      public int getPackedFixed32(int index) {
        return packedFixed32_.get(index);
      }
      public Builder setPackedFixed32(
          int index, int value) {
        ensurePackedFixed32IsMutable();
        packedFixed32_.set(index, value);
        
        return this;
      }
      public Builder addPackedFixed32(int value) {
        ensurePackedFixed32IsMutable();
        packedFixed32_.add(value);
        
        return this;
      }
      public Builder addAllPackedFixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePackedFixed32IsMutable();
        super.addAll(values, packedFixed32_);
        
        return this;
      }
      public Builder clearPackedFixed32() {
        packedFixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }
      
      // repeated fixed64 packed_fixed64 = 97 [packed = true];
      private java.util.List<java.lang.Long> packedFixed64_ = java.util.Collections.emptyList();;
      private void ensurePackedFixed64IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          packedFixed64_ = new java.util.ArrayList<java.lang.Long>(packedFixed64_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Long>
          getPackedFixed64List() {
        return java.util.Collections.unmodifiableList(packedFixed64_);
      }
      public int getPackedFixed64Count() {
        return packedFixed64_.size();
      }
      public long getPackedFixed64(int index) {
        return packedFixed64_.get(index);
      }
      public Builder setPackedFixed64(
          int index, long value) {
        ensurePackedFixed64IsMutable();
        packedFixed64_.set(index, value);
        
        return this;
      }
      public Builder addPackedFixed64(long value) {
        ensurePackedFixed64IsMutable();
        packedFixed64_.add(value);
        
        return this;
      }
      public Builder addAllPackedFixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePackedFixed64IsMutable();
        super.addAll(values, packedFixed64_);
        
        return this;
      }
      public Builder clearPackedFixed64() {
        packedFixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        
        return this;
      }
      
      // repeated sfixed32 packed_sfixed32 = 98 [packed = true];
      private java.util.List<java.lang.Integer> packedSfixed32_ = java.util.Collections.emptyList();;
      private void ensurePackedSfixed32IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          packedSfixed32_ = new java.util.ArrayList<java.lang.Integer>(packedSfixed32_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<java.lang.Integer>
          getPackedSfixed32List() {
        return java.util.Collections.unmodifiableList(packedSfixed32_);
      }
      public int getPackedSfixed32Count() {
        return packedSfixed32_.size();
      }
      public int getPackedSfixed32(int index) {
        return packedSfixed32_.get(index);
      }
      public Builder setPackedSfixed32(
          int index, int value) {
        ensurePackedSfixed32IsMutable();
        packedSfixed32_.set(index, value);
        
        return this;
      }
      public Builder addPackedSfixed32(int value) {
        ensurePackedSfixed32IsMutable();
        packedSfixed32_.add(value);
        
        return this;
      }
      public Builder addAllPackedSfixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePackedSfixed32IsMutable();
        super.addAll(values, packedSfixed32_);
        
        return this;
      }
      public Builder clearPackedSfixed32() {
        packedSfixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        
        return this;
      }
      
      // repeated sfixed64 packed_sfixed64 = 99 [packed = true];
      private java.util.List<java.lang.Long> packedSfixed64_ = java.util.Collections.emptyList();;
      private void ensurePackedSfixed64IsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          packedSfixed64_ = new java.util.ArrayList<java.lang.Long>(packedSfixed64_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Long>
          getPackedSfixed64List() {
        return java.util.Collections.unmodifiableList(packedSfixed64_);
      }
      public int getPackedSfixed64Count() {
        return packedSfixed64_.size();
      }
      public long getPackedSfixed64(int index) {
        return packedSfixed64_.get(index);
      }
      public Builder setPackedSfixed64(
          int index, long value) {
        ensurePackedSfixed64IsMutable();
        packedSfixed64_.set(index, value);
        
        return this;
      }
      public Builder addPackedSfixed64(long value) {
        ensurePackedSfixed64IsMutable();
        packedSfixed64_.add(value);
        
        return this;
      }
      public Builder addAllPackedSfixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePackedSfixed64IsMutable();
        super.addAll(values, packedSfixed64_);
        
        return this;
      }
      public Builder clearPackedSfixed64() {
        packedSfixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        
        return this;
      }
      
      // repeated float packed_float = 100 [packed = true];
      private java.util.List<java.lang.Float> packedFloat_ = java.util.Collections.emptyList();;
      private void ensurePackedFloatIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          packedFloat_ = new java.util.ArrayList<java.lang.Float>(packedFloat_);
          bitField0_ |= 0x00000400;
         }
      }
      public java.util.List<java.lang.Float>
          getPackedFloatList() {
        return java.util.Collections.unmodifiableList(packedFloat_);
      }
      public int getPackedFloatCount() {
        return packedFloat_.size();
      }
      public float getPackedFloat(int index) {
        return packedFloat_.get(index);
      }
      public Builder setPackedFloat(
          int index, float value) {
        ensurePackedFloatIsMutable();
        packedFloat_.set(index, value);
        
        return this;
      }
      public Builder addPackedFloat(float value) {
        ensurePackedFloatIsMutable();
        packedFloat_.add(value);
        
        return this;
      }
      public Builder addAllPackedFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePackedFloatIsMutable();
        super.addAll(values, packedFloat_);
        
        return this;
      }
      public Builder clearPackedFloat() {
        packedFloat_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        
        return this;
      }
      
      // repeated double packed_double = 101 [packed = true];
      private java.util.List<java.lang.Double> packedDouble_ = java.util.Collections.emptyList();;
      private void ensurePackedDoubleIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          packedDouble_ = new java.util.ArrayList<java.lang.Double>(packedDouble_);
          bitField0_ |= 0x00000800;
         }
      }
      public java.util.List<java.lang.Double>
          getPackedDoubleList() {
        return java.util.Collections.unmodifiableList(packedDouble_);
      }
      public int getPackedDoubleCount() {
        return packedDouble_.size();
      }
      public double getPackedDouble(int index) {
        return packedDouble_.get(index);
      }
      public Builder setPackedDouble(
          int index, double value) {
        ensurePackedDoubleIsMutable();
        packedDouble_.set(index, value);
        
        return this;
      }
      public Builder addPackedDouble(double value) {
        ensurePackedDoubleIsMutable();
        packedDouble_.add(value);
        
        return this;
      }
      public Builder addAllPackedDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePackedDoubleIsMutable();
        super.addAll(values, packedDouble_);
        
        return this;
      }
      public Builder clearPackedDouble() {
        packedDouble_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        
        return this;
      }
      
      // repeated bool packed_bool = 102 [packed = true];
      private java.util.List<java.lang.Boolean> packedBool_ = java.util.Collections.emptyList();;
      private void ensurePackedBoolIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          packedBool_ = new java.util.ArrayList<java.lang.Boolean>(packedBool_);
          bitField0_ |= 0x00001000;
         }
      }
      public java.util.List<java.lang.Boolean>
          getPackedBoolList() {
        return java.util.Collections.unmodifiableList(packedBool_);
      }
      public int getPackedBoolCount() {
        return packedBool_.size();
      }
      public boolean getPackedBool(int index) {
        return packedBool_.get(index);
      }
      public Builder setPackedBool(
          int index, boolean value) {
        ensurePackedBoolIsMutable();
        packedBool_.set(index, value);
        
        return this;
      }
      public Builder addPackedBool(boolean value) {
        ensurePackedBoolIsMutable();
        packedBool_.add(value);
        
        return this;
      }
      public Builder addAllPackedBool(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePackedBoolIsMutable();
        super.addAll(values, packedBool_);
        
        return this;
      }
      public Builder clearPackedBool() {
        packedBool_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        
        return this;
      }
      
      // repeated .protobuf_unittest.ForeignEnumLite packed_enum = 103 [packed = true];
      private java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> packedEnum_ =
        java.util.Collections.emptyList();
      private void ensurePackedEnumIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          packedEnum_ = new java.util.ArrayList<com.google.protobuf.UnittestLite.ForeignEnumLite>(packedEnum_);
          bitField0_ |= 0x00002000;
        }
      }
      public java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite> getPackedEnumList() {
        return java.util.Collections.unmodifiableList(packedEnum_);
      }
      public int getPackedEnumCount() {
        return packedEnum_.size();
      }
      public com.google.protobuf.UnittestLite.ForeignEnumLite getPackedEnum(int index) {
        return packedEnum_.get(index);
      }
      public Builder setPackedEnum(
          int index, com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackedEnumIsMutable();
        packedEnum_.set(index, value);
        
        return this;
      }
      public Builder addPackedEnum(com.google.protobuf.UnittestLite.ForeignEnumLite value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackedEnumIsMutable();
        packedEnum_.add(value);
        
        return this;
      }
      public Builder addAllPackedEnum(
          java.lang.Iterable<? extends com.google.protobuf.UnittestLite.ForeignEnumLite> values) {
        ensurePackedEnumIsMutable();
        super.addAll(values, packedEnum_);
        
        return this;
      }
      public Builder clearPackedEnum() {
        packedEnum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestPackedTypesLite)
    }
    
    static {
      defaultInstance = new TestPackedTypesLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestPackedTypesLite)
  }
  
  public interface TestAllExtensionsLiteOrBuilder extends 
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<TestAllExtensionsLite> {
  }
  public static final class TestAllExtensionsLite extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        TestAllExtensionsLite> implements TestAllExtensionsLiteOrBuilder {
    // Use TestAllExtensionsLite.newBuilder() to construct.
    private TestAllExtensionsLite(Builder builder) {
      super(builder);
    }
    private TestAllExtensionsLite(boolean noInit) {}
    
    private static final TestAllExtensionsLite defaultInstance;
    public static TestAllExtensionsLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestAllExtensionsLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.UnittestLite.TestAllExtensionsLite>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      extensionWriter.writeUntil(536870912, output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestAllExtensionsLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestAllExtensionsLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.UnittestLite.TestAllExtensionsLite, Builder> implements com.google.protobuf.UnittestLite.TestAllExtensionsLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestAllExtensionsLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestAllExtensionsLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestAllExtensionsLite build() {
        com.google.protobuf.UnittestLite.TestAllExtensionsLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestAllExtensionsLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestAllExtensionsLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestAllExtensionsLite buildPartial() {
        com.google.protobuf.UnittestLite.TestAllExtensionsLite result = new com.google.protobuf.UnittestLite.TestAllExtensionsLite(this);
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestAllExtensionsLite other) {
        if (other == com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance()) return this;
        this.mergeExtensionFields(other);
        return this;
      }
      
      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestAllExtensionsLite)
    }
    
    static {
      defaultInstance = new TestAllExtensionsLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestAllExtensionsLite)
  }
  
  public interface OptionalGroup_extension_liteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int32 a = 17;
    boolean hasA();
    int getA();
  }
  public static final class OptionalGroup_extension_lite extends
      com.google.protobuf.GeneratedMessageLite
      implements OptionalGroup_extension_liteOrBuilder {
    // Use OptionalGroup_extension_lite.newBuilder() to construct.
    private OptionalGroup_extension_lite(Builder builder) {
      super(builder);
    }
    private OptionalGroup_extension_lite(boolean noInit) {}
    
    private static final OptionalGroup_extension_lite defaultInstance;
    public static OptionalGroup_extension_lite getDefaultInstance() {
      return defaultInstance;
    }
    
    public OptionalGroup_extension_lite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int32 a = 17;
    public static final int A_FIELD_NUMBER = 17;
    private int a_;
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getA() {
      return a_;
    }
    
    private void initFields() {
      a_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(17, a_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, a_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.OptionalGroup_extension_lite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.OptionalGroup_extension_lite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.OptionalGroup_extension_lite, Builder>
        implements com.google.protobuf.UnittestLite.OptionalGroup_extension_liteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.OptionalGroup_extension_lite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.OptionalGroup_extension_lite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.OptionalGroup_extension_lite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.OptionalGroup_extension_lite build() {
        com.google.protobuf.UnittestLite.OptionalGroup_extension_lite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.OptionalGroup_extension_lite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.OptionalGroup_extension_lite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.OptionalGroup_extension_lite buildPartial() {
        com.google.protobuf.UnittestLite.OptionalGroup_extension_lite result = new com.google.protobuf.UnittestLite.OptionalGroup_extension_lite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.OptionalGroup_extension_lite other) {
        if (other == com.google.protobuf.UnittestLite.OptionalGroup_extension_lite.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 136: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 a = 17;
      private int a_ ;
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getA() {
        return a_;
      }
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        
        return this;
      }
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.OptionalGroup_extension_lite)
    }
    
    static {
      defaultInstance = new OptionalGroup_extension_lite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.OptionalGroup_extension_lite)
  }
  
  public interface RepeatedGroup_extension_liteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int32 a = 47;
    boolean hasA();
    int getA();
  }
  public static final class RepeatedGroup_extension_lite extends
      com.google.protobuf.GeneratedMessageLite
      implements RepeatedGroup_extension_liteOrBuilder {
    // Use RepeatedGroup_extension_lite.newBuilder() to construct.
    private RepeatedGroup_extension_lite(Builder builder) {
      super(builder);
    }
    private RepeatedGroup_extension_lite(boolean noInit) {}
    
    private static final RepeatedGroup_extension_lite defaultInstance;
    public static RepeatedGroup_extension_lite getDefaultInstance() {
      return defaultInstance;
    }
    
    public RepeatedGroup_extension_lite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int32 a = 47;
    public static final int A_FIELD_NUMBER = 47;
    private int a_;
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getA() {
      return a_;
    }
    
    private void initFields() {
      a_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(47, a_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, a_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite, Builder>
        implements com.google.protobuf.UnittestLite.RepeatedGroup_extension_liteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite build() {
        com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite buildPartial() {
        com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite result = new com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite other) {
        if (other == com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 376: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 a = 47;
      private int a_ ;
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getA() {
        return a_;
      }
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        
        return this;
      }
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.RepeatedGroup_extension_lite)
    }
    
    static {
      defaultInstance = new RepeatedGroup_extension_lite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.RepeatedGroup_extension_lite)
  }
  
  public interface TestPackedExtensionsLiteOrBuilder extends 
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<TestPackedExtensionsLite> {
  }
  public static final class TestPackedExtensionsLite extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        TestPackedExtensionsLite> implements TestPackedExtensionsLiteOrBuilder {
    // Use TestPackedExtensionsLite.newBuilder() to construct.
    private TestPackedExtensionsLite(Builder builder) {
      super(builder);
    }
    private TestPackedExtensionsLite(boolean noInit) {}
    
    private static final TestPackedExtensionsLite defaultInstance;
    public static TestPackedExtensionsLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestPackedExtensionsLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.protobuf.UnittestLite.TestPackedExtensionsLite>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      extensionWriter.writeUntil(536870912, output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += extensionsSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestPackedExtensionsLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestPackedExtensionsLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.protobuf.UnittestLite.TestPackedExtensionsLite, Builder> implements com.google.protobuf.UnittestLite.TestPackedExtensionsLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestPackedExtensionsLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestPackedExtensionsLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestPackedExtensionsLite build() {
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestPackedExtensionsLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestPackedExtensionsLite buildPartial() {
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite result = new com.google.protobuf.UnittestLite.TestPackedExtensionsLite(this);
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestPackedExtensionsLite other) {
        if (other == com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance()) return this;
        this.mergeExtensionFields(other);
        return this;
      }
      
      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestPackedExtensionsLite)
    }
    
    static {
      defaultInstance = new TestPackedExtensionsLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestPackedExtensionsLite)
  }
  
  public interface TestNestedExtensionLiteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  public static final class TestNestedExtensionLite extends
      com.google.protobuf.GeneratedMessageLite
      implements TestNestedExtensionLiteOrBuilder {
    // Use TestNestedExtensionLite.newBuilder() to construct.
    private TestNestedExtensionLite(Builder builder) {
      super(builder);
    }
    private TestNestedExtensionLite(boolean noInit) {}
    
    private static final TestNestedExtensionLite defaultInstance;
    public static TestNestedExtensionLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestNestedExtensionLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestNestedExtensionLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestNestedExtensionLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.TestNestedExtensionLite, Builder>
        implements com.google.protobuf.UnittestLite.TestNestedExtensionLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestNestedExtensionLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestNestedExtensionLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestNestedExtensionLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestNestedExtensionLite build() {
        com.google.protobuf.UnittestLite.TestNestedExtensionLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestNestedExtensionLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestNestedExtensionLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestNestedExtensionLite buildPartial() {
        com.google.protobuf.UnittestLite.TestNestedExtensionLite result = new com.google.protobuf.UnittestLite.TestNestedExtensionLite(this);
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestNestedExtensionLite other) {
        if (other == com.google.protobuf.UnittestLite.TestNestedExtensionLite.getDefaultInstance()) return this;
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestNestedExtensionLite)
    }
    
    static {
      defaultInstance = new TestNestedExtensionLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestNestedExtensionLite)
    public static final int NESTED_EXTENSION_FIELD_NUMBER = 12345;
    public static final
      com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
        com.google.protobuf.UnittestLite.TestAllExtensionsLite,
        java.lang.Integer> nestedExtension = com.google.protobuf.GeneratedMessageLite
            .newSingularGeneratedExtension(
          com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
          0,
          null,
          null,
          12345,
          com.google.protobuf.WireFormat.FieldType.INT32);
  }
  
  public interface TestDeprecatedLiteOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional int32 deprecated_field = 1 [deprecated = true];
    @java.lang.Deprecated boolean hasDeprecatedField();
    @java.lang.Deprecated int getDeprecatedField();
  }
  public static final class TestDeprecatedLite extends
      com.google.protobuf.GeneratedMessageLite
      implements TestDeprecatedLiteOrBuilder {
    // Use TestDeprecatedLite.newBuilder() to construct.
    private TestDeprecatedLite(Builder builder) {
      super(builder);
    }
    private TestDeprecatedLite(boolean noInit) {}
    
    private static final TestDeprecatedLite defaultInstance;
    public static TestDeprecatedLite getDefaultInstance() {
      return defaultInstance;
    }
    
    public TestDeprecatedLite getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int32 deprecated_field = 1 [deprecated = true];
    public static final int DEPRECATED_FIELD_FIELD_NUMBER = 1;
    private int deprecatedField_;
    @java.lang.Deprecated public boolean hasDeprecatedField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @java.lang.Deprecated public int getDeprecatedField() {
      return deprecatedField_;
    }
    
    private void initFields() {
      deprecatedField_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, deprecatedField_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deprecatedField_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.protobuf.UnittestLite.TestDeprecatedLite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.protobuf.UnittestLite.TestDeprecatedLite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.protobuf.UnittestLite.TestDeprecatedLite, Builder>
        implements com.google.protobuf.UnittestLite.TestDeprecatedLiteOrBuilder {
      // Construct using com.google.protobuf.UnittestLite.TestDeprecatedLite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        deprecatedField_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.UnittestLite.TestDeprecatedLite getDefaultInstanceForType() {
        return com.google.protobuf.UnittestLite.TestDeprecatedLite.getDefaultInstance();
      }
      
      public com.google.protobuf.UnittestLite.TestDeprecatedLite build() {
        com.google.protobuf.UnittestLite.TestDeprecatedLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.google.protobuf.UnittestLite.TestDeprecatedLite buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.google.protobuf.UnittestLite.TestDeprecatedLite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.google.protobuf.UnittestLite.TestDeprecatedLite buildPartial() {
        com.google.protobuf.UnittestLite.TestDeprecatedLite result = new com.google.protobuf.UnittestLite.TestDeprecatedLite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deprecatedField_ = deprecatedField_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.UnittestLite.TestDeprecatedLite other) {
        if (other == com.google.protobuf.UnittestLite.TestDeprecatedLite.getDefaultInstance()) return this;
        if (other.hasDeprecatedField()) {
          setDeprecatedField(other.getDeprecatedField());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deprecatedField_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 deprecated_field = 1 [deprecated = true];
      private int deprecatedField_ ;
      @java.lang.Deprecated public boolean hasDeprecatedField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @java.lang.Deprecated public int getDeprecatedField() {
        return deprecatedField_;
      }
      @java.lang.Deprecated public Builder setDeprecatedField(int value) {
        bitField0_ |= 0x00000001;
        deprecatedField_ = value;
        
        return this;
      }
      @java.lang.Deprecated public Builder clearDeprecatedField() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deprecatedField_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf_unittest.TestDeprecatedLite)
    }
    
    static {
      defaultInstance = new TestDeprecatedLite(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf_unittest.TestDeprecatedLite)
  }
  
  public static final int OPTIONAL_INT32_EXTENSION_LITE_FIELD_NUMBER = 1;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> optionalInt32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0,
        null,
        null,
        1,
        com.google.protobuf.WireFormat.FieldType.INT32);
  public static final int OPTIONAL_INT64_EXTENSION_LITE_FIELD_NUMBER = 2;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> optionalInt64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0L,
        null,
        null,
        2,
        com.google.protobuf.WireFormat.FieldType.INT64);
  public static final int OPTIONAL_UINT32_EXTENSION_LITE_FIELD_NUMBER = 3;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> optionalUint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0,
        null,
        null,
        3,
        com.google.protobuf.WireFormat.FieldType.UINT32);
  public static final int OPTIONAL_UINT64_EXTENSION_LITE_FIELD_NUMBER = 4;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> optionalUint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0L,
        null,
        null,
        4,
        com.google.protobuf.WireFormat.FieldType.UINT64);
  public static final int OPTIONAL_SINT32_EXTENSION_LITE_FIELD_NUMBER = 5;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> optionalSint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0,
        null,
        null,
        5,
        com.google.protobuf.WireFormat.FieldType.SINT32);
  public static final int OPTIONAL_SINT64_EXTENSION_LITE_FIELD_NUMBER = 6;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> optionalSint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0L,
        null,
        null,
        6,
        com.google.protobuf.WireFormat.FieldType.SINT64);
  public static final int OPTIONAL_FIXED32_EXTENSION_LITE_FIELD_NUMBER = 7;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> optionalFixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0,
        null,
        null,
        7,
        com.google.protobuf.WireFormat.FieldType.FIXED32);
  public static final int OPTIONAL_FIXED64_EXTENSION_LITE_FIELD_NUMBER = 8;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> optionalFixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0L,
        null,
        null,
        8,
        com.google.protobuf.WireFormat.FieldType.FIXED64);
  public static final int OPTIONAL_SFIXED32_EXTENSION_LITE_FIELD_NUMBER = 9;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> optionalSfixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0,
        null,
        null,
        9,
        com.google.protobuf.WireFormat.FieldType.SFIXED32);
  public static final int OPTIONAL_SFIXED64_EXTENSION_LITE_FIELD_NUMBER = 10;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> optionalSfixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0L,
        null,
        null,
        10,
        com.google.protobuf.WireFormat.FieldType.SFIXED64);
  public static final int OPTIONAL_FLOAT_EXTENSION_LITE_FIELD_NUMBER = 11;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Float> optionalFloatExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0F,
        null,
        null,
        11,
        com.google.protobuf.WireFormat.FieldType.FLOAT);
  public static final int OPTIONAL_DOUBLE_EXTENSION_LITE_FIELD_NUMBER = 12;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Double> optionalDoubleExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        0D,
        null,
        null,
        12,
        com.google.protobuf.WireFormat.FieldType.DOUBLE);
  public static final int OPTIONAL_BOOL_EXTENSION_LITE_FIELD_NUMBER = 13;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Boolean> optionalBoolExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        false,
        null,
        null,
        13,
        com.google.protobuf.WireFormat.FieldType.BOOL);
  public static final int OPTIONAL_STRING_EXTENSION_LITE_FIELD_NUMBER = 14;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> optionalStringExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "",
        null,
        null,
        14,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int OPTIONAL_BYTES_EXTENSION_LITE_FIELD_NUMBER = 15;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.ByteString> optionalBytesExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.ByteString.EMPTY,
        null,
        null,
        15,
        com.google.protobuf.WireFormat.FieldType.BYTES);
  public static final int OPTIONALGROUP_EXTENSION_LITE_FIELD_NUMBER = 16;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.OptionalGroup_extension_lite> optionalGroupExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.OptionalGroup_extension_lite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.OptionalGroup_extension_lite.getDefaultInstance(),
        null,
        16,
        com.google.protobuf.WireFormat.FieldType.GROUP);
  public static final int OPTIONAL_NESTED_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 18;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage> optionalNestedMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance(),
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance(),
        null,
        18,
        com.google.protobuf.WireFormat.FieldType.MESSAGE);
  public static final int OPTIONAL_FOREIGN_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 19;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.ForeignMessageLite> optionalForeignMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance(),
        null,
        19,
        com.google.protobuf.WireFormat.FieldType.MESSAGE);
  public static final int OPTIONAL_IMPORT_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 20;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestImportLite.ImportMessageLite> optionalImportMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance(),
        com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance(),
        null,
        20,
        com.google.protobuf.WireFormat.FieldType.MESSAGE);
  public static final int OPTIONAL_NESTED_ENUM_EXTENSION_LITE_FIELD_NUMBER = 21;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> optionalNestedEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.FOO,
        null,
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.internalGetValueMap(),
        21,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int OPTIONAL_FOREIGN_ENUM_EXTENSION_LITE_FIELD_NUMBER = 22;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.ForeignEnumLite> optionalForeignEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_FOO,
        null,
        com.google.protobuf.UnittestLite.ForeignEnumLite.internalGetValueMap(),
        22,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int OPTIONAL_IMPORT_ENUM_EXTENSION_LITE_FIELD_NUMBER = 23;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestImportLite.ImportEnumLite> optionalImportEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_FOO,
        null,
        com.google.protobuf.UnittestImportLite.ImportEnumLite.internalGetValueMap(),
        23,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int OPTIONAL_STRING_PIECE_EXTENSION_LITE_FIELD_NUMBER = 24;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> optionalStringPieceExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "",
        null,
        null,
        24,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int OPTIONAL_CORD_EXTENSION_LITE_FIELD_NUMBER = 25;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> optionalCordExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "",
        null,
        null,
        25,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int REPEATED_INT32_EXTENSION_LITE_FIELD_NUMBER = 31;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Integer>> repeatedInt32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        31,
        com.google.protobuf.WireFormat.FieldType.INT32,
        false);
  public static final int REPEATED_INT64_EXTENSION_LITE_FIELD_NUMBER = 32;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Long>> repeatedInt64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        32,
        com.google.protobuf.WireFormat.FieldType.INT64,
        false);
  public static final int REPEATED_UINT32_EXTENSION_LITE_FIELD_NUMBER = 33;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Integer>> repeatedUint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        33,
        com.google.protobuf.WireFormat.FieldType.UINT32,
        false);
  public static final int REPEATED_UINT64_EXTENSION_LITE_FIELD_NUMBER = 34;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Long>> repeatedUint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        34,
        com.google.protobuf.WireFormat.FieldType.UINT64,
        false);
  public static final int REPEATED_SINT32_EXTENSION_LITE_FIELD_NUMBER = 35;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Integer>> repeatedSint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        35,
        com.google.protobuf.WireFormat.FieldType.SINT32,
        false);
  public static final int REPEATED_SINT64_EXTENSION_LITE_FIELD_NUMBER = 36;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Long>> repeatedSint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        36,
        com.google.protobuf.WireFormat.FieldType.SINT64,
        false);
  public static final int REPEATED_FIXED32_EXTENSION_LITE_FIELD_NUMBER = 37;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Integer>> repeatedFixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        37,
        com.google.protobuf.WireFormat.FieldType.FIXED32,
        false);
  public static final int REPEATED_FIXED64_EXTENSION_LITE_FIELD_NUMBER = 38;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Long>> repeatedFixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        38,
        com.google.protobuf.WireFormat.FieldType.FIXED64,
        false);
  public static final int REPEATED_SFIXED32_EXTENSION_LITE_FIELD_NUMBER = 39;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Integer>> repeatedSfixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        39,
        com.google.protobuf.WireFormat.FieldType.SFIXED32,
        false);
  public static final int REPEATED_SFIXED64_EXTENSION_LITE_FIELD_NUMBER = 40;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Long>> repeatedSfixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        40,
        com.google.protobuf.WireFormat.FieldType.SFIXED64,
        false);
  public static final int REPEATED_FLOAT_EXTENSION_LITE_FIELD_NUMBER = 41;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Float>> repeatedFloatExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        41,
        com.google.protobuf.WireFormat.FieldType.FLOAT,
        false);
  public static final int REPEATED_DOUBLE_EXTENSION_LITE_FIELD_NUMBER = 42;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Double>> repeatedDoubleExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        42,
        com.google.protobuf.WireFormat.FieldType.DOUBLE,
        false);
  public static final int REPEATED_BOOL_EXTENSION_LITE_FIELD_NUMBER = 43;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.Boolean>> repeatedBoolExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        43,
        com.google.protobuf.WireFormat.FieldType.BOOL,
        false);
  public static final int REPEATED_STRING_EXTENSION_LITE_FIELD_NUMBER = 44;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.String>> repeatedStringExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        44,
        com.google.protobuf.WireFormat.FieldType.STRING,
        false);
  public static final int REPEATED_BYTES_EXTENSION_LITE_FIELD_NUMBER = 45;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.ByteString>> repeatedBytesExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        45,
        com.google.protobuf.WireFormat.FieldType.BYTES,
        false);
  public static final int REPEATEDGROUP_EXTENSION_LITE_FIELD_NUMBER = 46;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite>> repeatedGroupExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.RepeatedGroup_extension_lite.getDefaultInstance(),
        null,
        46,
        com.google.protobuf.WireFormat.FieldType.GROUP,
        false);
  public static final int REPEATED_NESTED_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 48;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage>> repeatedNestedMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedMessage.getDefaultInstance(),
        null,
        48,
        com.google.protobuf.WireFormat.FieldType.MESSAGE,
        false);
  public static final int REPEATED_FOREIGN_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 49;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.ForeignMessageLite>> repeatedForeignMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.ForeignMessageLite.getDefaultInstance(),
        null,
        49,
        com.google.protobuf.WireFormat.FieldType.MESSAGE,
        false);
  public static final int REPEATED_IMPORT_MESSAGE_EXTENSION_LITE_FIELD_NUMBER = 50;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestImportLite.ImportMessageLite>> repeatedImportMessageExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestImportLite.ImportMessageLite.getDefaultInstance(),
        null,
        50,
        com.google.protobuf.WireFormat.FieldType.MESSAGE,
        false);
  public static final int REPEATED_NESTED_ENUM_EXTENSION_LITE_FIELD_NUMBER = 51;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum>> repeatedNestedEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.internalGetValueMap(),
        51,
        com.google.protobuf.WireFormat.FieldType.ENUM,
        false);
  public static final int REPEATED_FOREIGN_ENUM_EXTENSION_LITE_FIELD_NUMBER = 52;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite>> repeatedForeignEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        com.google.protobuf.UnittestLite.ForeignEnumLite.internalGetValueMap(),
        52,
        com.google.protobuf.WireFormat.FieldType.ENUM,
        false);
  public static final int REPEATED_IMPORT_ENUM_EXTENSION_LITE_FIELD_NUMBER = 53;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<com.google.protobuf.UnittestImportLite.ImportEnumLite>> repeatedImportEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        com.google.protobuf.UnittestImportLite.ImportEnumLite.internalGetValueMap(),
        53,
        com.google.protobuf.WireFormat.FieldType.ENUM,
        false);
  public static final int REPEATED_STRING_PIECE_EXTENSION_LITE_FIELD_NUMBER = 54;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.String>> repeatedStringPieceExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        54,
        com.google.protobuf.WireFormat.FieldType.STRING,
        false);
  public static final int REPEATED_CORD_EXTENSION_LITE_FIELD_NUMBER = 55;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.util.List<java.lang.String>> repeatedCordExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        null,
        null,
        55,
        com.google.protobuf.WireFormat.FieldType.STRING,
        false);
  public static final int DEFAULT_INT32_EXTENSION_LITE_FIELD_NUMBER = 61;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> defaultInt32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        41,
        null,
        null,
        61,
        com.google.protobuf.WireFormat.FieldType.INT32);
  public static final int DEFAULT_INT64_EXTENSION_LITE_FIELD_NUMBER = 62;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> defaultInt64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        42L,
        null,
        null,
        62,
        com.google.protobuf.WireFormat.FieldType.INT64);
  public static final int DEFAULT_UINT32_EXTENSION_LITE_FIELD_NUMBER = 63;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> defaultUint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        43,
        null,
        null,
        63,
        com.google.protobuf.WireFormat.FieldType.UINT32);
  public static final int DEFAULT_UINT64_EXTENSION_LITE_FIELD_NUMBER = 64;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> defaultUint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        44L,
        null,
        null,
        64,
        com.google.protobuf.WireFormat.FieldType.UINT64);
  public static final int DEFAULT_SINT32_EXTENSION_LITE_FIELD_NUMBER = 65;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> defaultSint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        -45,
        null,
        null,
        65,
        com.google.protobuf.WireFormat.FieldType.SINT32);
  public static final int DEFAULT_SINT64_EXTENSION_LITE_FIELD_NUMBER = 66;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> defaultSint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        46L,
        null,
        null,
        66,
        com.google.protobuf.WireFormat.FieldType.SINT64);
  public static final int DEFAULT_FIXED32_EXTENSION_LITE_FIELD_NUMBER = 67;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> defaultFixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        47,
        null,
        null,
        67,
        com.google.protobuf.WireFormat.FieldType.FIXED32);
  public static final int DEFAULT_FIXED64_EXTENSION_LITE_FIELD_NUMBER = 68;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> defaultFixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        48L,
        null,
        null,
        68,
        com.google.protobuf.WireFormat.FieldType.FIXED64);
  public static final int DEFAULT_SFIXED32_EXTENSION_LITE_FIELD_NUMBER = 69;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Integer> defaultSfixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        49,
        null,
        null,
        69,
        com.google.protobuf.WireFormat.FieldType.SFIXED32);
  public static final int DEFAULT_SFIXED64_EXTENSION_LITE_FIELD_NUMBER = 70;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Long> defaultSfixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        -50L,
        null,
        null,
        70,
        com.google.protobuf.WireFormat.FieldType.SFIXED64);
  public static final int DEFAULT_FLOAT_EXTENSION_LITE_FIELD_NUMBER = 71;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Float> defaultFloatExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        51.5F,
        null,
        null,
        71,
        com.google.protobuf.WireFormat.FieldType.FLOAT);
  public static final int DEFAULT_DOUBLE_EXTENSION_LITE_FIELD_NUMBER = 72;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Double> defaultDoubleExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        52000D,
        null,
        null,
        72,
        com.google.protobuf.WireFormat.FieldType.DOUBLE);
  public static final int DEFAULT_BOOL_EXTENSION_LITE_FIELD_NUMBER = 73;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.Boolean> defaultBoolExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        true,
        null,
        null,
        73,
        com.google.protobuf.WireFormat.FieldType.BOOL);
  public static final int DEFAULT_STRING_EXTENSION_LITE_FIELD_NUMBER = 74;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> defaultStringExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "hello",
        null,
        null,
        74,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int DEFAULT_BYTES_EXTENSION_LITE_FIELD_NUMBER = 75;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.ByteString> defaultBytesExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.Internal.bytesDefaultValue("world"),
        null,
        null,
        75,
        com.google.protobuf.WireFormat.FieldType.BYTES);
  public static final int DEFAULT_NESTED_ENUM_EXTENSION_LITE_FIELD_NUMBER = 81;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum> defaultNestedEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.BAR,
        null,
        com.google.protobuf.UnittestLite.TestAllTypesLite.NestedEnum.internalGetValueMap(),
        81,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int DEFAULT_FOREIGN_ENUM_EXTENSION_LITE_FIELD_NUMBER = 82;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestLite.ForeignEnumLite> defaultForeignEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestLite.ForeignEnumLite.FOREIGN_LITE_BAR,
        null,
        com.google.protobuf.UnittestLite.ForeignEnumLite.internalGetValueMap(),
        82,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int DEFAULT_IMPORT_ENUM_EXTENSION_LITE_FIELD_NUMBER = 83;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      com.google.protobuf.UnittestImportLite.ImportEnumLite> defaultImportEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        com.google.protobuf.UnittestImportLite.ImportEnumLite.IMPORT_LITE_BAR,
        null,
        com.google.protobuf.UnittestImportLite.ImportEnumLite.internalGetValueMap(),
        83,
        com.google.protobuf.WireFormat.FieldType.ENUM);
  public static final int DEFAULT_STRING_PIECE_EXTENSION_LITE_FIELD_NUMBER = 84;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> defaultStringPieceExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "abc",
        null,
        null,
        84,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int DEFAULT_CORD_EXTENSION_LITE_FIELD_NUMBER = 85;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestAllExtensionsLite,
      java.lang.String> defaultCordExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        com.google.protobuf.UnittestLite.TestAllExtensionsLite.getDefaultInstance(),
        "123",
        null,
        null,
        85,
        com.google.protobuf.WireFormat.FieldType.STRING);
  public static final int PACKED_INT32_EXTENSION_LITE_FIELD_NUMBER = 90;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Integer>> packedInt32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        90,
        com.google.protobuf.WireFormat.FieldType.INT32,
        true);
  public static final int PACKED_INT64_EXTENSION_LITE_FIELD_NUMBER = 91;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Long>> packedInt64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        91,
        com.google.protobuf.WireFormat.FieldType.INT64,
        true);
  public static final int PACKED_UINT32_EXTENSION_LITE_FIELD_NUMBER = 92;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Integer>> packedUint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        92,
        com.google.protobuf.WireFormat.FieldType.UINT32,
        true);
  public static final int PACKED_UINT64_EXTENSION_LITE_FIELD_NUMBER = 93;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Long>> packedUint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        93,
        com.google.protobuf.WireFormat.FieldType.UINT64,
        true);
  public static final int PACKED_SINT32_EXTENSION_LITE_FIELD_NUMBER = 94;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Integer>> packedSint32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        94,
        com.google.protobuf.WireFormat.FieldType.SINT32,
        true);
  public static final int PACKED_SINT64_EXTENSION_LITE_FIELD_NUMBER = 95;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Long>> packedSint64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        95,
        com.google.protobuf.WireFormat.FieldType.SINT64,
        true);
  public static final int PACKED_FIXED32_EXTENSION_LITE_FIELD_NUMBER = 96;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Integer>> packedFixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        96,
        com.google.protobuf.WireFormat.FieldType.FIXED32,
        true);
  public static final int PACKED_FIXED64_EXTENSION_LITE_FIELD_NUMBER = 97;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Long>> packedFixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        97,
        com.google.protobuf.WireFormat.FieldType.FIXED64,
        true);
  public static final int PACKED_SFIXED32_EXTENSION_LITE_FIELD_NUMBER = 98;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Integer>> packedSfixed32ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        98,
        com.google.protobuf.WireFormat.FieldType.SFIXED32,
        true);
  public static final int PACKED_SFIXED64_EXTENSION_LITE_FIELD_NUMBER = 99;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Long>> packedSfixed64ExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        99,
        com.google.protobuf.WireFormat.FieldType.SFIXED64,
        true);
  public static final int PACKED_FLOAT_EXTENSION_LITE_FIELD_NUMBER = 100;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Float>> packedFloatExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        100,
        com.google.protobuf.WireFormat.FieldType.FLOAT,
        true);
  public static final int PACKED_DOUBLE_EXTENSION_LITE_FIELD_NUMBER = 101;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Double>> packedDoubleExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        101,
        com.google.protobuf.WireFormat.FieldType.DOUBLE,
        true);
  public static final int PACKED_BOOL_EXTENSION_LITE_FIELD_NUMBER = 102;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<java.lang.Boolean>> packedBoolExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        null,
        102,
        com.google.protobuf.WireFormat.FieldType.BOOL,
        true);
  public static final int PACKED_ENUM_EXTENSION_LITE_FIELD_NUMBER = 103;
  public static final
    com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
      com.google.protobuf.UnittestLite.TestPackedExtensionsLite,
      java.util.List<com.google.protobuf.UnittestLite.ForeignEnumLite>> packedEnumExtensionLite = com.google.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        com.google.protobuf.UnittestLite.TestPackedExtensionsLite.getDefaultInstance(),
        null,
        com.google.protobuf.UnittestLite.ForeignEnumLite.internalGetValueMap(),
        103,
        com.google.protobuf.WireFormat.FieldType.ENUM,
        true);
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
